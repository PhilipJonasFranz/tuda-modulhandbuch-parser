[
    {
        "Modulname": "Mentorensystem",
        "Modul Nr.": "20-00-0000",
        "Kreditpunkte": "0 CP",
        "Arbeitsaufwand": "h",
        "Selbststudium": "h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0000-ttMentorensystem 0 Tutorium",
            "Lerninhalt": "In wöchentlichen Gesprächen zwischen einem erfahrenen Studierenden aus höherem Semester (Mentor_in) und einem Studierenden im ersten Semester (Mentee) werden folgende Inhalte thematisiert:- Selbstorganisation zu Studienbeginn- Orientierung in Bezug auf die Anforderungen des B. Sc. Informatik- Nutzung von Lerngruppen- Lernen an der Universität und Reflexion des Lernstandes- Teamarbeit im Studium- Umgang mit Prüfungen und Prüfungsvorbereitung- Organisation und Strukturierung der Prüfungsphase",
            "Qualifikationsziele_Lernergebnisse": "Das Mentorensystem zielt darauf ab, dass die Studierenden ihr Studium selbstorganisiert strukturieren und planen, sodass sie zielorientiert studieren. Die Studierenden sind am Ende des Moduls in der Lage die Grundstruktur des Studiums zu erkennen sowie die Anforderungen der Studienfächer abzuschätzen und dementsprechend ihr Studium zu optimieren. Weiterhin sind sie in der Lage verschiedene Vorgehensweisen beim Lernen an der Universität zu reflektieren und auf ihr eigenes Lernverhalten zu übertragen.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "bnb",
            "Verwendbarkeit_des_Moduls": "B. Sc. Informatik",
            "Literatur": "Die Materialien zum Mentorensystem werden über den entsprechenden Moodle-Kurs bereitgestellt.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Funktionale und objektorientierte Programmierkonzepte",
        "Modul Nr.": "20-00-0004",
        "Kreditpunkte": "10 CP",
        "Arbeitsaufwand": "300 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0004-ivFunktionale und objektorientierte Programmierkonzepte10 integrierte Lehrveranstaltung8",
            "Lerninhalt": "Essentielle Kompetenzen in wissenschaftlich basierter, problemorientierter Entwicklung von Softwaresystemen. Vermittlung grundlegender Begriffe der Informatik, sowie Entwicklung einfacher Programmierfähigkeiten. Verstehen der Bedeutung von Abstraktion und Modellierung in der Informatik.Themenschwerpunkte sind:- Grundlegende Programmierkonzepte - Grundlagen der funktionalen Programmierung- Grundlagen der objektorientierten Programmierung - Entwurf einfacher Softwaresysteme- Einfache Typsysteme- Grundlegende Datenstrukturen und Algorithmen und ihre Komplexität- Rekursion- Einfache Ein-/Ausgabe- Grundlagen des Testens- Dokumentation von Sourcecode ",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss der Veranstaltung sind Studierende mit den Grundlagen von funktionalen und objektorientierten Programmiersprachen vertraut und die Studierenden können die folgenden Aufgaben bewältigen:- einfache Programmieraufgaben mit Hilfe von funktionalen und/oder objektorientierten Programmiersprachen systematisch lösen;- Qualitätssicherung mittels einfacher (Unit-) Tests durchführen;- die Komplexitätsklassen von Algorithmen und Datenstrukturen verstehen und darauf basierend die Eignung selbiger für konkrete Aufgaben einschätzen;- Sourcecode grundlegend unter Zuhilfenahme von Standardwerkzeugen dokumentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich 120 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikB. Sc. Computational EngineeringB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- How to Design Programs; M. Felleisen et al.; The MIT Press Cambridge- Structure and Interpretation of Computer Programs; H. Abelson et al.; Springer- Thinking in Java; B. Eckel; Prentice Hall- Christian Ullenboom: Java ist auch eine Insel; Galileo Computing",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Digitaltechnik",
        "Modul Nr.": "20-00-0900",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0900-ivDigitaltechnik 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Digitaltechnik: digitale Abstraktion und ihre technische Umsetzung, Zahlensysteme, Logikgatter, MOSFET Transistoren und CMOS Gatter, Leistungsaufnahme- Kombinatorische Schaltungen: Boole\u2019sche Gleichungen und Algebra, Abbildung auf Gatter, mehrstufige Schaltungen, vierwertige Logik (0,1,X,Z), Minimierung von Ausdrücken, kombinatorische Grundelemente, Zeitverhalten - Sequentielle Schaltungen: Latches, Flip-Flops, Entwurf synchroner Schaltungen, endliche Automaten, Zeitverhalten, Parallelität- Hardware-Beschreibungssprachen: Modellierung kombinatorischer und sequentieller Schaltungen, Strukturbeschreibungen, Modellierung endlicher Automaten, Datentypen, parametrisierte Module, Testrahmen- Grundelemente digitaler Schaltungen: arithmetische Schaltungen, Fest-/Gleitkommadarstellung, sequentielle Grundelemente, Speicherfelder, Logikfelder ",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die Konzepte und Grundelemente der digitalen Logik sowie ihre technologische Realisierung. Sie können diese Kenntnisse selbständig anwenden, um zielgerichtet kombinatorische und sequentielle Schaltungen zu konstruieren und in einer Hardware-Beschreibungssprache zu implementieren. Sie können digitale Schaltungen bezüglich funktionaler und nicht-funktionaler Eigenschaften analysieren.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für die verwendete Literatur könnte seinHarris/Harris: Digital Design and Computer Architecture",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Mathematik I (für Informatik und Wirtschaftsinformatik)",
        "Modul Nr.": "04-00-",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "h",
        "Selbststudium": "h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Robert Haller-Dintelmann",
        "kurs": {
            "Kurse_des_Moduls": "04-00-0128-vuMathematik I (für Informatik und Wirtschaftsinformatik)9 Vorlesung und Übung6",
            "Lerninhalt": "Grundlagen: Relationen, Abbildungen, Gruppen, Ringe, Körper, komplexe Zahlen;Lineare Algebra: Vektorräume, Basen, Skalarprodukte, lineare Abbildungen, lineare Gleichungssysteme, Basiswechsel, Determinanten, Eigenwerttheorie;Analysis in R: Folgen, Konvergenz, Asymptotik, Reihen, Kompaktheit.",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss des Moduls können die Studierenden:- mit abstrakten Begriffen präzise umgehen, Beweise nachvollziehen, Beweisideen erläutern und auch selbstständig Beweise führen,- die axiomatisch-deduktive Vorgehensweise der Mathematik verstehen und anwenden,- die vermittelten Kenntnisse und Begriffe aus zentralen Gebieten der Mathematikgrundausbildung beherrschen, so dass sie diese für die verschiedenen Anwendungen in der Informatik nutzen können.Die Studierenden sollen- mit mathematischer Methodik und Fachkultur vertraut sein.- in der Lage sein, aufbauend auf das vermittelte Grundwissen Mathematik, weitere mathematische Inhalte selbstständig zu erarbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Skript der Veranstaltung",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Automaten, formale Sprachen und Entscheidbarkeit",
        "Modul Nr.": "04-00-",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "h",
        "Selbststudium": "h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "M. Otto",
        "kurs": {
            "Kurse_des_Moduls": "04-00-0091-vuAutomaten, formale Sprachen und EntscheidbarkeitVorlesung und Übung3",
            "Lerninhalt": "Einführung: Transitionssysteme, Wörter, Sprachen; Mathematische Grundbegriffe und elementare Beweismethoden; Endliche Automaten und reguläre Sprachen; Determinismus und Nichtdeterminismus, Abschlusseigenschaften und Automatenkonstruktionen; Sätze von Kleene, Myhill-Nerode, Pumping Lemma; Grammatiken und die Chomsky-Hierarchie; kontextfreie Sprachen, Abschlusseigenschaften, Pumping Lemma, CYK Algorithmus; Berechnungsmodelle: Kellerautomaten, Turingmaschinen; Entscheidbarkeit und Aufzählbarkeit in der Chomsky-Hierarchie",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden lernen elementare Techniken und Methoden der diskreten Mathematik im Umfeld von formalen Sprachen und Automaten kennen und anzuwenden; sie lernen,endliche Automaten als Beispiel eines fundamentalen Berechnungsmodells operational und semantisch zu interpretieren und zu analysieren.Sie verfügen über die notwendigen Grundkenntnisse, Grammatiken und formale Sprachen im Rahmen der Chomsky-Hierarchie und zugehöriger Berechnungsmodelle einzuordnen und zu analysieren.",
            "Voraussetzung_fuer_die_Teilnahme": "keine",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "keine",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "Pflichtveranstaltung in Informatik-StudiengängenBestandteil des BSc-Mathematikmoduls -Formale Grundlagen der Informatik'",
            "Literatur": "Schöning: Theoretische Informatik --kurz gefasstHopcroft, Motwani, Ullman: Einführung in die Automatentheorie, formale Sprachen und KomplexitätstheorieWegener: Theoretische Informatik --eine algorithmenorientierte EinführungSkript (elektronisch unter [url=http://www.mathematik.tu-darmstadt.de/~otto]www.mathematik.tu-darmstadt.de&#47;~otto[/url])",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Algorithmen und Datenstrukturen",
        "Modul Nr.": "20-00-0005",
        "Kreditpunkte": "10 CP",
        "Arbeitsaufwand": "300 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0005-ivAlgorithmen und Datenstrukturen 10 integrierte Lehrveranstaltung8",
            "Lerninhalt": "- Datenstrukturen: Array, Listen, Binäre Suchbäume, B-Bäume, Graphenräprentationen, Hashtabellen, Heaps- Algorithmen: Sortieralgorithmen, Stringmatching, Traversieren, Einfügen, Suchen und Löschen bei bestimmten Datenstrukturen, Kürzeste Wege Suche, Minimal Spannende Bäume- Asymptotische Komplexität- NP-Vollständigkeit- Algorithmisches Strategien: Divide-and-Conquer, Dynamische Programmierung, Brute-Force, Greedy, Backtracking, Metaheuristiken",
            "Qualifikationsziele_Lernergebnisse": "In dieser Veranstaltung lernen Studierende grundlegende Datenstrukturen und Algorithmen sowie die Komplexitätsklassen P, NP und NPC kennen. Sie erwerben die Fähigkeiten die Grundprinzipien der Algorithmik anzuwenden und asymptotische Komplexität einzuschätzen und zu bestimmen. Außerdem verstehen sie bedeutende algorithmische Strategien und können diese anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte",
            "Pruefungsform": "Fachprüfung schriftlich 120 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikB. Sc. Computational EngineeringB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Rechnerorganisation",
        "Modul Nr.": "20-00-0902",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0902-ivRechnerorganisation 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Architektur von Mikroprozessoren: Programmierung in Assembler- und Maschinensprache, Adressierungsarten, Werkzeugflüsse, Laufzeitumgebung- Mikroarchitektur: Befehlssatz und architektureller Zustand, Leistungsbewertung, Mikroarchitekturen mit Eintakt-/Mehrtakt-/Pipeline-Ausführung, Ausnahmebehandlung, fortgeschrittene Mikroarchitekturen- Speicher und Ein-/Ausgabesysteme: Leistungsbewertung, Caches, virtueller Speicher, Ein-/Ausgabetechniken, Standardschnittstellen",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die Grundkonzepte der maschinennahen Programmierung in Assembler und können zielgerichtet auf dieser Ebene Algorithmen implementieren. Sie sind vertraut mit verschiedenen Techniken, um selbständig Prozessorarchitekturen als Mikroarchitekturen in digitaler Logik zu realisieren. Sie verstehen den Aufbau und die Funktion von Speicher- und Ein-/Ausgabesystemen und kennen die Grundlagen verschiedener Standardschnitsttellen. Sie können die Qualität der Realisierungen in verschiedenen Gütemaßen bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Besuch der Vorlesung 'Digitaltechnik' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Besuch der Vorlesung 'Digitaltechnik' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für verwendete Literatur könnte sein:Harris/Harris: Digital Design and Computer Architecture",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Mathematik II (für Informatik und Wirtschaftsinformatik)",
        "Modul Nr.": "04-00-",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "h",
        "Selbststudium": "h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Robert Haller-Dintelmann",
        "kurs": {
            "Kurse_des_Moduls": "04-00-0119-vuMathematik II (für Informatik und Wirtschaftsinformatik)9 Vorlesung und Übung6",
            "Lerninhalt": "- Analysis in R: Stetigkeit, Potenzreihen, Elementarfunktionen, Differenzial- und Integralrechnung,Satz von Taylor, Extremwerte, Fourierreihen- Analysis mehrer Veränderlicher: Stetigkeit, partielle und totale Differenzierbarkeit, Extremwerte- Gewöhnliche Differentialgleichungen: Systeme linearer DGLen, Satz von Picard-Lindelöf- Allgemeine Algebra: Algebren und Unteralgebren, Homomorphismen, Quotienten",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss des Moduls können die Studierenden:- mit abstrakten Begriffen präzise umgehen, Beweise nachvollziehen, Beweisideen erläutern und auch selbstständig Beweise führen,- die axiomatisch-deduktive Vorgehensweise der Mathematik verstehen und anwenden,- die vermittelten Kenntnisse und Begriffe aus zentralen Gebieten der Mathematikgrundausbildung beherrschen, so dass sie diese für die verschiedenen Anwendungen in der Informatik nutzen können.Die Studierenden sollen- mit mathematischer Methodik und Fachkultur vertraut sein.- in der Lage sein, aufbauend auf das vermittelte Grundwissen Mathematik, weitere mathematische Inhalte selbstständig zu erarbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Mathematik I",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Mathematik I",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Skript der Veranstaltung",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aussagen- und Prädikatenlogik",
        "Modul Nr.": "04-00-",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "h",
        "Selbststudium": "h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "M. Otto",
        "kurs": {
            "Kurse_des_Moduls": "04-00-0090-vuAussagen- und Prädikatenlogik Vorlesung undÜbung3",
            "Lerninhalt": "Syntax und Semantik der Aussagenlogik, funktionale Vollständigkeit und Normalformen, Kompaktheitssatz der Aussagenlogik, vollständige Beweiskalküle: Resolution und ein Sequenzenkalkül;Syntax und Semantik der Logik erster Stufe, Strukturen und Belegungen, Normalformen und Skolemisierung, der Satz von Herbrand und der Kompaktheitssatz der Logik erster Stufe, vollständige Beweiskalküle: (Grundinstanzen-)Resolution und ein Sequenzenkalkül,Gödelscher Vollständigkeitssatz, Unentscheidbarkeit der Logik erster Stufe;optional: Exkurse zu Ausdrucksstärke und model checking",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden werden mit Inhalten und Methoden der mathematischen Logik und ihrer Rolle in der Informatik vertraut gemacht. Sie lernen die grundlegenden Begriffe und Resultate der Logik, insbesondere der Logik erster Stufe, kennen und anzuwenden. Sie beherrschen die grundsätzlichen mathematischen Methoden in der Behandlung von Syntax, Semantik und formalen Beweisen, sowie die Diskussion einfacher modelltheoretischer und algorithmischer Aspekte der behandelten logischen Systeme",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: mathematische Allgemeinbildung und -Automaten, formale Sprachen und Entscheidbarkeit'",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.Studienleistung schriftlich/mündlichDas erfolgreiche Bestehen der Studienleistung ist Zulassungsvoraussetzung zur Fachprüfung.Studienleistungen können erworben werden durch Übungsaufgaben, Praktikumsaufgaben, Vorträge, oder ähnlichen zu mehreren Gelegenheiten absolvierbaren Leistungsüberprüfungen. Für eine Zulassung sollten nicht mehr als 50% der in all diesen Bereichen erzielbaren Leistungen erforderlich sein.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: mathematische Allgemeinbildung und -Automaten, formale Sprachen und Entscheidbarkeit'",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "Pflichtveranstaltung in Informatikstudiengängen Bestandteil des BSc-Mathematikmoduls -Formale Grundlagen der Informatik'",
            "Literatur": "Burris: Logic for Mathematics and Computer ScienceSchöning: Logik für InformatikerBoolos, Burgess, Jeffrey: Computability and LogicSkript (2 Teile, elektronisch unter www.mathematik.tu-darmstadt.de&#47;\u02dcotto)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software Engineering",
        "Modul Nr.": "20-00-0017",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0017-ivSoftware Engineering 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Vermittlung eines grundlegenden Überblicks über die wesentlichen Bereiche des Software Engineering sowie der Kenntnisse und Fähigkeiten, die für die Modellierung und Realisierung kleinerer Softwaresysteme notwendig sind. Die Schwerpunkthemen sind:- Softwareprojektmangement - Softwareprozessmodelle- Anforderungsmanagement- Softwareentwicklungswerkzeuge- Software Qualität; insbesondere:\u25cb Testprozesse (automatisiertes Testen, Testabdeckungsmaße, Debugging)\u25cb grundlegende Softwaremetriken- Objektorientierte Analyse und Entwurf- Modellierung mittels UML- Entwurfsmuster (Design Patterns)",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Abschluss der Veranstaltung sind die Studierenden in der Lage folgende Aufgaben zu bewältigen:- Die wesentlichen Bereiche des Software Engineering zu benennen und im Kontext eines Softwareentwicklungsprojekts einzuordnen;- Etablierte Softwareentwicklungswerkzeuge zielgerichtet einzusetzen;- Grundlegende Qualitätssicherung mit Hilfe von automatisierten Tests durchzuführen;- Entwurf und Implementierung von objektorientierten Systemen unter Einsatz von UML und grundlegender Entwurfsmuster.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Funktionale und Objektorientierte ProgrammierkonzepteAlgorithmen und Datenstrukturen",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Funktionale und Objektorientierte ProgrammierkonzepteAlgorithmen und Datenstrukturen",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. Computational EngineeringB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Lehrbuch der Softwaretechnik: Softwaremanagement; H. Balzert; Springer- Design Patterns - Elements of Reusable Object-Oriented Software; E. Gamma, R. Helm, R. Johnson, J. Vlissides; Prentice Hall - Software Qualität - Testen, Analysieren und Verifizieren von Software; P. Liggesmeyer; Springer- WHY PROGRAMS FAIL: A Guide to Systematic Debugging; A. Zeller; Morgan Kaufmann- Writing Effective Use Cases; A. Cockburn; Pearson",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Computersystemsicherheit",
        "Modul Nr.": "20-00-0018",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0018-ivComputersystemsicherheit 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Teil I: Kryptographie- Mathematische Grundlagen der Kryptographie- Schutzziele: Vertraulichkeit, Integrität, Authentizität- Symmetrische und Asymmetrische Kryptographie- Hash-Funktionen und Digitale Signaturen- Protokolle zum SchlüsseltauschTeil II: IT-Sicherheit und Zuverlässigkeit- Grundlegende Konzepte der IT-Sicherheit- Authentifizierung und Biometrie- Access Control Modelle und Mechanismen- Grundkonzepte der Netzwerksicherheit- Grundkonzepte der Software-Sicherheit- Zuverlässige Systeme: Fehlertoleranz, Redundanz, Verfügbarkeit",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die wichtigsten Konzepte, Methoden und Modelle im Bereich der Kryptographie und der IT-Sicherheit. Sie verstehen die wichtigsten Methoden, um Software und Hardwaresysteme gegen Angriffe abzusichern und können diese auf konkrete Szenarien anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- J. Buchmann, Einführung in die Kryptographie, Springer-Verlag, 2010- C. Eckert, IT-Sicherheit, Oldenbourg Verlag, 2013- M. Bishop, Computer Security: Art and Science, Addison Wesley, 2004",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Einführung in den Compilerbau",
        "Modul Nr.": "20-00-0904",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0904-ivEinführung in den Compilerbau 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Aufbau von Compilern- Kontextfreie Grammatiken zur Beschreibungen der Syntax von Programmiersprachen- Lexing- und Parsingverfahren- Zwischendarstellungen- Semantische Analyse- Laufzeitorganisation- Code-Erzeugung- Software-Werkzeuge für den Compilerbau- Implementierungstechniken für Compiler",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung den Aufbau von Compilern. Sie verstehen formale Konzepte zur Beschreibung von Syntax und Semantik von Programmiersprachen. Sie können diese Konzepte mit algorithmischen Verfahren kombinieren, um selbständig zu einer spezifizierten Programmiersprache einen passenden Compiler zu implementieren, der die Sprache auf die gewünschte Zielmaschine abbildet. Sie kennen Software-Werkzeuge zur Unterstützung des Compilerbaus und können diese zusammen mit manuellen Techniken bei der Implementierung von Compilern einsetzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Besuch der Vorlesungen 'Algorithmen und Datenstrukturen', 'Funktionale und objektorientierte Programmierung' sowie 'Rechnerorganisation', bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Pruefungsform": "SonderformDie Studienleistung kann erbracht werden durch die erfolgreiche Bearbeitung von Übungsblättern und praktischen Programmieraufgaben sowie deren erfolgreicher Diskussion in Kolloquien. Für ein Bestehen sind dabei mindestens ausreichende Leistungen in jedemdieser Teilbereiche erforderlich.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Besuch der Vorlesungen 'Algorithmen und Datenstrukturen', 'Funktionale und objektorientierte Programmierung' sowie 'Rechnerorganisation', bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für verwendete Literatur könnte sein:Watt/Brown: Programming Language Processors in Java",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Architekturen und Entwurf von Rechnersystemen",
        "Modul Nr.": "20-00-0012",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0012-ivArchitekturen und Entwurf von Rechnersystemen5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Technologische Grundlagen und Trends der Mikroelektronik- Entwurfsflüsse für mikroelektronische Systeme- Beschreibung von Hardware-Systemen- Charakteristika von Rechnersystemen- Architekturen für parallele Ausführung- Speichersysteme- Heterogene Systems-on-Chip- On-Chip und Off-Chip Kommunikationsstrukturen- Aufbau eingebetteter Systeme, z.B. im Umfeld von Cyber-Physical Systems",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung funktionale und nichtfunktionale Anforderungen an heterogene diskrete und integrierte Rechnersysteme. Sie verstehen Techniken zum Aufbau solcher Systeme und können Entwurfsverfahren und -werkzeuge anwenden, um selbständig mit Hilfe der Techniken Rechner(teil)systeme zu konstruieren, die gegebene Anforderungen erfüllen. Sie können die Qualität der Systeme in verschiedenen Gütemaßen bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Digitaltechnik' und -Rechnerorganisation' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Digitaltechnik' und -Rechnerorganisation' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete Literatur könnten sein:Nikhil/Czeck: Bluespec by ExampleArvind/Nikhil/Emer/Vijayaraghavan: Computer Architecture: A Constructive ApproachHennessy/Patterson: Computer Architecture - A Quantitative ApproachCrockett/Elliott/Enderwitz/Stewart: The Zynq BookFlynn/Luk: Computer System DesignSass/Schmidt: Embedded Systems Design",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Systemnahe und Parallele Programmierung",
        "Modul Nr.": "20-00-0905",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0905-ivSystemnahe und Parallele Programmierung5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Programmiersprachen für systemnahe Programmierung - Grundlagen paralleler Systeme- parallele Architekturen, Multi- und Many-Core Systeme, Rechnernetze- Programmierparadigmen und Modelle für paralleles Rechnen- Parallele Algorithmen- Vertiefung der gelernten Inhalte in Praktika mit signifikantem Umfang",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Besuch der Veranstaltung verstehen Studierende die Grundlagen paralleler Systeme und ihrer effizienten Programmierung. Sie können einfache Anwendungen mittels systemnaher und/oder paralleler Programmierung auf ausgewählten Platformen entwickeln and analysieren.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "SonderformDie Studienleistung kann erbracht werden durch die erfolgreiche Bearbeitung von Übungsblättern und praktischen Programmieraufgaben sowie deren erfolgreicher Diskussion in Kolloquien. Für ein Bestehen sind dabei mindestens ausreichende Leistungen in jedem dieser Teilbereiche erforderlich.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Modellierung, Spezifikation und Semantik",
        "Modul Nr.": "20-00-0013",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "5 Prüfungsform",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0013-ivModellierung, Spezifikation und Semantik5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Einführung in die Modellierung mit logischen und algebraischen Konzepten- Interpretation und Adäquatheit formaler Modelle- strukturiertes Vorgehen bei der Modellierung und Umgang mit Entwurfsentscheidungen- Abstraktion, Verfeinerung, Komposition und Zerlegen von Modellen- Syntax und operationale Semantik von Programmiersprachen- elementare Beweistechniken und deren Verwendung- Einführung in Spezifikationssprachen- Syntax und denotationale Semantik von Spezifikationssprachen- Modellierung von Kommunikation und Koordination in nebenläufigen Systemen- Klassifikation von Systemeigenschaften",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende Konzepte aus den Bereichen Modellierung, Spezifikation und Semantik. Sie können Prädikatenlogik und algebraische Konzepte zur Formalisierung von informell gegebenen Sachverhalten verwenden. Sie können formale Modelle schrittweise erstellen, mit den dabei notwendigen Entwurfsentscheidungen umgehen und während der Modellierung als Hilfestellung auch informelle Notationen und Graphiken sinnvoll einsetzen. Sie kennen eine Auswahl relevanter, formaler Spezifikationssprachen und können mindestens eine solche Sprache einsetzen. Sie verstehen die Trennung zwischen Syntax und Semantik formaler Sprachen und können sowohl Aussagen über Ausdrücke in formalen Sprachen als auch einfache Metaaussagen über Programmier- und Spezifikationssprachen beweisen. Sie können Systemanforderungen als Prädikate formalisieren und die Angemessenheit solcher Formalisierungen beurteilen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Fähigkeit mit formalen Sprachen und Kalkülen umzugehen und grundlegende Logikkenntnisse, z.B. durch Besuch der Pflichtveranstaltungen 'Automaten, formale Sprachen und Entscheidbarkeit' und 'Aussagen- und Prädikatenlogik'",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Fähigkeit mit formalen Sprachen und Kalkülen umzugehen und grundlegende Logikkenntnisse, z.B. durch Besuch der Pflichtveranstaltungen 'Automaten, formale Sprachen und Entscheidbarkeit' und 'Aussagen- und Prädikatenlogik'",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "U. Kastens, H. Kleine Büning: Modellierung - Grundlagen und formale Methoden, Hanser G. Winskel: The Formal Semantics of Programming Languages, MIT Press C. A. R. Hoare: Communicating Sequential Processes, Prentice-HallDie Literaturempfehlungen werden kontinuierlich aktualisiert.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Informationsmanagement",
        "Modul Nr.": "20-00-0015",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0015-ivInformationsmanagement 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Grundkonzepte des Informationsmanagement:Konzepte von InformationssystemenInformationsspeicherung/abfrage, Suchen, Durchstöbern, deklarativer Zugriff und Zugriff über explizite Navigation Qualitätsmerkmale: Konsistenz, Skalierbarkeit, Verfügbarkeit, ZuverlässigkeitDatenmodellierung: Konzeptuelle Datenmodelle (ER / UML Strukturdiagramme)Konzeptueller EntwurfOperationale Modelle (relationales Modell)Abbildung vom konzeptuellen auf das operationale ModellRelationales Modell: OperatorenRelationale AlgebraRelationale KalküleAuswirkungen auf Abfragesprachen basierend auf relationaler Algebra und relationalen KalkülenEntwurfstheorie und NormalisierungAbfragesprachen: SQL (im Detail)QBE, Xpath (übersichtsartig)Speichermedien: RAID, SSDZwischenspeicherung und CachingImplementierung relationaler Operatoren: ImplementierungsalgorithmenKostenfunktionenAbfrageoptimierung: Heuristische AbfrageoptimierungKostenbasierte AbfrageoptimierungTransaktionsverarbeitung:Flache Transaktionen Nebenläufigkeitssteuerung und Korrektheitskriterien: Serialisierbarkeit, Wiederherstellbarkeit, ACA, StriktheitIsolationsgradeLock-basierte Ablaufplanung, 2PLMultiversionen zur Kontrolle der NebenläufigkeitOptimistische AblaufplanungLoggingZwischenstände (Checkpointing)Wiederherstellung / NeustartAktuelle Trends im Bereich Informationsmanagement: HauptspeicherdatenbankenSpaltenbasierte DatenhaltungNoSQL",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die Grundlagen des Informationsmanagements. Sie verstehen Techniken zum Aufbau von Informationsmanagementsystemen und können diese Modelle, Algorithmen und Sprachen anwenden, um selbständig Informationsmanagementsysteme zu benutzen bzw. (Teile davon) zu erstellen. Sie können die Qualität der Systeme in verschiedenen Gütemaßen bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Funktionale und Objektorientierte Programmierkonzepte' und -Algorithmen und Datenstrukturen' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Funktionale und Objektorientierte Programmierkonzepte' und -Algorithmen und Datenstrukturen' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird jeweils aktuell bekanntgegeben, Beispiele sindHaerder, Rahm, \"Datenbanksysteme - Konzepte und Techniken der Implementierung\", Springer 1999Elmasri, R., Navathe, S. B.: Fundamentals of Database Systems, 3rd. ed., Redwood City, CA: Benjamin/Cummings Ullman, J. D.: Principles of Database and Knowledge-Base Systems, Vol. 1 Computer Science",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Computational Engineering und Robotik",
        "Modul Nr.": "20-00-0011",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0011-ivComputational Engineering und Robotik5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Grundlagen der Modellierung und Simulation- Problemspezifikation und Systembeschreibung im Computational Engineering- Modellbildung am Beispiel mechanischer Systeme- Modellanalyse am Beispiel mechanischer Systeme- Implementierung von Simulationen an Beispielen aus der Robotik und anderer Bereiche- Interpretation und Validierung anhand von Messdaten- Anwendungen in der Simulation und Steuerung von Robotern sowie der physikalisch basierten Animation und Computerspiele ",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die grundlegenden Schritte zur Entwicklung von ersten Modellen und Simulationen und sind in der Lage erste Simulationsstudien in der Robotik durchzuführen. Sie kennen die wesentlichen Schritte zum Aufbau solcher Simulationssysteme (Problemspezifikation, Modellbildung, Modellanalyse, Implementierung und Validierung) und können mit diesen erste Simulationen konstruieren, die gegebene Anforderungen erfüllen.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Computational EngineeringB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literatur zu einzelnen Kapiteln der Lehrveranstaltung:F. Föllinger: Einführung in die Zustandsbeschreibung dynamischer Systeme (Oldenbourg, 1982)P. Corke: Robotics, Vision & Control, Springer, 2011F.L. Severance: System Modeling and Simulation: An Introduction, J. Wiley & Sons, 2001",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Computer Netzwerke und verteilte Systeme",
        "Modul Nr.": "20-00-0016",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0016-ivComputer Netzwerke und verteilte Systeme5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Übersichtswissen zu Net-Centric Computing (NCC), einem grundlegenden Aspekt der modernen Informatik; tiefes Verständnis und Kenntnis fundamentaler Konzepte im Teilbereich Rechnernetze; Kenntnis grundlegender Methoden zur Modellierung, Planung und Bewertung von Net-Centric Systems- Grundbegriffe: Dienst, Protokoll, Verbindung, Schichtenmodell- Wichtigste Protokollmechanismen zu Media Access, Routing, Broad--\u2010/Multicast- Multimedia Data Handling- Eigenschaften kontinuierlicher Datenströme und deren Verarbeitung- Dienstgüte: Definition und zentrale Mechanismen- Multimedia--\u2010Synchronisation: Grundlagen-Kompression: Verfahren; Grundlagen zu Standards(Verweis Auf Weiterführendes)",
            "Qualifikationsziele_Lernergebnisse": "- Überblickswissen über relevante Gebiete und wesentliche Fragestellungen des Net-Centric Computing (NCC);- Reproduzierbares und tiefes Verständnis elementarer Protokolle und Verfahren und deren Einsatz im Internet;- Anwendbares Methodenwissen zu weit verbreiteten Bestandteilen der Modellierung und des \"Engineering\" von NCC-Systemen;NCC wird dabei verstanden als \"Internettechnologie im weitesten Sinne\" und umfasst insbesondere die -klassischen' Bereiche Rechnernetze, Verteilte Systeme, Multimedia und Mobilkommunikation / Mobiles Rechnen sowie die -modernen' Bereiche Ubiquitous/Pervasive Computing, Peer-to-Peer-Computing und Ambient Intelligence. Die -kanonische' Vorlesung konzentriert sich auf das Gebiet Rechnernetze, dessen Verständnis grundlegend ist für alle anderen aufgeführten Bereiche; letztere werden in vertiefenden Lehrveranstaltungen des Bereichs Netze und verteilte Systeme thematisiert",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte', -Algorithmen und Datenstrukturen', -Betriebssysteme', -Einführung in den Compilerbau', -Rechnerorganisation' und -Systemnahe und parallele Programmierung'.",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte', -Algorithmen und Datenstrukturen', -Betriebssysteme', -Einführung in den Compilerbau', -Rechnerorganisation' und -Systemnahe und parallele Programmierung'.",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Hauptliteratur:- A. Tanenbaum, D. Wetherall: Computernetzwerke, 5te Aufl., Pearson Studium 2012- (englisch: Computer Networks, 5th Ed., Prentics Hall 2010)- J. Kurose, K. Ross: Computernetzwerke; Pearson Studium 2012 - (ebenfalls auch englisch bei Prentice Hall erhältlich)- Ausgewählte Kapitel aus folgenden Büchern:- G. Coulouris, J. Dollimore, T. Kindberg: Distributed Systems - Concept and Design, Pearson Studium- G. Krüger, D. Reschke: -Lehr- und Übungsbuch Telematik'- L. Kleinrock: Queueing Systems, vol. 1 (Wiley)- W.R. Stevens: Unix Network Programming, Volume 1: The Sockets Networking API (Addison Wesley) ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Mathematik III für Informatiker",
        "Modul Nr.": "04-00-0112",
        "Kreditpunkte": "8 CP",
        "Arbeitsaufwand": "h",
        "Selbststudium": "h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Ulbrich, Pfetsch, Kyed",
        "kurs": {
            "Kurse_des_Moduls": "04-00-0081-vuMathematik IV (für ET) /Mathematik III (für Inf) /PraktischeMathematik (für M.Ed.Math)Vorlesung und Übung6",
            "Lerninhalt": "Numerik: Numerische Lösung linearer Gleichungssysteme, Interpolation, Numerische Quadraturverfahren, Nichtlineare Gleichungssysteme, Anfangswertprobleme für gewöhnliche Differentialgleichungen, Eigenwert-/Eigenvektorberechnung,Statistik: Grundbegriffe der Statistik und Wahrscheinlichkeitstheorie, Regression, multivariate Verteilungen, Schätzverfahren und Konfidenzintervalle, Tests bei Normalverteilungsannahme, robuste Statistik",
            "Qualifikationsziele_Lernergebnisse": "Fähigkeit für grundlegende Aufgabenstellungen geeignete numerische Verfahren auszuwählen und anzuwenden. Fähigkeit statistische Auswertungen vorzunehmen, grundlegende Schätzverfahren und Testverfahren durchzuführen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Mathematik I für Informatiker und Mathematik II für Informatiker ",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Mathematik I für Informatiker und Mathematik II für Informatiker ",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "Pflichtveranstaltung in Informatikstudiengängen",
            "Literatur": "Von Finckenstein, Lehn, Schellhaas, Wegmann: Arbeitsbuch für Ingenieure II, Teubner Verlag Stuttgart",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Formale Methoden im Softwareentwurf",
        "Modul Nr.": "20-00-0901",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Sommersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0901-ivFormale Methoden im Softwareentwurf5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Modellierung nebenläufiger Software mit der Sprache ProMeLa- Formalisierung von Sicherheits- und Lebendigkeitseigenschaften mit temporaler Aussagenlogik- Theoretische Grundlagen von Modellprüfungsverfahren- Verifikation von ProMeLa Programmen mittels des Modellprüfers SPIN- Syntax, Semantik und Sequenzenkalkül für typisierte Logik erster Stufe- Grundlagen der kontraktbasierten Softwarespezifikationssprache JML- Dynamische Logik als eine Programmlogik erster Stufe- Formale Programmverifikation durch symbolische Ausführung und Invariantenschließen- Werkzeugunterstützte Verifikation von Java-Programen mit der KeY System",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch der Veranstaltung haben die Studierenden praktisch anwendbare Grundkenntnisse in den beiden wichtigsten Verfahren zur formalen Spezifikation und Verifikation von Software: 1. Modellprüfung gegen in temporaler Aussagenlogik spezifierte Eigenschaften2. Deduktive Verifikation von Methodenkontrakten",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Programmierkenntnisse in Java und Vertrautheit mit Aussagenlogik wird erwartet. Empfohlen ist der Besuch der Vorlesung 'Aussagen- und Prädikatenlogik'. Ansonsten genügt grundlegende mathematische Reife.",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Programmierkenntnisse in Java und Vertrautheit mit Aussagenlogik wird erwartet. Empfohlen ist der Besuch der Vorlesung 'Aussagen- und Prädikatenlogik'. Ansonsten genügt grundlegende mathematische Reife.",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Für den ersten Teil des Kurses:- Ben-Ari: Principles of the SPIN Model Checker, Springer- Holzmann: The SPIN Model Checker, Addison-WesleyFür den zweiten Teil des Kurses:- Beckert et al.: Verification of Object-Oriented Software, SpringerDie Literaturempfehlungen werden kontinuierlich aktualisiert",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Betriebssysteme",
        "Modul Nr.": "20-00-0903",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0903-ivBetriebssysteme 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Einführung in Betriebsysteme (BS) - Notwendigkeit, Design- Prozesse und Threads - BS Datenstrukturen, Abstraktionen, Kernel/User mode, context switches, Interrupts- Interprozeß-Kommunikation - IPC, RPC, Schnittstellen, Hierarchien, Messaging-Semantiken- Koordination: Deadlocks - Critical sections, Deadlock-Charakterisierung, Entdeckung, Recovery und Vermeidung.- Scheduling/Ressourcen-Management - Prozess-Reihenfolgen, unterbrechendes und unterbrechungsfreies Scheduling, verschiedene Scheduling-Konzepte und -Algorithmen, Implementierungen in BS- Nebenläufigkeit: Races, Mutual Exclusions - Critical sections, races, spin locks, Synchronisation- Semaphoren - Semaphoren, Monitore- Speicherverwaltung - BS-Datenstrukturen, Management- und Austausch-Ansätze, virtueller Speicher, paging, caching, segmentation- I/O - Geräte-Management, Treiber, Interrupt-Behandlung, DMA- Dateisysteme - Anforderungen, Design, Implementierungen, Datenstrukturen, Verzeichnisse, virtuelle Dateisysteme- Fehlertoleranz und Stabilität - Fehlertypen, zuverlässige Nachrichten, BS Zuverlässigkeit und Verfügbarkeit, Sicherheits-Aspekte- Eingebettete & Echtzeit BS - Speicher/Festplatten/Performanz-Management, Fehlertoleranz, Echtzeit-Aspekte- Verteilte BS - verteilte Berechnung und Kommunikation, Abstraktionen, Synchronisation, Koordination, Konsistenz- Virtuelle Maschinen (VM) - Grundlagen und Typisierung von VMs und Hypervisoren",
            "Qualifikationsziele_Lernergebnisse": "Studierende erhalten nach erfolgreichem Besuch der Veranstaltung einen Überblick über grundlegende Betriebssystem-Konzepte. Verschiedene Ansätze einzelner BS-Konzepte können von Studierenden diskutiert und ausgewählte Ansätze hinsichtlich variierender technischer Anforderungen - insbesondere Fehlertoleranz, Sicherheit, Performanz -analysiert werden. Weiterhin verstehen sie Techniken zum Aufbau solcher Systeme.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: 'Algorithmen und Datenstrukturen', 'Funktionale und objektorientierte Programmierung', 'Rechnerorganisation'",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: 'Algorithmen und Datenstrukturen', 'Funktionale und objektorientierte Programmierung', 'Rechnerorganisation'",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Modern Operating Systems; A. Tanenbaum, Prentice Hall, ISBN 0-13-813459-6- Operating System Concepts; Silberschatz et al, John Wiley and Sons, ISBN 0-470-23399-3",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Visual Computing",
        "Modul Nr.": "20-00-0014",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0014-ivVisual Computing 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Grundlagen der Wahrnehmung- Grundlagen der Fouriertransformation- Bilder, Bildfilterung, -kompression & -verarbeitung- Grundlagen der Objekterkennung- Geometrische Transformationen- Grundlagen der 3D-Rekonstruktion- Oberflächen- und Szenenrepräsentationen- Renderingverfahren- Farbe: Wahrnehmung, Räume & Modelle- Grundlagen der Visualisierung",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch der Veranstaltung beschreiben Studierende die Grundkonzepte sowie grundlegende Modelle und Methoden des Visual Computings. Sie erklären wichtige Verfahren zur Bildsynthese (Computergraphik & Visualisierung) sowie zur Bildanalyse (Computer Vision) und können damit einfache Bildsynthese- und -analyseaufgaben lösen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Der vorige (ggf. parallele) Besuch der Veranstaltungen 'Mathematik I/II/III'.",
            "Pruefungsform": "Fachprüfung schriftlich 90 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Der vorige (ggf. parallele) Besuch der Veranstaltungen 'Mathematik I/II/III'.",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikB. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. Computational EngineeringB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden regelmäßig aktualisiert und beinhalten beispielsweise:- R. Szeliski, 'Computer Vision: Algorithms and Applications', Springer 2011- B. Blundell, 'An Introduction to Computer Graphics and Creative 3D Environments', Springer 2008",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Bachelor-Praktikum",
        "Modul Nr.": "20-00-0906",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Wintersemester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0906-ivBachelor-Praktikum 9 Praktikum 6",
            "Lerninhalt": "Anwendung des im Rahmen der grundlegenden Veranstaltungen erworbenen Wissens im Kontext eines komplexen Softwareentwicklungsprojektes. Die einzelnen Aufgabenstellungen werden dabei von Fachgebieten der TU Darmstadt gestellt und leisten im Regelfall einen Beitrag zu deren Forschung.Schwerpunkte des Praktikums sind:- Planung und Durchführung eines Softwareentwicklungsprojektes- Anwendung von Softwareentwicklungsprozessen- Ermittlung und Priorisierung von Anforderungen- Durchführung systematischer Qualitätssicherung- Präsentationstechnik - Teamarbeit",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss des Bachelor-Praktikums sind die Studierenden in der Lage, folgende Aufgaben lösen zu können:- Umsetzung kleinerer Programmierprojekte über einen längeren Zeitraum (~ 6 Monate) in einem kleinen Team (4 bis 5 Personen);- Systematische Organisation und Planung von Softwareprojekten;- Ermittlung und Dokumentation von Projektanforderungen;- Systematische Durchführung grundlegender, dem Projekt angemessener, Qualitätssicherung;- Effektiver Einsatz grundlegender Softwarewerkzeuge (z.B. Testwerkzeuge, Versionskontrollsysteme und Projektplanungswerkzeuge);- Projektpräsentation für Außenstehende im Rahmen eines kurzen Vortrags sowie Darlegung des Projektstands.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Abschluss der Veranstaltungen:- Funktionale und Objektorientierte Programmierkonzepte- Software Engineering",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Abschluss der Veranstaltungen:- Funktionale und Objektorientierte Programmierkonzepte- Software Engineering",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Allgemein:- Lehrbuch der Softwaretechnik: Softwaremanagement; H. Balzert; Springer- Design Patterns - Elements of Reusable Object-Oriented Software; E. Gamma, R. Helm, R. Johnson, J. Vlissides; Prentice Hall - Software Qualität - Testen, Analysieren und Verifizieren von Software; P. Liggesmeyer; Springer- Writing Effective Use Cases; A. Cockburn; Pearson- Clean Code: A Handbook of Agile Software Craftsmanship; R. C. Martin; Prentice HallWeiterhin ist je nach bearbeiteter Aufgabenstellung weitere Literatur notwendig.",
            "Kommentar": "Schwerpunkt IT-Sicherheit "
        }
    },
    {
        "Modulname": "Public Key Infrastrukturen",
        "Modul Nr.": "20-00-0063",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0063-ivPublic Key Infrastrukturen 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "1. Security Goals1. Confidentiality2. Integrity3. Authenticity of Data4. Entity Authentication/Identification5. Non-repudiation6. Availability7. Other Goals2. Public Key Cryptography1. Encryption (symmetric, assymetric, hybrid, cryptosystems, key exchange, performance, security, computational problems)2. Cryptographic Hash Functions3. Message Authentication Codes4. Digital Signatures (performance, standards)3. Certificates1. X.509 Public Key Certificates (properties, content, extensions)2. PGP3. WAP Certificates4. Attribute Certificates4. Trust Models1. Direct Trust (fingerprints, examples of)2. Web of Trust (key legitimacy, owner trust, trusted introducers)3. Use of PGP4. Hierarchical Trust (trusted list, common root, cross-certification, bridge)5. Private Keys1. Software Personal Security Environments (PKCS#12, Java Keystore, application specific )2. Hardware Personal Security Environments (smart cards, hardware security modules, java cards)3. Private Key Life-cycle6. Revocation1. Revocation (reaons for, requirements, criteria)2. Certificate Revocation Lists3. Delta Certificate Revocation Lists4. Other Certificate Revocation Lists (over-issued, indirect, redirect)5. OCSP6. Other Revocation Mechanisms (NOVOMODO)7. Policies1. Certificate Life-cycle2. Certificate Policy and Certification Practice Statement3. Set of Provisions8. Validity Models1. Shell Model2. Modified Shell Model3. Chain Model9. Certification Path Validation10. Trust Center1. Registration Authority (registration protocols, proof-of-possession, extended validation certificates)2. Certification Authority3. Certificate Management Authority11. Certification Paths and Protocols1. Construction2. LDAP and other methods3. SCVP4. Timestamping5. Long Term Archiving Signatures",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung Public Key Infrastrukturen besucht haben, können Sie- die IT Sicherheitsziele und die kryptographischen Primitive zu deren Realisierung verstehen.- die Grundlagen von Public Key Infrastrukturen, insbesondere die verschiedenen Komponenten (bspw. private Schlüssel, Zertifikate, Policies), Akteure (bspw. Trust Center, Schlüsselinhaberinhaber) und Prozesse (bspw. Zertifikatsbeantragung, Zertifikatserstellung, Revokation, Zertifikatsvalidierung) verstehen und erklären.- die zugrundeliegenden theoretischen Modelle (bspw. Vertrauensmodelle, Gültigkeitsmodelle) verstehen, erklären und anwenden.- Public Key Infrastrukturen in der Praxis anwenden (bspw. für Email Signatur und -Verschlüsselung, Prüfung der Authentizität von Webseiten).",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- J. Buchmann, E. Karatsiolis, and A. Wiesmaier. \"Introduction to Public Key Infrastructures\", Springer-Verlag Berlin Heidelberg, 2013. ISBN: 978-3-642-40656-0 (Print) 978-3-642-40657-7 (Online)- J. Buchmann, \"Einführung in die Kryptographie\", ISBN 3-540-41283-2- C. Adams / S. Lloyd, \"Understanding Public-Key Infrastructure\", ISBN 1-57870-166-X- Tom Austin, \"PKI / A Wiley Tech Brief\", ISBN 0-471-35380-9- R. Housley / T. Polk, \"Planning for PKI\", ISBN 0-471-39702-4- A. Nash / W. Duane / C. Joseph/ D. Brink, \"PKI Implementing and Managing E-Security\", ISBN 0-007-213123-3- Henk C.A. van Tilborg, \"Encyclopedia of Cryptography and Security\", ISBN-13: 978-0387234731",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Einführung in die Kryptographie",
        "Modul Nr.": "20-00-0085",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0085-ivEinführung in die Kryptographie 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Math. Grundlagen:- Berechnungen in Kongruenz- und RestklassenringenGrundlagen der Verschlüsselung:- Symmetrische vs. Asymmetrische Kryptosysteme- Block- und Stromchiffren, AES, DES- Kryptanalyse- Wahrscheinlichkeit und Perfekte Sicherheit- Verschlüsselung mit öffentlichen Schlüsseln- RSA, Diffie-Hellman, ElGamal- Faktorisierung großer Zahlen- Diskrete Logarithmen- Kryptografische Hashfunktionen- Digitale Signaturen- Identifikation",
            "Qualifikationsziele_Lernergebnisse": "- Verstehen der mathematischen Grundlagen der Kryptographie wie z.B. Berechnungen in Kongruenz- und Restklassenringen, Faktorisierung großer Zahlen, Wahrscheinlichkeit und Perfekte Sicherheit- Verstehen der Prinzipien von Public und Secret-Key-Verschlüsselung und der relevanten Verfahren einschließlich ihrer Sicherheit und Effizienz- Verstehen der Prinzipien digitaler Signaturen und der relevanten Verfahren einschließlich ihre Sicherheit und Effizienz",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - Lineare Algebra - Funktionale und objektorientierte Programmierkonzepte",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - Lineare Algebra - Funktionale und objektorientierte Programmierkonzepte",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Johannes Buchmann: Einführung in die Kryptographie, 5. Auflage, Springer-Verlag, 2010, 278 p. ISBN: 978-3-642-11185-3- Johannes Buchmann: Cryptographic Protocols. Vorlesungsskript (u.a. Undeniable, Fail-Stop und Blind Signatures)- Neal Koblitz: A Course in Number Theory and Cryptography, Springer Verlag, 1994- Alfred J. Menezes, Paul C. van Oorschot, Scot A. Vanstone: Handbook of Applied Cryptography, CRC Press, 1997 (erhältlich als PDF)- Bruce Schneier: Applied Cryptography, John Wiley & Sons, Inc., 1994- Douglas R. Stinson: Cryptography - Theory and Practice, CRC Press, 1995- Gustavus J. Simmons: Contemporary Cryptology - The Science of Information Integrity, IEEE Press, 1992",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sicherheit in Multimedia Systemen und Anwendungen",
        "Modul Nr.": "20-00-0093",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i. d. R. jedes ",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0093-ivSicherheit in Multimedia Systemen und Anwendungen6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Die Studenten erhalten einen Überblick über die Herausforderungen der Multimedia Sicherheit und den bekannten Lösungsansätzen hierzu. Dazu gehören die Konzepte der Medien-Integrität, -Vertraulichkeit und -Authentizität. Verfahren aus dem Bereichen digitale Wasserzeichen, robuste Hashverfahren, partielle Verschlüsslung, Multimedia Forensik und DRM sind dem Studenten bekannt. Er kann Herausforderungen der Multimedia Sicherheit aus einer Palette von Lösungsmechanismen bedarfsabhängig optimal adressieren.- Partielle Verschlüsselungsverfahren für Video und Audio zur Sicherung der Vertraulichkeit und der Authentizität- Digitale Wasserzeichen für Bild und Audio - Anwendungsgebiete, Methoden und Verfahren- Digital Rights Management und Kopierschutzverfahren- Visuelle Kryptographie Neben der Diskussion von Algorithmen, deren Möglichkeiten, Grenzen und Schwachstellen nehmen auch die kommerziellen und gesellschaftlichen Aspekte des Einsatzes von Schutzmaßnahmen ihren Platz in der Vorlesung ein.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten erhalten einen Überblick über die Herausforderungen der Multimedia Sicherheit und den bekannten Lösungsansätzen hierzu. Dazu gehören die Konzepte der Medien-Integrität, -Vertraulichkeit und -Authentizität. Verfahren aus dem Bereichen digitale Wasserzeichen, robuste Hashverfahren, partielle Verschlüsslung, Multimedia Forensik und DRM sind dem Studenten bekannt. Er kann Herausforderungen der Multimedia Sicherheit aus einer Palette von Lösungsmechanismen bedarfsabhängig optimal adressieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundkenntnisse in Multimedia-Formaten und IT-Sicherheit.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundkenntnisse in Multimedia-Formaten und IT-Sicherheit.",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Steinmetz: Multimedia-Technologie. Grundlagen, Komponenten und Systeme, ISBN: 3540673326, Springer, Heidelberg, 2000- Dittmann: Digitale Wasserzeichen, Springer Verlag, ISBN 3 - 540 - 66661 - 3, 2000- Cox, Miller, Bloom: Digital Watermarking, Academic Press, San Diego, USA, ISBN 1-55860-714-5, 2002- und spezifische Veröffentlichungen aus Tagungsbänden",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "IT-Sicherheit",
        "Modul Nr.": "20-00-0219",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0219-ivIT-Sicherheit 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Ausgewählte Konzepte der IT-Sicherheit (Kryptographie; Sicherheitsmodelle; Authentifikation; Zugriffskontrolle; Sicherheit in Netzen; Trusted Computing; Security Engineering; Privatsphäre und Datenschutz; Web- und Browser-Sicherheit; Informationssicherheitsmanagement, IT-Forensik, Cloud Computing)",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung sind die Studierenden in der Lage kritisch über gängige Mechanismen und Protokolle zur Erhöhung der IT-Sicherheit heutiger Systeme zu diskutieren. Studenten haben nach Abschluss der Veranstaltung in breites Wissen über IT-Sicherheit, Datenschutz und Privatsphäre im Internet.Studierende sind vertraut mit modernen IT-Schutzkonzepten aus dem Bereich Kryptographie, Identitätmanagement, Web-, Browser- und Netzwerksicherheit. Sie sind in der Lage Angriffsvektoren in IT-Systemen zu erkennen und Gegenmaßnahmen zu entwickeln.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Besuch der Vorlesung Computersystemsicherheit",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Besuch der Vorlesung Computersystemsicherheit",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- C. Eckert: IT-Sicherheit, 3. Auflage, Oldenbourg Verlag, 2004- J. Buchmann, Einführung in die Kryptographie, 2.erw. Auflage, Springer Verlag, 2001- E. D. Zwicky, S. Cooper, B. Chapman: Building Internet Firewalls, 2. Auflage, O'Reilly, 2000- B. Schneier, Secrets & Lies: IT-Sicherheit in einer vernetzten Welt, dpunkt Verlag, 2000- W. Rankl und W. Effing: Handbuch der Chipkarten, Carl Hanser Verlag, 1999- S. Garfinkel und G. Spafford: Practical Unix & Internet Security, O'Reilly & Associates",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Formale Methoden der Informationssicherheit",
        "Modul Nr.": "20-00-0362",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0362-ivFormale Methoden der Informationssicherheit9 integrierte Lehrveranstaltung6",
            "Lerninhalt": "- formale Modellierung sicherheitskritischer Systeme in Prädikatenlogik- Theoretische Grundlagen von Zugriffskontrollen und Informationsflusskontrollen- formale Modellierung von Sicherheitseigenschaften in Prädikatenlogik- Unterscheidung von qualitativen und quantitativen Sicherheitseigenschaften- Entscheidbarkeits- und Komplexitätsresultate für Sicherheitseigenschaften- Verifikation von Sicherheitsgarantien in verteilten Systemen- Auswirkung von Komposition und Verfeinerung auf Sicherheitsgarantien- formale Sprachen zur Beschreibung von Sicherheitspolitiken und deren Semantik- Zertifizierung sicherheitskritischer Systeme",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende relevante formale Sicherheitsmodelle und Analysetechniken. Sie verstehen fundamentale Unterschiede zwischen verschiedenen Klassen von Sicherheitseigenschaften und das Zusammenspiel zwischen schrittweiser Softwareentwicklung und Sicherheitseigenschaften. Sie können Systeme und Sicherheitsanforderungen formal modellieren und sicherheitsrelevante Aspekte basierend auf formalen Spezifikationen formal analysieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- M. Bishop: Computer Security, Addison-Wesley- J. Biskup: Security in Computing Systems, Springer-Verlag- C. P. Pfleeger, S. L. Pfleeger: Security in Computing, Prentice Hall- D. Denning: Cryptography and Data Security, Addison WesleyDie Literaturempfehlungen werden kontinuierlich aktualisiert.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Netzsicherheit",
        "Modul Nr.": "20-00-0512",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0512-ivNetzsicherheit 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Die integrierte Veranstaltung Netzsicherheit umfasst Sicherheits-Prinzipien und -Praxis in Telekommunikationsnetzen und dem Internet. Die grundlegenden Verfahren aus dem Bereich IT Sicherheit und Kryptographie werden auf den Bereich der Kommunikationsnetze übertragen. Hierbei verfolgen wir einen Top-down Ansatz. Beginnend mit der Anwendungsschicht erfolgt eine detaillierte Betrachtung von Prinzipien und Protokollen zur Absicherung von Netzen. Ergänzend zu etablierten Mechanismen werden ausgewählte aktuelle Entwicklungen im Bereich Netzsicherheit erläutert.Lerninhalte:- Netzsicherheit: Einführung, Motivation und Herausforderungen- Grundlagen: Ein Referenzmodell für Netzsicherheit, Sicherheitsstandards für Netze und das Internet, Bedrohungen, Angriffe, Sicherheitsdienste und -mechanismen- Kryptographische Grundlagen zur Absicherung von Netzen: Symmetrische Kryptographie und deren Anwendung in Netzen, asymmetrische Kryptographie und deren Anwendung in Netzen, unterstützende Mechanismen zur Implementierung von Sicherheitslösungen- Sicherheit auf der Anwendungschicht- Sicherheit auf der Transportschicht- Sicherheit auf der Vermittlungsschicht- Sicherheit auf der Sicherungsschicht- Sicherheit auf der Bitübertragungsschit und physische Sicherheit- Angewandte Netzsicherheit: Firewalls, Intrusion Detection Systeme- Ausgewählte Themen der Netzsicherheit",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung haben die Studierenden ein umfassendes Wissen auf dem Gebiet der Netzsicherheit mit dem Schwerpunkt auf Internetsicherheit. Sie können die wichtigsten Grundlagen der IT Sicherheit sowie der Kryptographie auf den Bereich Kommunikationsnetze übertragen und anwenden. Die Studierenden können die wichtigsten Basistechnologien zur Absicherung von Netzen unterscheiden. Sie weisen ein tiefgehendes Verständnis von Sicherheitsmechanismen auf den unterschiedlichen Protokollschichten auf (Anwendungschicht, Transportschicht, Vermittlungsschicht, Sicherungsschicht, physikalische Schicht). Somit sind sie in der Lage, die Charakteristiken und Grundprinzipien des Problemraumes Netzsicherheit detailliert zu erläutern und weisen auf diesem Feld ein fundiertes Wissen in Praxis und Theorie auf. Darüber hinaus können sie aktuelle Entwicklungen im Bereich Netzsicherheit erläutern (z.B. Sicherheit in peer-to-peer Systemen, Sicherheit in mobilen Netzen, etc.). Die Übung vertieft das theoretische Wissen durch Literatur-, Rechen- und praktische Implementierungs-/Anwendungsübungen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der IT-Sicherheit, Kryptographie und Kommunikationsnetze",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der IT-Sicherheit, Kryptographie und Kommunikationsnetze",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Distributed Software SystemsM. Sc. Autonome SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Charlie Kaufman, Radia Perlman, Mike Speciner: Network Security - Private Communication in a Public World, 2nd Edition, Prentice Hall, 2002, ISBN: 978-0-14-046019-6; weiterhin ausgewählte Buchkapitel und ausgewählte wissenschaftlicheVeröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Embedded System Security",
        "Modul Nr.": "20-00-0581",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "135 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0581-ivEmbedded System Security 6 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Trusted Computing- Authentifiziertes Booten- Binding und Sealing- Messen der Plattform-Integrität und Attestierung- Direct Anonymous Attestation- Trusted Platform Modules (TPM/MTM)- On-board CredentialsMobile Sicherheit mit Fokus auf Smartphones- Sicherheitsarchitekturen- Ausgewählte Zugriffsmodelle- Kontext-basierte Sicherheitsrichtlinien- Ausgewählte moderne AngriffstechnikenHardware-basierte Kryptographie- Sichere Berechnungen basierend auf Hardware- Einführung in Physikalisch Unklonbare Funktionen (PUFs)",
            "Qualifikationsziele_Lernergebnisse": "Durch die erfolgreiche Teilnahme an dieser Veranstaltung erwerben Studenten detailliertes Wissen über ausgewählte Aspekte der eingebetteten Systemsicherheit (Hardware- und Software-basiert).",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Kryptographie",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Kryptographie",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Challener, David, VanDoorn, Leendert, Safford, David, Yoder, Kent, Catherman, Ryan \"A Practical Guide to Trusted Computing\", IBM Press, 2007 - Smith, Sean W. \"Trusted Computing Platforms: Design and Applications\", Springer Verlag,2005",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sichere Mobile Systeme",
        "Modul Nr.": "20-00-0583",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0583-ivSichere Mobile Systeme 3 integrierte Lehrveranstaltung2",
            "Lerninhalt": "Die integrierte Veranstaltung Sichere Mobile Systeme befasst sich mit Fragen zur Sicherheit in drahtlosen und Mobilen Netzen und Kommunikationssystemen. Grundlagen der Thematik werden durch aktuelle Forschungsthemen ergänzt.Lerninhalte:- Sicherheitsbetrachtung und Modellierung von Bedrohungen bei mobilen und drahtlosen Systemen- Ausgewählte Angriffe und Sicherheitsmechanismen spezifisch für mobile und drahtlosen Systeme- Sicherheit in drahtlosen Sensornetzen- Sicherheit in drahtlosen Mesh-Netzen- Bedrohungen und Schutz der Privatsphäre in mobilen und drahtlosen Systemen- Sicherheit in zellularen Netzen (GSM, UMTS, LTE)- Sicherheit auf der Bitübertragungsschicht- Ausgewählte Forschungsthemen in mobilen und drahtlosen Systemen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden ein spezialiertes Wissen auf dem Gebiet der Sicherheit in mobilen, verteilten, drahtlosen Netzen mit dem Schwerpunkt auf Internetsicherheit. Sie können die wichtigsten Grundlagen der IT Sicherheit, der Kryptographie sowie der Netzsicherheit in klassischen Netzen auf mobile Systeme übertragen und anwenden.Die Studierenden weisen ein tiefgehendes Verständnis von Sicherheitsmechanismen auf den unterschiedlichen Protokollschichten auf (Anwendungschicht, Transportschicht, Vermittlungsschicht, Sicherungsschicht, physikalische Schicht). Somit sind sie in der Lage, die Charakteristiken und Grundprinzipien des Problemraumes zu erfassen und weisen auf dem Feld sicherer mobiler Systeme ein fundiertes Wissen in Praxis und Theorie auf.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Netzsicherheit und der Mobilen Netze",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Netzsicherheit und der Mobilen Netze",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Levente Buttyan, Jean-Pierre Hubaux: Security and Cooperation in Wireless Networks, Cambridge University Press, 2008, ISBN: 978-0-521-87371-0 (book is available online for download).Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Kryptoplexität",
        "Modul Nr.": "20-00-0585",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0585-ivKryptoplexität 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Algorithmische Komplexität von kryptographischen Bausteinen wie One-Way-Funktionen, digitalen Signaturen, Commitments, Verschlüsselungen etc. Insbesondere ihre Relationen, z.B. ob man aus jedem Signaturverfahren auch ein Verschlüsselungsverfahren bauen kann. Gelegentliche \"Ausflüge\" in die Komplexitätstheorie, sofern relevant.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme können die Teilnehmer abstrakte kryptographische Eigenschaften und ihr Verhältnis untereinander beurteilen. Die lernen die Zusammenhänge zwischen Kryptographie und Komplexitätstheorie und werden in die Lage versetzt, unter Schranken in der Kryptographie mittels verschiedener Techniken zu beweisen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Einführung in die Kryptographie",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Einführung in die Kryptographie",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online erhältlich).- Balcazar, Diaz, Gabarro; Structural Complexity I und II, 1995 (nicht mehr als Hardcover verfügbar)- Katz, Lindell: Introduction to Modern Cryptography, 2007- Goldreich: Foundations of Cryptography, Volume I und II, 2001 und 2004 (als Online-Variante erhältlich)- Goldreich: Computational Complexity: A Conceptual Approach, 2006 (als Online-Variante erhältlich)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Post-Quantum Kryptographie",
        "Modul Nr.": "20-00-0632",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0632-iv Post-Quantum Kryptographie 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Fähigkeiten und Grenzen von Quantencomputern, Hash-basierte Kryptographie, Gitter-basierte Kryptographie, multivariate Kryptographie, Code-basierte Kryptographie, kryptanalytische Methoden",
            "Qualifikationsziele_Lernergebnisse": "Kenntnisse über quantencomputer-resistente Verfahren, Kenntnis der modernen Kryptanalyse, Erlernen von Techniken zur Kryptanalyse und deren Anwendung in der Praxis",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Lineare Algebra, Einführung in die Kryptographie",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0632-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Lineare Algebra, Einführung in die Kryptographie",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0632-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Forschungsorientierte Kryptographie",
        "Modul Nr.": "20-00-0680",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0680-ivForschungsorientierte Kryptographie6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Aktuelle Arbeiten aus dem Gebiet der Kryptographie und Komplexitätstheorie verstehen und neue Forschungsansätze herausarbeiten.",
            "Qualifikationsziele_Lernergebnisse": "Durch eine erfolgreiche Teilnahme am Kurs werden die Teilnehmer in die Lage versetzt, wissenschaftliche Arbeiten weitgehend selbstständig zu lesen und wichtige Details einer Arbeit zu erkennen. Sie können die Arbeiten anderer präsentieren und neue Forschungsfragen ableiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Einführung in die KryptographieKryptoplexität",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Einführung in die KryptographieKryptoplexität",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online erhältlich).- Balcazar, Diaz, Gabarro; Structural Complexity I und II, 1995 (nicht mehr als Hardcover verfügbar)- Katz, Lindell: Introduction to Modern Cryptography, 2007- Goldreich: Foundations of Cryptography, Volume I und II, 2001 und 2004 (als Online-Variante erhältlich)- Goldreich: Computational Complexity: A Conceptual Approach, 2006 (als Online-Variante erhältlich)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Perlen der Kryptographie",
        "Modul Nr.": "20-00-0685",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0685-ivPerlen der Kryptographie 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Herausragende Ergebnisse der Kryptographie wie Fully Homomorphic Encryption, Leftover Hash Lemma, Non-Black-Box Constructions, Random Oracles, Multi-Party Computations, Zero-Knowledge",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Absolvierung beherrschen Teilnehmer aktuelle und wichtige Resultate und Techniken der Kryptographie. Sie verstehen ihre Bedeutung und können sie selbstständig in anderen Zusammenhängen anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Einführung in die Kryptographie",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Einführung in die Kryptographie",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Arora, Barak: Computational Complexity: A Modern Approach, 2007 (auch online erhältlich).- Balcazar, Diaz, Gabarro; Structural Complexity I und II, 1995 (nicht mehr als Hardcover verfügbar)- Katz, Lindell: Introduction to Modern Cryptography, 2007- Goldreich: Foundations of Cryptography, Volume I und II, 2001 und 2004 (als Online-Variante erhältlich)- Goldreich: Computational Complexity: A Conceptual Approach, 2006 (als Online-Variante erhältlich)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "1.1.1. Sichere Kritische Infrastrukturen",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0720-iv Sichere Kritische Infrastrukturen0 Integrierte Veranstaltung2",
            "Lerninhalt": "Kritische Infrastruktur (KRITIS) sind -Organisationen oder Einrichtungen mit wichtiger Bedeutung für das staatliche Gemeinwesen, bei deren Ausfall oder Beeinträchtigung nachhaltig wirkende Versorgungsengpässe, erhebliche Störungen der öffentlichen Sicherheit oder andere dramatische Folgen eintreten würden.' (BMI, 2009)In der Vorlesung sollen verschiedene kritische Infrastrukturen und deren Sicherheitsherausforderungen thematisiert werden. Hierzu werden, nach einer Einführung in die Grundlagen der Thematik, Referent*innen aus Forschungseinrichtungen, Unternehmen, Behörden oder von Betreibern kritischer Infrastrukturen eingeladen, die mit Fachvorträgen einzelne Facetten des Themas beleuchten. Ein Selbststudium ausgewählter Fachartikel ergänzt die Fachvorträge. In den vergangenen Jahren waren u.a. Referent*innen des Deutschen Bundestags, des Bundesamts für Bevölkerungsschutz und Katastrophenhilfe (BBK), des Bundesamts für Sicherheit in der Informationstechnik (BSI), des Technischen Hilfswerks (THW), des Hessen Cyber Competence Centers (Hessen 3C), der Siemens AG, der Deutschen Bahn, der Deutschen Börse, der Deutschen Flugsicherung, sowie aus Universitäten und Forschungseinrichtungen mit ihren Vorträgen vertreten.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Besuch der Veranstaltung kennen die Studierenden die wichtigsten IT-Sicherheitsprobleme im Bereich kritischer Infrastrukturen. Sie verstehen Techniken zur Absicherung kritischer Infrastrukturen und sind in der Lage diese in verschiedenen Sektoren (wie dem Smart Grid, dem Transportwesen oder der Telekommunikation) anzuwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Computersystemsicherheit",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0720-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Computersystemsicherheit",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0720-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikM.Sc. WirtschaftsinformatikB.Sc. Psychologie in ITJoint B.A. InformatikB.Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekanntgegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Physical Layer Security in Drahtlosen Systemen",
        "Modul Nr.": "20-00-0745",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0745-ivPhysical Layer Security in Drahtlosen Systemen5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Physical Layer Security Verfahren zur Absicherung drahtloser Kommunikation versprechen eine informationstheoretische Sicherheit auf der Bitübertragungsschicht (Physical Layer). Die integrierte Veranstaltung betrachtet die Theorie und Praxis von Physical Layer Security. Hierzu werden ausgewählte theoretische Grundlagen eingeführt und die Übertragung dieser Grundlagen hin zu praktikablen Lösungen diskutiert. Angriffe auf (praktische) Physical Layer Security-Verfahren werden erörtert. Theoretische und praktische Übungen sowie die Vorstellung ausgewählter Forschungsergebnisse in Seminarvorträgen vertiefen die Veranstaltung.Lerninhalte:- Eigenschaften des Physical Layer- Grundlagen informationstheorischer Sicherheit und Abgrenzung zur Kryptographie- Physical Layer Security Verfahren (u.a. Cooperative Jamming, Orthogonal Blinding, Zero-Forcing, Interference Alignment, Key Extraction)- Praktische Aspekte von Physical Layer Security Verfahren- Praktische Implementierung von Physical Layer Security-Verfahren mit Software Defined Radios- Ausgewählte aktuelle Ansätze zu Physical Layer Security",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden ein theoretisches Grundwissen sowie ein fundiertes praktisches Wissen auf dem Gebiet von Physical Layer Security. Sie können die wichtigsten informationstheoretischen Grundlagen erläutern und kennen theoretische wie praktische Verfahren im Detail. Sie sind in der Lage praktische Verfahren zu beurteilen und Schwächen darzulegen. Die Studierenden haben Kompetenzen in der praktischen Realisierung von Physical Layer Security-Verfahren auf Basis von Software-defined Radios. Sie können sich aktuelle Arbeiten zum Stand der Forschung zu Physical Layer Security selbstständig aneignen und das erarbeitete Wissen verständlich vermitteln.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Mobilen Netze",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Mobilen Netze",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Schutz in vernetzten Systemen - Vertrauen, Widerstandsfähigkeit und Privatheit",
        "Modul Nr.": "20-00-0969",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0969-iv Schutz in vernetzten Systemen - Vertrauen, Widerstandsfähigkeit und Privatheit0 Integrierte Veranstaltung2",
            "Lerninhalt": "- Schutz in vernetzten Systemen: Hintergrund, Motivation und Herausforderungen- Vertrauen (Computational Trust): Modelle und Mechanismen- Vertrauen (Computational Trust): PKI-Anwendungen, Cloud Computing, Reputationssysteme und Web Services- Vertrauen: Verwaltung von Enttäuschungen and Komfort von Geräte- Privatheit: Definitionen, Modelle, Daten-Anonymität und Kommunikations-Anonymität- Privatheit und Vertrauen: Privatheit-respektierende Vertrauensmodelle, Mechanismen und Anwendungen für Identitätsmanagement- Sicherheit &amp; Ökonomie- Widerstandsfähigkeit: Modelle, Netzwerk-Angriffserkennungs-Systeme, kollaborative Angriffserkennung, Honeypots- Resilient networks",
            "Qualifikationsziele_Lernergebnisse": "Die integrierte Veranstaltung Schutz in vernetzten Systemen - Vertrauen, Widerstandsfähigkeit und Privatheit deckt die Themenbereiche berechenbares Vertrauen (computational trust), Widerstandsfähigkeit (resilience), anonyme Netzwerke, sowie kollaborative Schutzmechanismen ab. Mit der Teilnahme an diesem Kurs wird das Verständnis von Herausforderungen und Lösungen im Kontext von vernetzten Systemen vermittelt. Dieser Kurs betrachtet das Konzept von Ende-zu-Ende Systemen mit Schwerpunkt auf Nutzer, Geräte, Netzwerke, sowie Anwendungen und Dienste.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0969-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0969-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "- Trust and Reputation for Service-Oriented Environments: Technologies For Building Business Intelligence And Consumer Confidence, Elizabeth Chang, Tharam Dillon, and Farookh K. Hussain, 374 pages, 2006. ISBN: 978-0-470-01547-6- On anonymity in an electronic society: A survey of anonymous communication systems, Matthew Edman and Bülent Yener, ACM Computing Surveys, Vol. 42, Issue 1, 2009.- Taxonomy and Survey of Collaborative Intrusion Detection, Emmanouil Vasilomanolakis, Shankar Karuppayah, Max Mühlhäuser, Mathias Fischer, ACM Computing Surveys, Vol. 47 Issue 4, 2015.- Selected book chapters and scientific publications",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Kryptographie in der Praxis",
        "Modul Nr.": "20-00-0993",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0993-iv Kryptographie in der Praxis 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Schlüsselableitung, Schlüsselaustausch, sichere Kommunikation, credentials, crypto currencies (TLS, SSH, IPSec, Bitcoin,\u2026).",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Absolvierung verstehen die Teilnehmer das Design und die Sicherheitsgarantien von kryptographischen Verfahren in der Praxis, die heutzutage im alltäglichen Einsatz sind. Die Teilnehmer lernen die Bedeutung und Grenzen von Sicherheitsmodellen und Sicherheitsbeweisen für die Praxis kennen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Einführung in die Kryptographie",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0993-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Einführung in die Kryptographie",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0993-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Cryptocurrencies",
        "Modul Nr.": "20-00-1010",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1010-iv Cryptocurrencies 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Konzepte von Kryptowährungen:- Kryptographische Bausteine: Kryptographische Hashfunktionen, Signaturen, Blinde Signaturen, Commitments- Chaum\u2019s eCash Verfahren und dessen Sicherheitseigenschaften- Verteilte System und Fehlermodelle- Broadcast- und Konsensusverfahren- Einführung in Bitcoin und dessen Konsensusverfahren- Mining Bitcoins und sicheres Speichern von Bitcoins- Anonymität in Kryptowährungen- Angriffe auf Kryptowährungen- Smart Contracts und Anwendungen- Skalierbarkeit von Kryptowährungen- Altcoins and Blockchain ecosystem",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und theoretischen Grundkonzepte von kryptographischen Währungen. Insbesondere lernen sie:- Den Umgang mit kryptographischen Bausteinen und deren formale Sicherheitsanalyse mittels Beweise- Die Entwicklung kryptographischer Protokolle und verteilter Systeme- Die Grundkonzepte Blockchain-basiertere Kryptowährungen insbesondere der Konsensus Mechanismen- Mögliche Angriffe auf Bitcoin und die zugrundeliegende Technologie- Die Grundkonzepte der Entwicklung von Smart Contracts und deren Anwendung- Neue Lösungsansäte zur Verbesserung von Kryptowährungen hinsichtlich Anonymität, Skalierbarkeit und Sicherheit- Eine Übersicht über verschiedene Altcoins und deren Vorteile/Nachteile",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Besuch der Vorlesung 'Introduction to Cryptography / Einführung in die Kryptographie' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1010-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Besuch der Vorlesung 'Introduction to Cryptography / Einführung in die Kryptographie' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1010-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, ein Beispiel für verwendete Literatur könnte sein:Bitcoin and Cryptocurrency Technologies: A Comprehensive Introduction Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller & Steven Goldfeder",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sicherheitskritische Mensch-Computer-Interaktion",
        "Modul Nr.": "20-00-1025",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1025-iv Sicherheitskritische Mensch-Computer-Interaktion0 Integrierte Veranstaltung4",
            "Lerninhalt": "Diese Lehrveranstaltung gibt eine fundierte und praxisbezogene Einführung sowie einen Überblick über Grundlagen, Methoden und Anwendungen der Mensch-Computer-Interaktion im Kontext von Sicherheit, Notfällen, Krisen, Katastrophen, Krieg und Frieden. Dies adressierend werden interaktive, mobile, ubiquitäre und kooperative Technologien sowie Soziale Medien vorgestellt. Hierbei finden klassische Themen wie benutzbare (IT-)Sicherheit, Industrie 4.0, Katastrophenschutz, Medizin und Automobil, aber auch Augmented Reality, Crowdsourcing, Shitstorm Management, Social Media Analytics und Cyberwar ihren Platz. Methodisch wird das Spektrum von Usable Safety- bis Usable Security Engineering von Analyse über Design bis Evaluation abgedeckt.Details für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "- Verständnis sicherheitskritischer MCI und der zugrundeliegenden Disziplinen MCI sowie Krisen- und Sicherheitsmanagement- Überblick über ausgewählte Grundlagen und Methoden sicherheitskritischer MCI (Usable Safety; Usable Security; Analyse, Design, Umsetzung, Evaluation; Recht, Ethik und Kultur)- Orientierung in Anwendungsdomänen und -feldern- Kenntnisse über sicherheitskritische interaktive Systeme (Betriebliche Informationssysteme, Krisenmanagementsysteme, Medizintechnik, Warn- und Assistenzsysteme)- Kenntnisse über sicherheitskritische kooperative Systeme (Soziale Medien, Kooperationssysteme, Freiwillige Partizipation, Frieden und Sicherheit)",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlagen der Informatik",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1025-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlagen der Informatik",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1025-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Informationstechnologie für Frieden und Sicherheit",
        "Modul Nr.": "20-00-1026",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1026-iv Informationstechnologie für Frieden und Sicherheit0 Integrierte Veranstaltung4",
            "Lerninhalt": "- Grundlagen: Friedens-, Konflikt- und Sicherheitsforschungo (Naturwissenschaftliche) Friedensforschungo Informatische Friedensforschung- Informatik in Militär, Krieg und Konflikteno Militärische Nutzung von Informatik und Dual-Use-Problematiko Cyberwar: Konflikte im Cyberspace mit Information Warfare, Vulnerabilität und Resilienz kritischer (IT-)Infrastrukturen, Fake News und Social Botso Terrorismus und terroristische Propaganda in sozialen Medien- Informatik und Friedeno Mensch-Computer-Interaktion zur Friedensförderungo IT im Kontext politischer Aktivisteno Bekämpfung terroristischer Propaganda in sozialen MedienThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "- Kenntnisse von Grundlagen der informatischen Friedens-, Konflikt- und Sicherheits-forschung- Bewertung von IT zur Förderung oder Verhinderung von Frieden und Sicherheit- Kenntnisse in der Gestaltung und Entwicklung von IT für Frieden",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlagen der Informatik",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1026-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlagen der Informatik",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1026-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Kryptographische Protokolle",
        "Modul Nr.": "20-00-1032",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1032-iv Kryptographische Protokolle 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Kryptographische Protokolle erlauben es mehreren Parteien mit möglicherweise unterschiedlichen Interessen, gemeinsam bestimmte Aufgaben zu erfüllen. Diese Lehrveranstaltung behandelt grundlegende und fortgeschrittene kryptographische Protokolle und ihre Anwendungen, wie z.B. Commitments, Secure Coin Flipping, Zero-Knowledge Beweise, Mixnetze, Anonyme Credentials, Private Information Retrieval, Sichere Mehrparteienberechnungen und Hardware-unterstützte kryptographische Protokolle.",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen grundlegende und fortgeschrittene kryptographische Protokolle, können deren Effizienz und Sicherheit bewerten und vergleichen, und kennen deren grundlegenden Anwendungen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundkenntnisse der Kryptographie werden sehr empfohlen, z.B. durch erfolgreiches Bestehen der Veranstaltung \"Einführung in die Kryptographie\".",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1032-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundkenntnisse der Kryptographie werden sehr empfohlen, z.B. durch erfolgreiches Bestehen der Veranstaltung \"Einführung in die Kryptographie\".",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1032-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT Sicherheit",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Beweisbare Sicherheit",
        "Modul Nr.": "20-00-1051",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1051-vl Beweisbare Sicherheit 0 Vorlesung 2",
            "Lerninhalt": "In dieser Vorlesung wird gezeigt, wie man Sicherheitseigenschaften vonkryptografischen Protokollen formal beweisen kann. Dabei konzentrierenwir uns auf starke Sicherheitsgarantien und realistischeAngreifermodelle und lernen verschiedene Beweistechniken kennen. Dieerlernten Techniken werden wir auf teils real eingesetzteVerschlüsselungsverfahren anwenden und so eine gute Vorstellung vonderen Sicherheitseigenschaften erhalten.(1) Einführung beweisbare Sicherheit* Definition von Sicherheit* Einführung Sicherheitsparameter und PPT Angreifer* Der Begriff der Reduktion* Kryptographische Annahmen (Faktorisieren, diskrete Logarithmen)* IND-CPA Sicherheit und das ElGamal Verschlüsselungsverfahren* Beweis durch Reduktion: ElGamal ist IND-CPA-sicher unter derDecisional Diffie-Hellman Annahme (DDH)(2) IND-CCA Sicherheit* ElGamal ist nicht IND-CCA sicher* Das Verfahren von Naor und Yung* Das Verfahren von Cramer und Shoup(3) Das Random-Oracle Modell (ROM)* Einführung ROM* Hashfunktionen* Ist das ROM sinnvoll?* IND-CPA und IND-CCA Sicherheit von RSA-OAEP im ROM(4) Simulationsbasierte Sicherheit* Vergleich simulationsbasierte und spielbasierte Sicherheitsdefinition* Komponierbare Sicherheitsdefinitionen* Das Universal Composability Framework* Programmierbare Random Oracles* Sicherer Nachrichtentransfer im (programmierbaren) ROM",
            "Qualifikationsziele_Lernergebnisse": "Nachdem die Studierenden die Vorlesung besucht haben können sie- verschiedene Sicherheitsdefinitionen von Verschlüsselungsverfahren wiedergeben und vergleichen- beschreiben, welche Voraussetzungen hinreichend sind, um starke Sicherheitseigenschaften zu erreichen- formale Sicherheitsbeweise für einige Verschlüsselungsverfahren präsentieren",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen, aber nicht notwendig: \"Einführung in die Kryptographie\"",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1051-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen, aber nicht notwendig: \"Einführung in die Kryptographie\"",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1051-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Srudiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Grundlagen des Symmetrischen Kryptographischen Designs",
        "Modul Nr.": "20-00-1062",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1062-vl Grundlagen des Symmetrischen Kryptographischen Designs0 Vorlesung 2",
            "Lerninhalt": "In diesem Kurs werden die Studenten in die Grundlagen der symmetrischen Kryptographie eingeführt. Der Fokus wird auf dem Design verschiedener Typen von Verschlüsselungsverfahren, kollisionsresistenten Hashfunktionen und Nachrichtenauthentifizierungscodes (MACs) aus grundlegenden Primitiven wie Blockchiffren und universellen Hashfunktionen liegen.Wir werden insbesondere die neuesten kryptographischen Verfahren wie GCM, HMAC, OCB, SHA3 und SIV untersuchen, die heute verwendet werden. Der Kurs wird unter Verwendung der Methode der beweisbaren Sicherheit mit einem Ausblick auf die kryptografische Praxis durchgeführt, wobei auch praktische Angriffe auf solche kryptografische Verfahren behandelt werden. Dieser Kurs beinhaltet jedoch nicht das Design von Blockchiffren oder deren Kryptanalyse.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten lernen die notwendigen Werkzeuge und Abstraktionen, um moderne kryptografische Designs und die Hintergründe für ihr Design zu verstehen. Außerdem werden die Studierenden mit der Methode der beweisbaren Sicherheit vertraut gemacht und erfahren, wie Kryptosysteme in der Praxis scheitern können. Dieser Kurz befähigt NICHT dazu, neue kryptografische Designs zu entwerfen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen wird mindestens eine der folgenden Vorlesungen:Einführung in die Kryptographie, Kryptographie in der Praxis und Kryptoplexität.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1062-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen wird mindestens eine der folgenden Vorlesungen:Einführung in die Kryptographie, Kryptographie in der Praxis und Kryptoplexität.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1062-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Hardware-orientierte Sicherheit",
        "Modul Nr.": "20-00-1082",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1082-iv Hardware-orientierte Sicherheit 0 Integrierte Veranstaltung2",
            "Lerninhalt": "- Zufallszahlengeneratoren- Physically Unclonable Functions- Hardware-Trojaner- Seitenkanalangriffe gegen kryptographische Implementierungen- Trusted Platform Modules und Trusted Execution Environments- Techniken des Remote Attestation- Covert Channels- Effiziente Implementierung kryptographischer Verfahren",
            "Qualifikationsziele_Lernergebnisse": "Kenntnisse:Die Studierenden erwerben grundlegende Kenntnisse im Bereich der hardware-orientierten Sicherheit: Mit diesen Verfahren können effektiv moderne Rechnerplattformen abgesichert werden. Sie lernen verschiedene Klassen von Verfahren der Hardware-Sicherheit kennen und können diese auf neue Problemstellungen anwenden.Fähigkeiten:Die Studierenden lernen Einsatzbereiche von Techniken der hardware-orientierten Sicherheit kennen. Sie erwerben die Fähigkeit, die besprochenen Techniken in der Praxis umzusetzen.Kompetenzen:Die Studierenden lernen die Sicherheit von Methoden der hardware-basierten Sicherheit zu beurteilen und die für einen Anwendungsfall geeigneten Methoden auszuwählen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Fortgeschrittene IT-Security",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1082-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Fortgeschrittene IT-Security",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1082-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Privatheit biomedizinischer Daten",
        "Modul Nr.": "20-00-1084",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1084-vl Privatheit biomedizinischer Daten0 Vorlesung 2",
            "Lerninhalt": "Grundlagen Genetik, EpigenetikGrundlagen Bioinformatik in der HumanmedizinBiomedizinische SensorikDas TMF-Konzept zum DatenschutzPrivacy MetrikenSecure-Multi-Party-Computations",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden können aktuelle Forschungsliteratur erfassen und Technologieentwicklungen hinsichtlich ihrer Datenschutzniveaus im Bereich der Biomedizin unterscheiden.Sie können weiterhin anhand der erläuterten Grundlagen potentielle Re-Identifikationsrisiken einschätzen und Mechanismen zu deren Behebung konzeptionell vorschlagen.Sie können weiterhin einfach Abfragen/Auswertungen/Studien-Designs hinsichtlich ihrer Privacy-Implikationen einschätzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Kryptographie",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1084-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Kryptographie",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1084-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Cyber Range",
        "Modul Nr.": "20-00-1096",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1096-iv Cyber Range 0 Integrierte Veranstaltung2",
            "Lerninhalt": "Der Kurs basiert auf der Fraunhofer Cyber Range-Plattform, einer Simulationsumgebung für Sicherheitstrainings. Die Plattform kann Unternehmensnetzwerke verschiedener Größen simulieren und darin echte Malware ausführen und Sicherheitsprobleme simulieren. In verschiedenen Szenarien müssen Studenten das Netzwerk überwachen, Sicherheitsprobleme zeitnah erkennen, analysieren und geeignete Gegenmaßnahmen treffen. Die Studenten werden alleine als auch in Gruppen mit realer SIEM-/Monitoring-Software arbeiten. Von dort ausgehend werden sie eine Reihe von Untersuchungen durchführen an einer Vielzahl von Linux- und Windows-basierten Systemen, um die Ursachen für Sicherheitsprobleme zu entdecken. Während den Untersuchungen setzen sie dabei eine Vielzahl von Standard-Systemwerkzeugen und spezielle forensische Software ein. Am Ende eines jeden Szenarios werden sie die Ursachen der Sicherheitsprobleme beheben und das Netzwerk geeignet absichern. Ein Trainer wird die Studenten während den Szenarien unterstützen und anleiten, gefundene Schwachstellen in dem System wie in einem SOC ordnungsgemäß zu dokumentieren. Für die Dokumentation vergibt das System automatisiert Punkte. Der Kurs wird eine ganze Woche am Fraunhofer-Institut für Sichere Informationstechnologie stattfinden und enthält sowohl Vorlesungsanteile als auch praktische Anteile. Studenten bekommen eine Einführung in die verwendete Software, aber der Fokus des Kurses ist die Anwendung von Sicherheitswissen in der Simulationsumgebung unter Anleitung eines Trainers. Die Inhalte der Szenarien enthalten unter anderem grundlegende Netzwerkprobleme wie unerwartete Dienstausfälle, Web Defacement, SQL-Injections als auch fortgeschrittene Themen wie Malware/Ransomeware-Ausbrüche, forensische Malware-Analysen und Erkennung von Man-in-the-Middle-Angriffen. Die meisten Szenarien sind \"Blue Team\"-Szenarien, in denen Studenten ein Netzwerk verteidigen müssen. Einige \"Red Team\"-Szenarien runden den Kurs ab, bei denen Studenten selbst in Systeme eindringen müssen.",
            "Qualifikationsziele_Lernergebnisse": "* Grundlegende Bedienung von SIEM-/Netzwerküberwachungssoftware* Verständnis für Netzwerkanalyse* Wissen über grundlegende forensische Methoden zur Analyse von Windows-und Linux-Systemen* Umgang mit grundlegender Malware-Analyse* Umgang mit netzwerkbasierten Sicherheitsproblemen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden: * Fortgeschrittene Netzwerkkenntnisse* Grundlegendes Wissen über Linux- und Windows-Administration,insbesondere Log-Analyse* Programmierkenntnisse in mehreren Programmier- und Skriptsprachen* Kenntnisse über relationale Datenbanksysteme* Grundlegende Assembler-Kenntnisse",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1096-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden: * Fortgeschrittene Netzwerkkenntnisse* Grundlegendes Wissen über Linux- und Windows-Administration,insbesondere Log-Analyse* Programmierkenntnisse in mehreren Programmier- und Skriptsprachen* Kenntnisse über relationale Datenbanksysteme* Grundlegende Assembler-Kenntnisse",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1096-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Symmetrische Kryptographie",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1107-ivSymmetrische Kryptographie 0 Vorlesung 4",
            "Lerninhalt": "Dieser Kurs deckt die Grundlagen der symmetrischen Verschlüsselung ab, die für ein Verständnis von entsprechenden modernen kryptographischen Primitiven erforderlich sind. Wesentliche Punkte sind dabei das Design von AES und Blockchiffren im Allgemeinen, kollisionsresistente und universelle Hashfunktionen, Message Authentication Codes (MACs), Tweakable Block Ciphers, Authenticated Encryption sowie Verschlüsselungsverfahren für spezialisierte Einsatzzwecke wie beispielsweise Festplattenverschlüsselung. Insbesondere werden wir jeweils die aktuell eingesetzten Verfahren wie GCM, HMAC, OCB, SHA3 und SIV untersuchen.In diesem Kurs geht es dabei vor allem um die beweisbare Sicherheit der Verfahren, Sicherheitsdefinitionen und entsprechende Beweise spielen eine große Rolle. Dies soll den Studenten vermitteln, welche Ideen hinter den Designs der Verfahren stehen, welche Sicherheit sie versprechen und wie man sie korrekt einsetzt. Der Kurs bildet somit eine im Wesentlichen in sich geschlossene Einheit, setzt jedoch eine solide mathematische Grundbildung voraus.Es werden als Anwendung auch praktikable Angriffe auf echte kryptographische Systeme behandelt.",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss dieser Vorlesung haben die Studierenden die notwendigen Werkzeuge und Abstraktionen kennengelernt, um moderne kryptografische Designs und die Hintergründe für ihr Design zu verstehen. Außerdem sind die Studierenden mit der Methode der beweisbaren Sicherheit vertraut und haben erfahren, wie Kryptosysteme in der Praxis scheitern können. Dieser Kurs beinhaltet nicht den Entwurf neuer kryptografischer Designs.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen wird mindestens eine der folgenden Vorlesungen:Einführung in die Kryptographie, Kryptographie in der Praxis und Kryptoplexität.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1107-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen wird mindestens eine der folgenden Vorlesungen:Einführung in die Kryptographie, Kryptographie in der Praxis und Kryptoplexität.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1107-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": "Schwerpunkt Netze und verteilte Systeme "
        }
    },
    {
        "Modulname": "Netz-, Verkehrs- und Qualitäts-Management für Internet Services",
        "Modul Nr.": "20-00-0056",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0056-vl Netz-, Verkehrs- und Qualitäts-Management für Internet Services0 Vorlesung 2",
            "Lerninhalt": "Einführung in das Management von Internet Service Provider (ISP-)Netzen zur Integration von Service Plattformen mit ihren Qualitäts- und Verkehrsprofilen",
            "Qualifikationsziele_Lernergebnisse": "Stoffplan: Anforderungen und Maßnahmen zur Sicherung der Quality-of-Service (QoS)- Kriterien aus Anwendungs- & Nutzer-Sicht (QoE: Quality of Experience) - QoS Architektur in IP-Netzen: Differentiated & Integrated Services - QoS Support & Auswirkung je Anwendung im IP Verkehrs-Mix  (Video-Streaming, VoIP, Web Browsing, Downloads, Social Networking etc.) Qualitätssicherung für Internet Services in ISP Netzinfrastrukturen - Einfluss der Netz- und Transportebene:  Routing (OSPF, BGP), Multiprotocol Label Switching (MPLS), TCP  mit Absicherung gegen Fehler und Ausfälle - Messung, Monitoring, Optimierung von IP Verkehr bzgl. QoS Qualitätssicherung in Service Overlays und auf Anwendungsebene - Content Delivery Netze (CDN), Clouds und Peer-to-Peer Netze (P2P)  inkl. verteilter Caches, Transportpfad-Optimierung, Skalierbarkeit - IETF Standardisierung (CDN Interconnection, ALTO: Appl. Layer Traffic Opt.)",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Vorwissen: Grundlegende Kenntnisse der Informatik und Internet-Anwendungen werden vorausgesetzt. Die Vorlesungen Kommunikationsnetze I und II sind empfohlen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0056-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Vorwissen: Grundlegende Kenntnisse der Informatik und Internet-Anwendungen werden vorausgesetzt. Die Vorlesungen Kommunikationsnetze I und II sind empfohlen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0056-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "",
            "Literatur": "Wird in der Vorlesung angesprochen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "TK1: Verteilte Systeme und Algorithmen",
        "Modul Nr.": "20-00-0065",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0065-ivTK1: Verteilte Systeme und Algorithmen6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Lernziele:- Umfassendes Überblickswissen über die grundlegenden Probleme und Ansätze- Tiefgehendes Methodenwissen zu klassischen verteilten Algorithmen und Programmierparadigmen- Anwendbare exemplarische Kenntnis aktueller Entwicklungen und StandardsStoffplan:- Einführung- Auffrischung und Ergänzung von Kapitel 1 der Kanonik Net-Centric Computing- Überblick über die Vorlesung- Verteilte Algorithmen\u25cb Elementaralgorithmen (z.B. globaler Zustand)\u25cb Basisalgorithmen (z.B. Ausschluss, Konsens, Kooperation)\u25cb Formalisierung (Eigenschaften und deren Nachweis)- Verteiltes Programmieren\u25cb Push-Paradigmen (z.B. IPC, RPC, DOC)\u25cb aktuelle Ansätze (z.B. Pull-Paradigmen, Objektmobilität)",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die Grundlagen der verteilten Programmierung und verteilter Algorithmen. Sie verstehen die grundlegenden Probleme verteilter Systeme und die klassischen verteilen Algorithmen und Programmierparadigmen. Sie können klassische und aktuelle Standards verteilter Programmierung praktisch anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: -Computer-Netzwerke und verteilte Systeme'",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: -Computer-Netzwerke und verteilte Systeme'",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete Literatur könnten sein:- George Coulouris, Jean Dollimore, Tim Kindberg: Distributed Systems. Concepts and Design (Gebundene Ausgabe) 832 Seiten, Addison Wesley; Auflage: 4th (14. Juni 2005), ISBN: 0321263545- M. Boger: Java in verteilten Systemen, 1999, dpunkt-Verlag, Heidelberg, ISBN: 3932588320- G. Tel: Introduction to Distributed Algorithms, 2nd Ed 2001, Cambridge University Press, ISBN: 0521794838- A. Tanenbaum, M.v.Steen, Verteilte Systeme: Grundlagen und Paradigmen, Pearson Studium 2003, ISBN: 3827370574- A. Tanenbaum: Computernetzwerke. 4te Auflage. Pearson Studium 2003, ISBN-10: 3827370469- J. Kurose, K. Ross: Computer Networking, 1. Ed. 2000, Adison-Wesley. ISBN: 0201477114- L. Peterson, B. Davie, Computernetze, 1. Aufl. 2000, dpunkt Heidelberg, ISBN:393258869X- Hammerschall, U.: Verteilte Systeme und Anwendungen. Pearson, München 2005, ISBN: 3827370965",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "TK3: Ubiquitous / Mobile Computing",
        "Modul Nr.": "20-00-0120",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0120-ivTK3: Ubiquitous / Mobile Computing6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Kenntnis technischer Grundlagen der Mobilkommunikation- Kenntnis wichtiger Herausforderungen, Thesen und Modelle des Ubiquitous Computing- Methodenwissen über aktuelle Ansätze des Ubiquitous ComputingStoffplan:- Einführung in Ubiquitous Computing\u25cb Definitionen und Bedeutung\u25cb Herausforderungen und Klassifikation\u25cb Wichtiges zur historischen Entwicklung (Mark Weiser u.a.)\u25cb Von Terminologie zu Taxonomie\u25cb Referenzarchitekture- Mobilkommunikation als \u2018Enabling Technology\u2019\u25cb Einordnung und physikalische Grundlagen\u25cb Elementare Mehrfachzugriffs- und Modulationsverfahren\u25cb Zellulare Weitverkehrsnetze: von GSM bis LTE\u25cb Drahtlose lokale Netze: wLAN, Bluetooth und ZigBee- Internet-of-Things: RFID und Smart Items\u25cb Grundlagen von RFID-Systemen\u25cb EPC und Smart Items\u25cb NFC: Nahfeld-Kommunikation- Service Discovery und Cloudlets\u25cb Grundlagen der Skalierbarkeit im Ubiquitous Computing\u25cb Service Discovery: Grundlagen\u25cb Service Discovery: konkurrierende Ansätze\u25cb Cloudlets: Forschungsansätze für Ubiquitous Cloud Computing- Context- und Location Aware Computing\u25cb Grundlagen der Adaptivität in Ubiquitous Computing\u25cb Kontext-Modelle und Ansätze für Context-Aware Computing\u25cb Technische Grundlagen der Ortsbestimmung und Location Awareness- Mensch-Maschine-Interaktion für Ubiquitous Computing\u25cb Einführung: Ease-of-Use und Post-Desktop-Interaktion\u25cb Interaction Design und Mulitmodale Interaktion\u25cb Grundlagen von Multitouch-Systemen\u25cb Pen-and-Paper-Interaktion und Tangible Interaction\u25cb UI Design: Evaluationstechniken\u25cb Systematisches UI Engineering- Privatsphäre und Vertrauen im Ubiquitous Computing\u25cb Einführung in Privacy und rechtliche Grundlagen\u25cb Zum Wesen personenbezogener Daten\u25cb Privacy-Enhancing Technologies (PETs) und Anonyme Kommunikation\u25cb Einführung in Vertrauen und Reputation\u25cb Vertrauensmodelle und Computational Trust\u25cb Trust-Management-Systeme",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die technische Grundlage mobiler Kommunikation. Sie verstehen die grundlegenden Herausforderungen von Ubiquitous Computing. Sie kennen aktuelle Ansätze um diese Herausforderungen zu lösen. Sie sind außerdem in der Lage ihre Kenntnisse auf aktuelle Probleme anzuwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: -Computer-Netzwerke und verteilte Systeme'",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: -Computer-Netzwerke und verteilte Systeme'",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete Literatur könnten sein:A Primärliteratur:Handbook of Research: Ubiquitous Computing Technology for Real Time Enterprises edited by Prof. Dr. Max Mühlhäuser, Dr. Iryna Gurevych, 2008, Information Science Reference, ISBN-10: 1599048329B Sekundärliteratur: 1. F. Adelstein, S. Gupta et al.: Fundamentals of Mobile & Pervasive Computing McGraw Hill 2004,2. Stefan Poslad: Ubiquitous Computing, Wiley 2009, ISBN 978-0-470-03560-33. Kapitel Mobilkommunikation: M. Sauter: Grundkurs Mobile Kommunikationssysteme: UMTS, HSDPA und LTE, GSM, GPRS und Wireless LAN; Vieweg-Teubner Studium 20104. J. Krumm (Ed.): Ubiquitous Computing Fundamentals, CRC Press 2010D. Cook, S. Das (Ed.): Smart Environments, Wiley 2005 ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Ubiquitous Computing in Geschäftsprozessen",
        "Modul Nr.": "20-00-0121",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0121-vlUbiquitous Computing in Geschäftsprozessen3 integrierte Lehrveranstaltung2",
            "Lerninhalt": "- Nutzungsmöglichkeiten aktueller Ubiquitous Computing Technologien in Geschäftsprozessen und im Bereich von Smart Cities- Ermittlung des ökonomischen Potentials verschiedener Ubiquitous Computing Technologien im Kontext verschiedener Geschäftsprozesse und im Bereich von Smart Cities- Verständnis der grundlegenden Technologien und Darstellung der mit diesen verbundenen Vorteile, Herausforderungen und Anwendungsfälle- Spezifische Technologien wie RFID, Smart Items (z.B. Smart Shelf) etc. und ihre Integration in Prozesse- Darstellung der Integration zwischen physischer und virtueller Welt, wie sie z.B. in aktuellen Enterprise Software Systemen realisiert wird- Sammeln praktischer Erfahrungen im Umgang mit Ubiquitous Computing Technologien im Kontext verschiedener Anwendungsfälle, z.B. mittels Live-Demonstrationen",
            "Qualifikationsziele_Lernergebnisse": "Nach der Teilnahme an dieser Lehrveranstaltungen haben sich Studierende Kenntnissen über Auswirkungen des ubiquitären Computing auf Geschäftsprozesse und Smart Cities in Verbindung mit grundlegenden Konzepten angeeignet",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Mühlhäuser, M.; Gurevych, I. (Eds.): Ubiquitous Computing Technology for Real Time Enterprises Information Science Reference, Dezember, 2007- Finkenzeller, K: RFID-Handbuch. Grundlagen und praktische Anwendungen von Transpondern, kontaktlosen Chipkarten und NFC. Hanser Fachbuch; Auflage: 5., aktual. u. erw. Aufl. (1. Oktober 2008)- Fleisch, E.; Mattern, F. (Hrsg.): Das Internet der Dinge: Ubiquitous Computing und RFID in der Praxis, Springer, Berlin, Heidelberg, New York 2005- Österle, H.; Fleisch, E.; Alt, R.: Business Networking - Shaping Collaboration between Enterprises, Springer- Callaway, E.H.: Wireless Sensor Networks: Architectures and Protocols, Auerbach Publications",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Mobile Netze",
        "Modul Nr.": "20-00-0748",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0748-ivMobile Netze 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Mobilkommunikation und drahtlose Kommunikationstechniken haben sich in den letzten Jahren rapide weiterentwickelt. Die integrierte Lehrveranstaltung erläutert Charakteristiken und Grundprinzipien mobiler Netze, und praktische Lösungsansätze werden vorgestellt. Der Fokus der Veranstaltung liegt hierbei auf der Vermittlungsschicht (Netzwerkschicht). Zusätzlich zum Stand der Technik werden in der Veranstaltung aktuelle Forschungsfragen diskutiert und Methoden und Werkzeuge zur systematischen Behandlung dieser Fragen erläutert. Die Inhalte werden in Übungseinheiten vertieft.Lerninhalte:- Einleitung: Drahtlose und mobile Kommunikation: Anwendungen, Geschichte, Marktchancen- Überblick über drahtlose Kommunikation: Drahtlose Übertragung, Frequenzen und Frequenzregulierung, Signale, Antennen, Signalausbreitung, Multiplex, Modulation, Spreizband-Technik, Zellulare Systeme- Medienzugriff: SDMA, FDMA, CDMA, TDMA (Feste Zuordnung, Aloha, CSMA, DAMA, PRMA, MACA, Kollisionsvermeidung, Polling)- Drahtlose Lokale Netze (Wireless LAN): IEEE 802.11 Standard inklusive Bitübertragungsschicht, Sicherungsschicht und Zugriffverfahren, Dienstgüte, Energieverwaltung- Drahtlose Stadtnetze, drahtlose Mesh Netze, IEEE 802.16 Standard inklusive Betriebsmodi, Medienzugriff, Dienstgüte, Ablaufkoordination- Mobilität auf der Netzwerkschicht: Konzepte zur Mobilitätsunterstützung, Mobile IP- Ad hoc Netze: Terminologie, Grundlagen und Applikationen, Charakteristika von Ad hoc Kommunikation, Ad hoc Routing Paradigmen und Protokolle- Leistungsbewertung von mobilen Netzen: Einführung in die Leistungsbewertung, systematischer Ansatz/häufige Fehler und wie man sie vermeiden kann, experimentelles Design und Analyse- Mobilität auf der Transportschicht: Varianten von TCP (Indirect TCP, Snoop TCP, Mobile TCP, Wireless TCP)- Mobilität auf der Anwendungsschicht: Anwendungen für mobile Netze und drahtlose Sensornetze",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung haben Studierende ein umfassendes Wissen der Funktionsweise mobiler Kommunikationsnetze. Sie können die wichtigsten Grundlagen drahtloser Kommunikationstechniken erläutern. Die Studierenden können weiterhin Medienzugriffsverfahren kategorisieren und die Funktionsweise dieser Verfahren im Detail erklären. Insbesondere weisen sie ein tiefgehendes Verständnis von Verfahren auf Vermittlungsschicht und Transportschicht auf, mit Schwerpunktsetzung auf Ad hoc und Mesh Netze. Die Studierenden erlangen Wissen über die Zusammenhänge zwischen unterschiedlichen Protokollschichten und können ihr erworbenes Wissen auf die methodische Analyse von realen Kommunikationssystemen anwenden. Sie sind somit in der Lage, die Charakteristiken und Grundprinzipien des Problemraumes drahtloser und mobiler Kommunikation detailliert zu erläutern und weisen auf diesem Feld ein fundiertes Wissen in Praxis und Theorie auf. Die Übungsteile der integrierten Veranstaltung vertiefen das theoretische Wissen durch Literatur-, Rechen- und praktische Implementierungs-/Anwendungsübungen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Kommunikationsnetze",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Kommunikationsnetze",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Social Learning und Knowledge Sharing Technologien",
        "Modul Nr.": "20-00-0773",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0773-iv Social Learning und Knowledge Sharing Technologien0 Integrierte Veranstaltung4",
            "Lerninhalt": "Die Lehrveranstaltung hat das Ziel, grundlegendes Wissen zu vermitteln zu den wichtigsten Technologien und Aspekten des Systemdesigns, die für moderne, web-basierte Lernumgebungen benötigt werden. Das schließt das Management von Lernressourcen, Modellierung Lernender, Empfehlung von passenden Ressourcen, sowie die Adaption des Systemverhaltens an die Bedürfnisse der Lernenden ein. Darüber hinaus werden Social Media Interaktionskonzepte genutzt, um die Vernetzung und den Wissensaustausch der Lernenden untereinander zu fördern.1. Einführung, Theorien und Systeme für das Lernen und den Wissensaustausch: Lernen und grundlegende Theorien, Herausforderungen des Lernen und des Wissensaustausches in Communities beim Einsatz interaktiver, sozialer Systeme.2. Datenstrukturen für das Lernen und Wissensressourcen: Syntax und Repräsentation, Strukturen, Ressourcenbeschreibungen, Repositories3. Datenstrukturen für Lernenden-Modelle und Commmunitystrukturen: Benutzer/innen-Profile, Wissensdomänenmodelle, Graphentheorie spezielle tripartite Repräsentation und Interaktionsgraphen4. Social Media Web-Systeme und Muster: Systementwurf, Basisfunktionalität, Sichtbarkeit und Rechtemanagement, Mechanismen für Verbreitung, Mechanismen für Reputation, Kommunikationsdesign5. Assistenz in Social Learning Systemen: Artefakt-zentrierte Sammlung und Analyse, Ressourcenempfehlungssysteme, Lernpfadanalyse6. Kooperationsunterstützung: Community Mining, Human Recommender Systems, Social Network Analysis7. Kollaborationsunterstützung: Peer Tutoring, kollaborative Aufgaben, CSCL Systeme, Gruppenformation8. Feedback: Peer Assessment, Peer Feedback, Learning Analytics, Awareness Mecha-nismen9. Kontextbewußtes Lernen: Kontext, Methoden für Kontexterkennung, Umsetzung kontextbewußter Dienste10. Evaluationsmethoden: Metriken, Evaluation mit historischen Daten, Methoden zur Validierung von Theorien und Hypothesen, Formative und summative Evaluation.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage, moderne Web-Anwendungen für den Wissenserwerb und das Lernen in Communities zu analysieren und selbst zu entwerfen. Basierend auf etablierte Entwurfsmuster und Technologien für Lern-/Web-Systeme können die Teilnehmenden die Informations-Repräsentation (Datenschicht), das Design und die Funktionalität (Anwendungs-schicht), sowie die dazugehörigen Algorithmen auswählen und parametrisieren um Anwender/innen gezielt im Lernprozess zu unterstützen. Die Studierenden können dazu Lösungen zur Adaption der Anwendung an die Bedürfnisse Lernender einsetzen und kennen passende Evaluationsmethoden, um die Qualität und die Effekte der Web-Plattformen für Social Learning und Wissensaustausch zu bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Kenntnisse und Fertigkeiten in Methoden des Software-System-Entwurfs, Webtechnologien wie HTML und CSS, sowie Kommunikationsprotokollen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0773-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Kenntnisse und Fertigkeiten in Methoden des Software-System-Entwurfs, Webtechnologien wie HTML und CSS, sowie Kommunikationsprotokollen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0773-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Drahtlose Netze zur Krisenbewältigung: Grundlagen, Entwurf und Aufbau von Null",
        "Modul Nr.": "20-00-0780",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0780-ivDrahtlose Netze zur Krisenbewältigung: Grundlagen, Entwurf und Aufbau von Null5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "Die Kommunikationsfähigkeit der Bevölkerung untereinander ist für die Bewältigung von Krisen von höchster Bedeutung. In dieser Veranstaltung wird der Aufbau von drahtlosen Kommunikationsnetzen von Null behandelt, d.h. unter der Annahme, dass keinerlei Kommunikationsinfrastruktur mehr vorhanden ist. Die Veranstaltung vermittelt theoretische Grundlagen aus den Bereichen der Nachrichtentechnik und des Amateurfunks und vertieft diese um die nötigen Kenntnisse, um Netze für den Krisenfall zu entwerfen und praktisch zu realisieren. Die vorgestellten Verfahren umfassen dabei Reichweiten von lokaler Kommunikation bis hin zur Kommunikation um den ganzen Globus, ohne auf bestehende Infrastruktur angewiesen zu sein.Theoretische Übungen sowie das Durchführen von Messungen, der Aufbau von Schaltungen und die Vorführung von Funkverfahren in unserer Laborumgebung vertiefen die Veranstaltung.Lerninhalte:- Signale, Wellenausbreitung, Antennen und elektrotechnische Grundlagen- Verfahren zur Modulation und Demodulation analoger und digitaler Signale (OFDM, ATV/SSTV, Packet Radio, SSB, ...)- Systemaspekte für Kommunikation im Krisenfall- Entwurf und praktischer Aufbau von drahtlosen Kommunikationssystemen für den Krisenfall von Null",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden theoretisches und praktisches Wissen auf dem Gebiet der drahtlosen, infrastrukturlosen Kommunikation im Krisenfall. Sie verstehen die physikalischen und elektrotechnischen Grundlagen der drahtlosen Kommunikation und kennen theoretische wie praktische Funkverfahren im Detail. Sie sind in der Lage ein Praktisches Kommunikationsystem von Null aufzubauen und zu betreiben. Die Studierenden erwerben Kompetenzen im Bereich Amateurfunk und Software-Defined Radios.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Ausgewählte Buchkapitel und ausgewählte wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Kommunikationsnetze I",
        "Modul Nr.": "18-sm-1010",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-1010-vlKommunikationsnetze I Vorlesung 318-sm-1010-ueKommunikationsnetze I Übung 1",
            "Lerninhalt": "In dieser Veranstaltung werden die Technologien, die Grundlage heutiger Kommunkationsnetze sind, vorgestellt und analysiert.Die Vorlesung deckt grundlegendes Wissen über Kommunikationssysteme ab und betrachtet im Detail die 4 unteren Schichten des ISO-OSI-Modells: Bitübertragungsschicht, Sicherungsschicht, Vermittlungsschicht und Teile der Transportschicht.Die Bitübertragungsschicht, die zuständig ist für eine adäquate Übertragung über einen Kanal, wird kurz betrachtet. Danach werden fehlertolerante Kodierung, Flusskontrolle und Zugangskontrollverfahren (Medium access control) der Sicherungsschicht betrachtet. Anschließend wird die Netzwerkschicht behandelt. Der Fokus liegt hier auf Wegefindungs-und Überlastkontrollverfahren. Abschließend werden grundlegende Funktionen der Transportschicht betrachtet. Dies beinhaltet UDP und TCP- Das Internet und dessen Funktionsweise wird im Laufe der Vorlesung detailliert betrachtet.Themen sind:- ISO-OSI und TCP/IP Schichtenmodelle- Aufgaben und Eigenschaften des Bitübertragungsschicht- Kodierungsverfahren der Bitübertragungsschicht- Dienste und Protokolle der Sicherungsschicht- Flußkontrolle (sliding window)- Anwendungen: LAN, MAN, High-Speed LAN, WAN- Dienste der Vermittlungsschicht- Wegefindungsalgorithmen- Broadcast- und Multicastwegefindung- Überlastbehandlung- Adressierung- Internet Protokoll (IP)- Netzbrücken- Mobile Netze- Services und Protokolle der Transportschicht- TCP, UDP",
            "Qualifikationsziele_Lernergebnisse": "Diese Vorlesung betrachet Grundfunktionalitäten, Serives, Protokolle, Algorithmen und Standards von Kommunikationssystemen. Vermitteltet Kompetenzen sind grundlegedes Wissen über die vier unteren Schichten des ISO-OSI-Modells: Bitübertragungsschicht, Sicherungsschicht, Vermittlungsschicht und Transportschicht. Desweiteren wird Grundwissen über Kommunikationssysteme vermittelt. Besucher der Vorlesung werden Funktionen heutiger Netzwerketechnologien und des Internets erlernen.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "Wi-CS, Wi-ETiT, BSc CS, BSc ETiT, BSc iST",
            "Literatur": "Ausgewählte Kapitel aus folgenden Büchern:- Andrew S. Tanenbaum: Computer Networks, 5th Edition, Prentice Hall, 2010- Andrew S. Tanenbaum: Computernetzwerke, 3. Auflage, Prentice Hall, 1998- Larry L. Peterson, Bruce S. Davie: Computer Networks: A System Approach, 2nd Edition, Morgan Kaufmann Publishers, 1999- Larry L. Peterson, Bruce S. Davie: Computernetze, Ein modernes Lehrbuch, 2. Auflage, Dpunkt Verlag, 2000- James F. Kurose, Keith W. Ross: Computer Networking: A Top-Down Approach Featuring the Internet, 2nd Edition, Addison Wesley-Longman, 2002- Jean Walrand: Communication Networks: A First Course, 2nd Edition, McGraw-Hill, 1998",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Kommunikationsnetze II",
        "Modul Nr.": "18-sm-2010",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2010-vlKommunikationsnetze II Vorlesung 318-sm-2010-ueKommunikationsnetze II Übung 1",
            "Lerninhalt": "Die Vorlesung Kommunikationsnetze II umfasst die Konzepte der Computervernetzung und -telekommunikation mit dem Fokus auf dem Internet. Beginnend mit der Geschichte werden in der Vorlesung vergangene, aktuelle und zukünftige Aspekte von Kommunikationsnetzen behandelt. Zusätzlich zu bekannten Protokollen und Technologien wird eine Einführung in Neuentwicklungen im Bereich von Multimedia Kommunikation (u.a. Video Streaming, P2P, IP-Telefonie, Cloud Computing und Service-orientierte Architekturen) gegeben. Die Vorlesung ist als Anschlussvorlesung zu Kommunikationsnetze I geeignet.Themen sind:- Grundlagen und Geschichte von Kommunikationsnetzen (Telegrafie vs. Telefonie, Referenzmodelle, ...)- Transportschicht (Adressierung, Flusskontrolle, Verbindungsmanagement, Fehlererkennung, Überlastkontrolle, ...)- Transportprotokolle (TCP, SCTP)- Interaktive Protokolle (Telnet, SSH, FTP, ...)- Elektronische Mail (SMTP, POP3, IMAP, MIME, ...)- World Wide Web (HTML, URL, HTTP, DNS, ...)- Verteilte Programmierung (RPC, Web Services, ereignisbasierte Kommunikation)- SOA (WSDL, SOAP, REST, UDDI, ...)- Cloud Computing (SaaS, PaaS, IaaS, Virtualisierung, ...)- Overlay-Netzwerke (unstrukturierte P2P-Systeme, DHT-Systeme, Application Layer Multicast, ...)- Video Streaming (HTTP Streaming, Flash Streaming, RTP/RTSP, P2P Streaming, ...)- VoIP und Instant Messaging (SIP, H.323)",
            "Qualifikationsziele_Lernergebnisse": "Die Vorlesung Kommunikationsnetze II umfasst die Konzepte der Computervernetzung und -telekommunikation mit dem Fokus auf dem Internet. Beginnend mit der Geschichte werden in der Vorlesung vergangene, aktuelle und zukünftige Aspekte von Kommunikationsnetzen behandelt. Zusätzlich zu bekannten Protokollen und Technologien wird eine Einführung in Neuentwicklungen im Bereich von Multimedia Kommunikation (u.a. Video Streaming, P2P, IP-Telefonie, Cloud Computing und Service-orientierte Architekturen) gegeben. Die Vorlesung ist als Anschlussvorlesung zu Kommunikationsnetze I geeignet.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesung Kommunikationsnetze I wird empfohlen. Das Theoriewissen aus der Vorlesung Kommunikationsnetze II wird in praktischen Programmierübungen vertieft. Gundlegende Programmierkenntnisse sind daher hilfreich.",
            "Pruefungsform": "Fachprüfung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesung Kommunikationsnetze I wird empfohlen. Das Theoriewissen aus der Vorlesung Kommunikationsnetze II wird in praktischen Programmierübungen vertieft. Gundlegende Programmierkenntnisse sind daher hilfreich.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "MSc ETiT, MSc iST, Wi-ETiT, CS, Wi-CS",
            "Literatur": "Ausgewählte Kapitel aus folgenden Büchern:- Andrew S. Tanenbaum: Computer Networks, 5th Edition, Prentice Hall, 2010- James F. Kurose, Keith Ross: Computer Networking: A Top-Down Approach, 6th Edition, Addison-Wesley, 2009- Larry Peterson, Bruce Davie: Computer Networks, 5th Edition, Elsevier Science, 2011",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Kommunikationsnetze IV",
        "Modul Nr.": "18-sm-2030",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2030-vlKommunikationsnetze IV 3 Vorlesung 2",
            "Lerninhalt": "Kommunikationsnetze IV behandelt die Modellierung und Leistungsbewertung von Computernetzwerken und Kommunikationssystemen. Der Schwerpunkt liegt auf aktuellen Analysemethoden mit denen ein grundlegendes Verständnis der Leistungsfähigkeit sowie eine Basis zur Planung, Optimierung und Weiterentwicklung von Kommunikationsnetzen vermittelt wird. Bedeutung und Implikationen der einzelnen Theorien werden an Beispielen mit Schwerpunkt auf dem Internet erläutert. Neben den analytischen Methoden gibt die Vorlesung eine Einführung in die Simulation von Kommunikationsnetzen sowie in die Messung in realen oder prototypischen Systemen und Testumgebungen. Über die gängigen Verfahren und ihre Anwendungen hinaus werden in der Vorlesung ausgesuchte Aspekte aktueller Forschungsfragen vertieft.Themen der Vorlesung sind:- Einführung in die Leistungsbewertung und ihre Anwendungen- Leaky-bucket-Verkehrsregulatoren, deterministische Verkehrsmodelle, deterministische und empirische Einhüllende- Scheduling, Generalized Processor SharingNetzwerkkalkül, min-plus Systemtheorie, deterministische Leistungsschranken- Poisson-Prozesse, Markov-Ketten , klassische Warteschlangentheorie, M|M|1 und M|G|1 Modelle- Modellierung von Paketdatenverkehr, Selbstähnlichkeit- Effektive Bandbreiten, Momente erzeugende Funktionen, statistisches Multiplexen- Statistisches Netzwerkkalkül, effektive Einhüllende, effektive Leistungsschranken- Simulation, Generierung von Zufallszahlen, Verteilungen, Konfidenzintervalle- Instrumentierung, Messung, Bandbreitenabschätzung im Internet",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden erhalten einen Überblick über die Bedeutung, grundlegende Methoden und wichtige Anwendungen der Leistungsbewertung von Kommunikationsnetzen. Sie kennen die typischen Mechanismen und Schedulingverfahren in Dienste integrierenden Netzen und können deren Wirkungsweise mit dem Netzwerkkalkül in der min-plus Systemtheorie erklären. Neben den Grundlagen der Warteschlangentheorie erlangen die Studenten detailliertes Wissen über die Theorie der effektiven Bandbreiten und weisen somit ein theoretisch fundiertes Verständnis des statistischen Multiplexens auf. Über die Analyse hinaus erhalten die Studenten Einblick in die Simulation und in ausgewählte Methoden und Werkzeuge zur Messung in realen Netzwerken. Sie sind in der Lage die erarbeiteten Verfahren gegeneinander abzugrenzen, problemspezifisch geeignete Methoden auszuwählen, auf typische Fragestellungen anzuwenden und relevante Schlussfolgerungen zu ziehen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesungen in Kommunikationsnetze I und II werden empfohlen.",
            "Pruefungsform": "Fachprüfung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesungen in Kommunikationsnetze I und II werden empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "Wi-CS, Wi-ETiT, BSc/MSc CS, MSc ETiT, MSc iST",
            "Literatur": "Ausgewählte Kapitel aus folgenden Büchern:- J.-Y. Le Boudec, P. Thiran: \"Network Calculus: A Theory of Deterministic Queuing Systems for the Internet\", Springer LNCS 2050, [url]http://ica1www.epfl.ch/PS_files/netCalBookv4.pdf[/url], 2004.- A. Kumar, D. Manjunath, J. Kuri: \"Communication Networking: An Analytical Approach\", Morgan Kaufmann, 2004.- A. M. Law, W. D. Kelton: \"Simulation, Modeling and Analysis\", McGraw Hill, 3rd Ed., 2000.- Selected Journal Articles and Conference Papers",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software Defined Networking",
        "Modul Nr.": "18-sm-2280",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Prof. Dr.-Ing. Ralf Steinmetz",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2280-ueSoftware Defined Networking 0 Übung 218-sm-2280-vl Software Defined Networking 0 Vorlesung 2",
            "Lerninhalt": "Der Kurs behandelt Themen aus dem Bereich Software Defined Networking:- SDN Data Plane- SDN Control Plane- SDN Application Plane- Network Function Virtualization- Network Virtualization and Slicing- QoS and QoE in Software Defined Networks",
            "Qualifikationsziele_Lernergebnisse": "Studierende erhalten einen vertieften Einblick in Software Defined Networking, sowie grundlegende Technologien und Anwendungen.",
            "Voraussetzung_fuer_die_Teilnahme": "Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesungen in Kommunikationsnetze I und II werden empfohlen.",
            "Pruefungsform": "Modulabschlussprüfung:- Modulprüfung (Fachprüfung, fakultativ, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Grundlegende Kurse der ersten 4 Semester werden benötigt. Die Vorlesungen in Kommunikationsnetze I und II werden empfohlen.",
            "Benotung": "Modulabschlussprüfung: - Modulprüfung (Fachprüfung, fakultativ, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "MSc ETiT, BSc/MSc iST, MSc Wi-ETiT, CS, Wi-CS",
            "Literatur": "Lehrbücher gemäß Ankündigung.Folienskript der Vorlesung und Artikelkopien nach Bedarf.",
            "Kommentar": "Schwerpunkt Robotik, Computational und Computer Engineering "
        }
    },
    {
        "Modulname": "Algorithmen für Hardware-Entwurfswerkzeuge",
        "Modul Nr.": "20-00-0183",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0183-vlAlgorithmen für Hardware-Entwurfswerkzeuge3 integrierte Lehrveranstaltung2",
            "Lerninhalt": "- Das VLSI-Entwurfsproblem- Grundlegende Graphenrepräsentationen und -algorithmen- Darstellung von hierarchischen Schaltungen- Realisierungstechnologien für integrierte Schaltungen- Layout-Kompaktierung- Timing-Analyse- Heuristische Optimierungsverfahren- Platzierungsprobleme, -verfahren und -kostenfunktionen- Exakte Optimierungsverfahren- Partitionierung mit Anwendung in der Platzierung- Floorplanningprobleme, -repräsentationen und -verfahren- Verdrahtungsprobleme, -verfahren und -kostenfunktionen",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung verschiedene Technologien für die Realisierung von integrierten Schaltungen. Sie können aus den verschiedenen Technologien die Anforderungen an Automatisierungswerkzeuge für verschiedene Teilaufgaben des Entwurfs- und Realisierungsprozesses herleiten. Sie sind vertraut mit der Modellierung technologischer Probleme durch formale Konzepte wie Graphen, Gleichungssysteme etc. Sie verstehen grundlegende Verfahren zur Lösung auch von harten Problemen und können aufbauend auf Erfahrungen mit verschiedenen Basisalgorithmen neue bzw. verfeinerte Implementierungen zur Erledigung der Entwurfsaufgaben entwickeln.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Empfohlen wird der erfolgreiche Besuch der Veranstaltungen 'Digitaltechnik' sowie 'Algorithmen und Datenstrukturen' und 'Funktionale und objektorientierte Programmierung'.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Empfohlen wird der erfolgreiche Besuch der Veranstaltungen 'Digitaltechnik' sowie 'Algorithmen und Datenstrukturen' und 'Funktionale und objektorientierte Programmierung'.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete Literatur könnten sein:Gerez: Algorithms for VLSI Design AutomationWang/Chang/Cheng: Electronic Design Automation ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Optimierung statischer und dynamischer Systeme",
        "Modul Nr.": "20-00-0186",
        "Kreditpunkte": "10 CP",
        "Arbeitsaufwand": "300 h",
        "Selbststudium": "210 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0186-ivOptimierung statischer und dynamischer Systeme10 integrierte Lehrveranstaltung6",
            "Lerninhalt": "Optimierung statischer Systeme:- nichtlineare Optimierung ohne und mit Nebenbedingungen, notwendige Bedingungen- numerische Newton-Typ- und SQP-Verfahren- nichtlineare kleinste Quadrate- gradientenfreie Optimierungsverfahren- praktische Aspekte wie Problemformulierung, Approximation von Ableitungen, Verfahrensparameter, Bewertung einer berechneten LösungOptimierung dynamischer Systeme:- Parameteroptimierungs- und Schätzprobleme- optimale Steuerungsprobleme- Maximumprinzip und notwendige Bedingungen- numerische Verfahren zur Berechnung optimaler Trajektorien- optimale Rückkopplungssteuerung- linear-quadratischer RegulatorAnwendungen und Fallstudien aus den Ingenieurwissenschaften und der RobotikTheoretische und praktische Übungen sowie Programmieraufgaben zur Vertiefung der Fachkenntnisse und methodischen Fähigkeiten",
            "Qualifikationsziele_Lernergebnisse": "Studierende besitzen nach erfolgreicher Teilnahme grundlegende Kenntnisse und methodische Fähigkeiten der Konzepte und Berechnungsverfahren der Optimierung statischer und dynamischer Systeme und deren Anwendungen bei Optimierungsaufgaben in den Ingenieurwissenschaften.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: grundlegende mathematische Kenntnisse und Fähigkeiten in Linearer Algebra, Analysis mehrerer Veränderlicher und Grundlagen gewöhnlicher Differentialgleichungen",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: grundlegende mathematische Kenntnisse und Fähigkeiten in Linearer Algebra, Analysis mehrerer Veränderlicher und Grundlagen gewöhnlicher Differentialgleichungen",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- vorlesungsbegleitende Folienzu einzelnen Themen der Lehrveranstaltung:- J. Nocedal, S.J. Wright: Numerical Optimization, Springer- C.T. Kelley: Iterative Methods for Optimization, SIAM Frontiers in Applied Mathematics- L.M. Rios, N.V. Sahinidis: Derivative-free optimization: a review of algorithms and comparison of software implementations, Journal of Global Optimization (2013) 56:1247-1293- A.E. Bryson, Y.-C. Ho: Applied Optimal Control: Optimization, Estimation and Control, CRC Press- J.T. Betts: Practical Methods for Optimal Control and Estimation Using Nonlinear Programming, SIAM Advances in Design and Control",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Programmierung Massiv-Paralleler Prozessoren",
        "Modul Nr.": "20-00-0419",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0419-ivProgrammierung Massiv-Paralleler Prozessoren6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Grundlagen massiv-paralleler Hardware mit einem Schwerpunkt auf modernen Beschleunigern- parallele Algorithmen - effiziente Programmierung massiv-paralleler Systeme- praktische Programmierprojekte mit Co-Betreuung durch einen Wissenschaftler au seiner Anwendungsdomain ",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Besuch der Veranstaltung sind Studierende dazu in der Lage, Problemstellungen im Kontext massiv-paralleler Systeme zu analysieren. Sie können selbständig neue Anwendungen entwickeln und ihre Performanz systematisch verbessern. Sie verstehen grundlegende parallele Algorithmen und Programmierparadigmen und können sich selbständig aktuelle Literatur erarbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: solide Programmierkenntnisse in C/C++Systemnahe und Parallele Programmierung",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: solide Programmierkenntnisse in C/C++Systemnahe und Parallele Programmierung",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Lernende Roboter",
        "Modul Nr.": "20-00-0629",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0629-vlLernende Roboter 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Grundlagen aus der Robotik und des Maschinellen Lernens für Lernende Roboter- Maschinellen Lernen von Modellen- Representation einer Policy. Hierarchische Abstraktion mit Bewegungsprimitiven- Imitationslernen- Optimale Steuerung mit gelernten Modellen- Reinforcement Learning und Policy Search-Verfahren- Inverses Reinforcement Learning",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichen Abschluss der Lehrveranstaltung verstehen Studierende die Grundlagen des Maschinellen Lernens und der Robotik. Sie können maschinelle Lernverfahren anwenden um einen Roboter zu befähigen, neue Aufgaben zu erlernen. Studierende verstehen die Grundlagen von Reinforcement Learning und können verschiedene Algorithmen anwenden um eine Policy des Roboters aufgrund von Interaktion mit der Umgebung zu erlernen. Sie verstehen den Unterschied zwischen Imitation Learning, Reinforcement Learning, Policy Search und Inverse Reinforcement Learning und können einschätzen, wann sie welchen Ansatz verwenden sollen. Sie können diese Ansätze auch problemlos auf geeignete Aufgabenstellungen anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Gute Programmierkenntnisse in Matlab, Machine Learning 1 - Statistical Approaches sind hilfreich aber nicht zwingend erforderlich",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Gute Programmierkenntnisse in Matlab, Machine Learning 1 - Statistical Approaches sind hilfreich aber nicht zwingend erforderlich",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Deisenroth, M. P.; Neumann, G.; Peters, J. (2013). A Survey on Policy Search for Robotics, Foundations and Trends in RoboticsKober, J; Bagnell, D.; Peters, J. (2013). Reinforcement Learning in Robotics: A Survey, International Journal of Robotics ResearchC.M. Bishop, Pattern Recognition and Machine Learning (2006),R. Sutton, A. Barto. Reinforcement Learning - an IntroductionNguyen-Tuong, D.; Peters, J. (2011). Model Learning in Robotics: a Survey",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Grundlagen der Robotik",
        "Modul Nr.": "20-00-0735",
        "Kreditpunkte": "10 CP",
        "Arbeitsaufwand": "300 h",
        "Selbststudium": "210 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0735-ivGrundlagen der Robotik 0 integrierte Lehrveranstaltung6",
            "Lerninhalt": "Die Lehrveranstaltung behandelt räumliche Darstellungen und Transformationen, Manipulatorkinematik, Fahrzeugkinematik, kinematische Geschwindigkeit, Jacobi-Matrix, Roboterdynamik, Robotersensoren und -antriebe, Roboterregelungen, Bahnplanung, Lokalisierung und Navigation mobiler Roboter, Roboterautonomie und Roboterentwicklung.Theoretische und praktische Übungen sowie Programmieraufgaben dienen zur Vertiefung der Lehrinhalte.",
            "Qualifikationsziele_Lernergebnisse": "Studierende besitzen nach erfolgreicher Teilnahme die für grundlegende Untersuchungen und ingenieurwissenschaftliche Entwicklungen in der Robotik notwendigen grundlegenden Fachkenntnisse und methodischen Fähigkeiten im Bereich der Modellierung, Kinematik, Dynamik, Regelung, Bahnplanung, Navigation, Wahrnehmung und Autonomie von Robotern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden mathematische Grundkenntnisse und -fähigkeiten in Linearer Algebra, Analysis mehrerer Veränderlicher und Grundlagen gewöhnlicher Differentialgleichungen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0735-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)In dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. § 25 (2) der 5. Novelle der APB und den vom FB 20 am 30.3.2017 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden mathematische Grundkenntnisse und -fähigkeiten in Linearer Algebra, Analysis mehrerer Veränderlicher und Grundlagen gewöhnlicher Differentialgleichungen.",
            "Benotung": "Bausteinbegleitende Prüfung:- [20-00-0735-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- vorlesungsbegleitendes Skript und VorlesungsfolienUmfassende Übersicht der Robotik:- B. Siciliano, O. Khatib: Springer Handbook of Robotics, Springer Verlagzu einzelnen Themen der Lehrveranstaltung:- J.J. Craig: Introduction to Robotics: Mechanics and Control, 3rd edition, Prentice Hall- M.W. Spong, S. Hutchinson, M. Vidyasagar: Robot Modeling and Control, Wiley- R. Siegwart, I.R. Nourbakhsh, D. Scaramuzza: Introduction to Autonomous Mobile Robots, MIT Press- H. Choset, K.M. Lunch, S. Hutchinson, G.A. Kantor,W. Burgard, L.E. Kavraki, S. Thrun: Principles of Robot Motion: Theory, Algorithms, and Implementations, Bradford- S. Thrun,W. Burgard, D. Fox: Probabilistic Robotics, MIT Press",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Beherrschen Moderner Prozessoren für Eingebettete Systeme",
        "Modul Nr.": "20-00-1004",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1004-iv Beherrschen Moderner Prozessoren für Eingebettete Systeme0 Integrierte Veranstaltung3",
            "Lerninhalt": "* Prozessorarchitekturen in Eingebetteten Systemen* ARM Instruktionssatz und Mikroarchitektur* ARM Compiler und Simulatoren* ARM Bootloading und (Echtzeit-)Betriebssysteme* ARM Debugging, Profiling und Tracing* ARM Ansteuerung von Peripheriekomponenten* ARM Power Management* ARM Anwendungsklassen (Cortex-M/-A/-R)* Entwicklungsperspektiven eingebetteter Prozessoren* Aktuelle Forschungsergebnisse",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss der Lehrveranstaltung können Studierende* die wesentlichen Bestandteile und Funktionsweisen von eingebetteten Prozessoren skizzieren,* die Vor- und Nachteile verschiedener Prozessorarchitekturen differenzieren,* wichtige Entwicklungswerkzeuge für eingebettete Prozessoren anwenden,* existierenden Programmcode auf Funktionalität und Effizienz untersuchen,* effizienten Programmcode für spezifische Anwendungen entwickeln,* aktuelle Forschungsarbeiten zu eingebetteten Systemen einschätzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Erfolgreiche Teilnahme an der Veranstaltung \"Rechnerorganisation\" oder vergleichbare Qualifikationen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1004-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Erfolgreiche Teilnahme an der Veranstaltung \"Rechnerorganisation\" oder vergleichbare Qualifikationen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1004-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Reinforcement Learning: Von Grundlagen zu den tiefen Ansätzen",
        "Modul Nr.": "20-00-1047",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1047-iv Reinforcement Learning: Von Grundlagen zu den tiefen Ansätzen0 Integrierte Veranstaltung4",
            "Lerninhalt": "- Auffrischung des Hintergrundwissens- Black box Reinforcement Learning- Modellierung als Bandit, Markov Decision Processes und Partially Observable Markov Decision Processes- Optimale Steuerung und Regelung- Modellernen- Wertefunktionslernen- Policy Search- Tiefe Wertefunktion Methoden- Tiefe Policy Search Methoden- Exploration vs Exploitation- Hierarchisches Reinforcement Learning- Intrinsische Motivation",
            "Qualifikationsziele_Lernergebnisse": "Dieser Kurs richtet sich an Studierende mit erster Erfahrung im maschinellen Lernen und vermittelt diesen Studierenden das notwendige Wissen, um eigenständig Forschungsprojekte im Bereich der Reinforcement Learning durchzuführen, z.B. im Rahmen einer Bachelor- oder Masterarbeit. Dies betrifft sowohl ein grundlegendes Verständnis der algorithmischen Ansätze zum Reinforcement Learning als auch Anwendungen von tiefen Netzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Gute Programmierkenntnisse in Python.Vorherige Belegung der Vorlesung Statistical Machine Learning ist hilfreich aber nicht zwingend erforderlich",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1047-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Gute Programmierkenntnisse in Python.Vorherige Belegung der Vorlesung Statistical Machine Learning ist hilfreich aber nicht zwingend erforderlich",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1047-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktische FPGA-Programmierung mit Hochsprachen",
        "Modul Nr.": "20-00-1081",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1081-iv Praktische FPGA-Programmierung mit Hochsprachen0 Integrierte Veranstaltung2",
            "Lerninhalt": "FPGAs wurden in den letzten Jahren sehr erfolgreich zur Umsetzung anwendungsspezifischer Beschleuniger in heterogenen Systemen eingesetzt. Allerdings ist die Programmierung mit konventionellen Hardware-Beschreiubungssprachen wie Verilog oder VHDL nach wie vor mühsam.Als Alternative spielen High-Level Synthese Werkzeuge, die Hardware auch aus Hochsprachen wie C/C++ erzeugen können, eine zunehmend wichtigere Rolle bei der Implementierung solcher Beschleuniger. Im Rahmen dieser Veranstaltung erwerben Sie nützliches Hintergrundwissen zu den grundlegenden Algorithmen der High-Level Synthese sowie Kenntnisse beim praktischen Entwurf und der Optimierung von FPGA-Designs mittels High-Level Synthese-Werkzeugen.Darüber hinaus lernen Sie relevante Techniken zur Integration vonFPGA-basierten Beschleunigern in heterogene Systeme kennen. Im Rahmen der mit dieser Veranstaltung verbunden Praxisphase implementieren Sie einen FPGA-basierten Beschleuniger für ein vorgegebenes Problem und setzen diesen auf einem typischen heterogenen System in echter Hardware um.",
            "Qualifikationsziele_Lernergebnisse": "- Verständnis der Grundlagen von HLS-Systemen- Verständnis von wichtigen Interna von HLS-Systemen (z.B. Optimierung, Scheduling)- Fähigkeit zum Entwurf von Hardware-Beschleunigern in Hochsprache und Nutzung von HLS-Systemen zur Erzeugung von lauffähigen FPGA-Designs- Erfahrung in der Fehlersuche und der Optimierung in mittels HLS erzeugter Hardware-Designs- Erfahrung in der Integration von Hardware-Beschleunigern in heterogene Rechensysteme mittels Hardware/Software-Co-Design Werkzeugen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Grundlagen digitaler Logik (Digitaltechnik (DT)- Grundlagen Rechnerarchitektur (Rechnerorganisation (RO), AER)- Vorwissen zu Compilern vorteilhaft, aber nicht verpflichtend- Umgang mit Linux-Systemen und virtuellen Maschinen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1081-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Grundlagen digitaler Logik (Digitaltechnik (DT)- Grundlagen Rechnerarchitektur (Rechnerorganisation (RO), AER)- Vorwissen zu Compilern vorteilhaft, aber nicht verpflichtend- Umgang mit Linux-Systemen und virtuellen Maschinen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1081-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Grundlagen der Bioinformatik",
        "Modul Nr.": "10-30-0036",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "10-01-0036-vlBioinformatik-Vorlesung 2 Vorlesung 210-01-0036-seBioinformatik-Übung 2 Übung 2",
            "Lerninhalt": "Algorithmen für die Sequence Analyse und AlignmentsMolekulare VisualisierungAlgorithmen für Strukturvorhersage und HomologiemodellierungMolecular Dynamics als Simulationstechnik in HPC",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten erwerben Grundlagenwissen in der sequenz-basierten Bioinformatik (Sequence Alignment, Scoring Schemata, Datenbanken, Mustererkennung) und derStrukturmodellierung und Simulation (Strukturvorhersage, Molekulardynamik).Die Studenten werden in die Lage versetzt, eigenständig Standard-Werkzeuge derBioinformatik einzusetzen und deren grundlegende Algorithmen in diversenImplementierungen zu identifizieren. Notwendige statistische und mathematische Grundlagen werden vermittelt und in Übungen und Seminarstunden vertieft.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Deonier, Tavare, Waterman Computational Genome Analysis, Springer, 2005- Durbin, Eddy, Krogh, Mitchison, Biological Sequence Analysis, Cambridge University Press,- 1998- MacKay, Information Theory, Inference, and Learning Algorithms, Cambridge University- Press, 2003- Schlick, Molecular Modeling and Simulation, Springer, 2002",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Echtzeitsysteme",
        "Modul Nr.": "18-su-2020",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "18-su-2020-vlEchtzeitsysteme Vorlesung 318-su-2020-ueEchtzeitsysteme Übung 1",
            "Lerninhalt": "Die Vorlesung Echtzeitsysteme befasst sich mit einem Softwareentwicklungsprozess, der speziell auf die Spezifika von Echtzeitsystemen zugeschnitten ist. Dieser Softwareentwicklungsprozess wird im weiteren Verlauf während der Übungen in Ausschnitten durchlebt und vertieft. Der Schwerpunkt liegt dabei auf dem Einsatz objektorientierter Techniken. In diesem Zusammenhang wird das echtzeitspezifische CASE Tool Rhapsody vorgestellt und eingesetzt. Des weiteren werden grundlegende Charakteristika von Echtzeitsystemen und Systemarchitekturen eingeführt. Auf Basis der Einführung von Schedulingalgorithmen werden Einblicke in Echtzeitbetriebssysteme gewährt. Die Veranstaltung wird durch eine Gegenüberstellung der Programmiersprache Java und deren Erweiterung für Echtzeitsysteme (RT-Java) abgerundet.",
            "Qualifikationsziele_Lernergebnisse": "Studenten, die erfolgreich an dieser Veranstaltung teilgenommen haben, sollen in der Lage sein, modellbasierte (objektorientierte) Techniken zur Entwicklung eingebetteter Echtzeitsysteme zu verwenden und zu bewerten. Dazu gehören folgende Fähigkeiten:- Systemarchitekturen zu bewerten und Echtzeitsysteme zu klassifizieren- selbständig ausführbare Modelle zu erstellen und zu analysieren- Prozesseinplanungen anhand üblicher Schedulingalgorithmen durchzuführen- Echtzeitprogrammiersprachen und -Betriebssysteme zu unterscheiden, zu bewerten und einzusetzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundkennntisse des Software-Engineerings sowie Kenntnisse einer objektorientierten Programmiersprache",
            "Pruefungsform": "Fachprüfung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundkennntisse des Software-Engineerings sowie Kenntnisse einer objektorientierten Programmiersprache",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "MSc ETiT, BSc iST, MSc Wi-ETiT, Informatik",
            "Literatur": "www.es.tu-darmstadt.de/lehre/es/",
            "Kommentar": "Schwerpunkt Software-Systeme und formale Grundlagen "
        }
    },
    {
        "Modulname": "Konzepte der Programmiersprachen",
        "Modul Nr.": "20-00-0072",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0072-ivKonzepte der Programmiersprachen6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Die wesentlichen Konzepte von Programmiesprachen. Insbesondere werden dazu Programmiersprachen in ihre Basiskonzepte aufgespalten und diese detailliert betrachtet:- Die Rolle von Syntax - Funktionen - Meta-Interpreter - Rekursion - Verzögerte Auswertung - Zustand und Seiteneffekte - Continuations - Statische Typsysteme - Domain-spezifische Sprachen und Makros - Objektorientierte Programmierung",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Abschluss der Veranstaltung verfügen die Studierenden über die folgenden Fähigkeiten:- Sie können die entscheidenden Merkmale von Programmiersprachen benennen und im konkreten Fall identifizieren;- die Studierenden sind mit den wesentlichen theoretischen Konzepten von Programmiersprachen vertraut;- sie können verschiedene Vorgehensweisen bei der Implementierung von Programmiersprachen benennen und einfache Programmiersprachen umsetzen;- die Studierenden verstehen, wie Programmiersprachen den Lösungsraum von Problemen beeinflussen; sie können die Auswirkung der Wahl einer Programmiersprache auf die Softwareentwicklung abschätzen;- die Studierenden sind in der Lage stereotypische Kategorisierungen von Programmiersprachen zu überwinden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Funktionale und Objektorientierte Programmierkonzepte",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Funktionale und Objektorientierte Programmierkonzepte",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Distributed Software SystemsB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- S. Krishnamurthi: Programming Languages - Application and Interpretation - M. Scott: Programming Language Pragmatics, Morgan Kaufmann - D. Friedman et al.: Programming Language Essentials, MIT Press ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Effiziente Graphenalgorithmen",
        "Modul Nr.": "20-00-0110",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0110-ivEffiziente Graphenalgorithmen 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Effiziente Algorithmen für Graphendurchlauf und Zusammenhangsprobleme in Graphen- Optimale Bäume und Branchings- Netzwerk-Flussprobleme- Matching- und Zuweisungsprobleme- Planare Graphen- Theorie, generische Ansätze, Verbesessrungen durch Beschleunigungstechniken und  Datenstrukturen",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende erfolgreich diese Veranstaltung besucht haben,- kennen sie grundlegende Algorithmen - kennen sie Verfahren zur Effizienzsteigerung - können sie Graphenalgorithmen analysieren- beherrschen sie Methoden, um spezielle Eigenschaften (Planarität, Dünnbesetztheit) auszunutzen- können sie die Effizienz von Verfahren in der Praxis beurteilen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: ",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: ",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Algorithmische Modellierung / Grundlagen des Operations Research",
        "Modul Nr.": "20-00-0113",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "Kurs Nr.Kursname Arbeitsaufwand(CP)Lehrform SWS20-00-0113-ivAlgorithmische Modellierung / Grundlagen des Operations Research6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Algorithmische Optimierungssprachen wie OPL und Eclipse- Modellierung innerhalb eines restriktiven Modellierungsrahmens (zum Beispiel lineare Optimierung oder ganzzahlige lineare Optimierung)- Modellierung als kombinatorische Optimierungsprobleme (z.B. Netzwerkflussprobleme, Färbungsprobleme, Wegeprobleme)- Komplexe Fallbeispiele aus der Praxis, z.B. Anwendungen in Logistik, deterministisches und stochastiches Scheduling ",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende erfolgreich diese Veranstaltung besucht haben,- kennen sie Modellierungsstrategien für Entscheidungs-, Konstruktions- und Optimierungsprobleme - können sie zwei algorithmische Modellierungssprachen anwenden- können sie komplexe Probleme adäquat modellieren",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: -Algorithmen und Datenstrukturen' oder vergleichbar (-Modellierung, Spezifikation und Semantik' wäre ebenfalls wünschenswert).",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: -Algorithmen und Datenstrukturen' oder vergleichbar (-Modellierung, Spezifikation und Semantik' wäre ebenfalls wünschenswert).",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software Engineering - Design and Construction",
        "Modul Nr.": "20-00-0341",
        "Kreditpunkte": "8 CP",
        "Arbeitsaufwand": "240 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0341-ivSoftware Engineering - Design and Construction8 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Der primäre Inhalt der Veranstaltung ist der Entwurf modularer Software, um wartbare, wiederverwendbare und erweiterbare Sofwaresysteme zu erhalten. Integraler Bestandteil der Veranstaltung ist die Diskussion der Beziehung zwischen den Eigenschaften fortschrittlicher Programmiersprachen und dadurch möglicher Entwurfsalternativen. Weiterhin wird die Auswirkung der Programmiersprache auf den Entwurf eines Softwaresystems als Ganzes besprochen. Die Vorlesung behandelt insbesondere:- Prinzipien des Klassenentwurfs unter Verwendung fortgeschrittener Entwurfsmuster und fortschrittlicher Programmiersprachen;- Prinzipien des Entwurfs auf Paketebene;- Architekturelle Stile;- Dokumentation des Entwurfs;- Refactorings existierender Software;- Metriken zur Evaluierung von Entwürfen.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Abschluss der Lehrveranstaltung sind Studierende in der Lage die folgenden Aufgaben durchzuführen:- Sie können den Entwurf existierender Systeme in Hinblick auf ihre Modularität analysieren und ggf. Refactorings vorschlagen, die der Verbesserung bzw. Wiederherstellung selbiger dienen.- Sie verstehen die mittel- und langfristigen Auswirkung nicht-modularer Softwaresysteme.- Sie kennen fortgeschrittene Entwurfsmuster und können diese in existierendem Code identifizieren und auch einsetzen, um neue Probleme zu lösen.- Sie kennen etablierte architekturelle Stile und können diese einsetzen.- Sie verstehen, dass die Lösung eines Entwurfsproblems von der gewählten Programmiersprache abhängt und sind in der Lage entsprechende Entscheidungen kritisch zu hinterfragen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Successful completion of the lecture Software Engineering",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Successful completion of the lecture Software Engineering",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt,die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Distributed Software SystemsB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Bass, L.; Clements, P.; Kazman, R. ; Software Architecture in Practice, Addison-Wesley- Booch, G. Object-Oriented Analysis and Design with Applications. Addison-Wesley- Budd, T. Introduction to Object-Oriented Programming. 2nd. ed., Addison-Wesley- Buschmann, F. et al. Pattern-Oriented Software Architecture: A System of Patterns. John Wiley & Sons. - Czarnecki, K. and Eisenecker, U. Generative Programming. Addison-Wesley. - Garland, D. and Shaw, M. Software Architecture: Perspectives on an Emerging Discipline. Prentice Hall. - Gamma, E. et al. Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley. - Martin, Robert. Agile Software Development. Principles, Patterns, and Practices. Pearson US Imports & PHIPEs. - Riel, A. Object-Oriented Design Heuristics. Addison-Wesley. ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Statische und dynamische Programmanalyse",
        "Modul Nr.": "20-00-0580",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0580-iv Statische und dynamische Programmanalyse0 Integrierte Veranstaltung4",
            "Lerninhalt": "- operationelle Semantiken für sequentielle und parallele Programme- Übersicht über Techniken zur statischen und dynamischen Programmanalyse- Abstrakte Interpretation- Datenflussanalysen- Slicing-Techniken- typbasierte Programmanalysen- Konzepte der Laufzeitüberwachung- Implementierungstechniken zur Laufzeitüberwachung- Sprachbasierte Sicherheit- Korrektheit und Präzision von Programmanalysen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende ein Spektrum von unterschiedlichen Programmanalysen. Sie verstehen die Funktionsweise der einzelnen Analysetechniken und verstehen die Unterschiede zwischen diesen. Sie können beurteilen, welche Analysetechnik für welche Problemstellung in Frage kommt und haben die Fähigkeit, die ausgewählte Analysetechnik einzusetzen. Sie können Programmanalysen bezüglich ihrer Präzision und Korrektheit beurteilen. Sie können Programmanalysen auch implementieren und Varianten von bekannten Programmanalysen definieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0580-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0580-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "IT-Lösungen durch praxiserprobtes Software Engineering",
        "Modul Nr.": "20-00-0635",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0635-iv IT-Lösungen durch praxiserprobtes Software Engineering0 Integrierte Veranstaltung2",
            "Lerninhalt": "- Modellierung mit UML bzw. DSL und Code-Generierung",
            "Qualifikationsziele_Lernergebnisse": "Die Teilnehmer lernen theoretisch und praktisch - anhand von Fallbeispielen aus der Praxis -wie Software-Engineering zur Erarbeitung von IT-Lösungen eingesetzt wird. Dabei werden moderne, praxiserprobte Konzepte zur Erstellung von IT-Lösungen vorgestellt, zum Beispiel Modellierung (Geschäftsprozesse, UML, DSL), Generierung und Testautomatisierung. Die Teilnehmer können die Wirtschaftlichkeit von IT-Projekten bewerten, praxiserprobte Projektmanagement-Pattern einsetzen und lernen die umgebenden Rahmenbedingungen einer IT-Organisation swoie die Rolle des CIO in einem Unternehmen als Berater der Fachbereiche kennen. Sie beherrschen das Anforderungsmanagement und den Lösungsentwurf, insbesondere für mobile Anwendungen und SAP-Lösungen. Die Veranstaltung wird durch eingeladene Vorträge von Experten aus der Praxis ergänzt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte Algorithmen und DatenstrukturenEinführung in Software Engineering",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0635-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte Algorithmen und DatenstrukturenEinführung in Software Engineering",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0635-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Automatisches Beweisen",
        "Modul Nr.": "20-00-0660",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0660-ivAutomatisches Beweisen 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Theoretische Grundlagen der im automatischen Beweisen verwendeten Kalküle für Logik erster Stufe- Korrektheits- und Vollständigkeitsbeweise- Algorithmen und Datenstrukturen, die in automatischen Beweisern für Logik erster Stufe eingesetzt werden- Vergleich verschiedener Ansätze im automatischen Beweisen- Grundlagen moderner SAT- und SMT-Lösungswerkzeuge",
            "Qualifikationsziele_Lernergebnisse": "Die erfolgreiche Teilnahme an der Lehrveranstaltung versetzt die Studierenden in die Lage, die wichtigsten modernen automatische Beweisverfahren im Detail zu verstehen, ihre Vor-und Nachteile zu beurteilen und in der Praxis anzuwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Stark empfohlen wird die Teilnahme an der Vorlesung 'Aussagen- und Prädikatenlogik' oder vergleichbarer Module. Ansonsten genügt eine gewisse mathematische Reife.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Stark empfohlen wird die Teilnahme an der Vorlesung 'Aussagen- und Prädikatenlogik' oder vergleichbarer Module. Ansonsten genügt eine gewisse mathematische Reife.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Robinson, Voronkov: Handbook of Automated Reasoning, 2 vols., North-Holland",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Optimierungsalgorithmen",
        "Modul Nr.": "20-00-0667",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0667-ivOptimierungsalgorithmen 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Algorithmische Standardansätze für komplexe diskrete Optimierungsprobleme, bspw. Evolutionsstrategien, dynamische Programmierung, Branch-and-Bound u.ä.",
            "Qualifikationsziele_Lernergebnisse": "In der Veranstaltung erwerben Studierende systematische Kenntnis generischer algorithmischer Ansätze in der diskreten Optimierung sowie die Fähigkeit, komplexe diskrete Optimierungsprobleme Ziel führend algorithmisch anzugehen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte, Algorithmen und Datenstrukturen oder vergleichbar.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Funktionale und objektorientierte Programmierkonzepte, Algorithmen und Datenstrukturen oder vergleichbar.",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittener Compilerbau",
        "Modul Nr.": "20-00-0701",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0701-vlFortgeschrittener Compilerbau 5 integrierte Lehrveranstaltung3",
            "Lerninhalt": "- Compilierung und Laufzeitumgebung für objektorientierte Programmiersprachen- Kontrollflussgraphen als Zwischendarstellung- Statische Datenflußanalyse- Static Single Assignment Form- Eliminierung totaler und partieller Redundanz- Skalare Optimierung- Registerallokation- Ablaufplanung- Schleifenoptimerung- Aufbau realer Compiler (z.B. Phasen, Zwischendarstellung, Compilefluß)",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch Techniken für die Übersetzung und Ausführung von objektorientierten Programmen auf Maschinenebene. Sie können die statische Datenflussanalyse auf Kontrollflussgraphen anwenden und sind geübt im praktischen Umgang mit deren SSA-Darstellung. Sie beherrschen Optimierungsverfahren für eine Reihe von Aufgaben sowie fundamentale Verfahren für die Registerallokation. Sie kennen die interne Struktur von realen Compilern für den Produktivbetrieb.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Besuch der Veranstaltung 'Einführung in den Compilerbau'",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Besuch der Veranstaltung 'Einführung in den Compilerbau'",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Distributed Software SystemsB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete Literatur könnten sein:Cooper/Torczon: Engineering a CompilerMuchnick: Advanced Compiler Design and ImplementationAho/Lam/Sethi/Ullman: Compilers - Principles, Techniques, and Tools ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Formale Spezifikation und Verifikation von Software",
        "Modul Nr.": "20-00-0794",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0794-iv Formale Spezifikation und Verifikation von Software0 Integrierte Veranstaltung4",
            "Lerninhalt": "In dieser Vorlesung behandeln wir fortgeschrittene Themen aus dem Gebiet der formalen Spezifikation und deduktiven Verifikation objekt-orientierter Software.Der Kurs deckt insbesondere folgende Themen ab:* Spezifikation von Interfaces und Klassen mit Hilfe von Queries, Ghost- und Modellfeldern;* Das \"Framing\" Problem: Statische und dynamische Frames* Programmlogik und -kalkül als Grundlage der deduktiven Verifikation* Spezifikation und Verifikation rekursiver Methoden und Schleifen* Modulare Verifikation: Sichtbarkeiten, Beweis und Anwendung von Framing-Eigenschaften* Automatische Erzeugung von Schleifeninvarianten und MethodenverträgenDer Kurs behandelt vorwiegend sequentielle Programme. Es werden aber auch aktuelle Ansätze zur Spezifikation und Verifikation nebenläufiger bzw. verteilter Software diskutiert.Für fast alle Themen wird deren praktische Anwendung mit Hilfe geeigneter Tools demonstriert und in den Übungen vertieft.",
            "Qualifikationsziele_Lernergebnisse": "* Erwerbung der Fähigkeit zur Spezifikation komplexer objekt-orientierter Software* Studierende sollen in der Lage sein einen für das vorliegende Problem passenden Spezifikationsansatz auszuwählen und anzuwenden* Studierende sollen in der Lage sein rekursive Methoden und Schleifen zu spezifizieren* Studierende sollen in der Lage sein mit Hilfe von deduktiver Verifikation ihre Programme als korrekt zu beweisen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagenwissen über Logik erster OrdnungInhalt der VorlesungenFormale Grundlagen der Informatik 2 und 3(oder vergleichbarer)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0794-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagenwissen über Logik erster OrdnungInhalt der VorlesungenFormale Grundlagen der Informatik 2 und 3(oder vergleichbarer)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0794-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sicheres Service-Computing",
        "Modul Nr.": "20-00-0926",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0926-iv Sicheres Service-Computing 0 Integrierte Veranstaltung4",
            "Lerninhalt": "- Konzepte und Grundlagen des Service-Computings- Modellierungs- und Ausführungssprachen für Geschäftsprozesse- Formale Analyse und Durchsetzung von Sicherheitsanforderungen in Geschäftsprozessen- Service-Spezifikationen und Service-Matching-Methodiken inServicemärkten- Laufzeitüberwachung und -durchsetzung for Servicemärkte- Service-Integration in Web-Anwendungen- Sichere Service-Integration durch Testing und durch Durchsetzung zur Laufzeit",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Kurs kennen Studenten die zentralen Konzepte des Service Computing sowie Sicherheitskonzepte im Bereich des Service Computing. Sie verstehen, wie Sicherheitsanforderungen an Dienste in Geschäftsprozessen, Servicemärkten und Web-Anwendungen modelliert und analysiert werden können. Darüber hinaus sind sie fähig, Testfälle zu formulieren, mit denen mögliche Angriffe die Benutzung von Diensten erkannt werden können. Sie sind weiterhin fähig, Service-Integrationen in verschiedene Anwendungsdomänen mittels Laufzeitüberwachung und -durchsetzung abzusichern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0926-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0926-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Applied Static Analysis",
        "Modul Nr.": "20-00-0949",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0949-iv Applied Static Analysis 0 Integrierte Veranstaltung2",
            "Lerninhalt": "Foundations of (scalable) static analyses for large(r) software systems; in particular- Basic Terminology:- AST, SSA,- Object-/ Field-/ Context-/ Flow-/ Path Sensitivity- (I)CFG- Inter-procedural analyses- \u2026- stack based intermediate representations (JVM Bytecode)- register based intermediate representations (LLVM IR)- program transformations and native code analyses using LLVMConcrete static analyses and algorithms:- Call graph algorithms for libraries and applications- Inter procedural data- and control-flow analyses- IDE/IFDS- Points-to analyses- Escape analysesApplications- General software quality analyses- Capability Analysis- Security Vulnerabilities Detection- Dead Paths/Computations- Next generation software development tools",
            "Qualifikationsziele_Lernergebnisse": "Students can effectively use the basic static analyses related terminology.Students are familiar with modern static analyses working on intermediate representations. They are able to apply and adapt available static analysis algorithms to new scenarios.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: The lecture is targeted towards Master students with a very high degree of interest in reading, analyzing and also writing code. Basic knowledge in compiler construction is helpful. Deep knowledge of object-oriented programming concepts and in particular of object-oriented programming in Java is required. Interest in learning new programming languages (in particular Scala) is required.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0949-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: The lecture is targeted towards Master students with a very high degree of interest in reading, analyzing and also writing code. Basic knowledge in compiler construction is helpful. Deep knowledge of object-oriented programming concepts and in particular of object-oriented programming in Java is required. Interest in learning new programming languages (in particular Scala) is required.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0949-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Concepts and Technologies for Distributed Systems and Big Data Processing",
        "Modul Nr.": "20-00-0951",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0951-iv Concepts and Technologies for Distributed Systems and Big Data Processing0 Integrierte Veranstaltung2",
            "Lerninhalt": "The course provides an overview of recent advances in distributed systems for Big Data processing. The course starts presenting computational models for high throughput batch processing like MapReduce. Next, we will introduce software engineering techniques fordistributed systems such as REST and component-based architectures. We will then cover low latency real time stream processing and complex event processing. Finally, we will present advanced topics in distributed data-intensive systems, such as geodistribution andsecurity.The course focuses both on the fundamental concepts as well as on the concrete technologies and applications of the aforementioned techniques to real-world case studies.",
            "Qualifikationsziele_Lernergebnisse": "- The students are familiar with basic concepts and technologies on distributed systems and big data and are able to implement basic cloud based/distributed applications.- The students are familiar with the fundamental computational models behind recent advances in distributed systems, such as models for batch processing of massive data amounts, stream processing and complex event processing.- The students are familiar with selected advanced topics on big data, including security and geolocalization.- The students know about real-world case studies that apply the concepts and the technologies presented during the course.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:This course is targeted at master students.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0951-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:This course is targeted at master students.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0951-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "M. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Multithreading in C++",
        "Modul Nr.": "20-00-0953",
        "Kreditpunkte": "10 CP",
        "Arbeitsaufwand": "300 h",
        "Selbststudium": "210 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0953-iv Multithreading in C++ 0 Integrierte Veranstaltung6",
            "Lerninhalt": "C++ bietet eine der fortschrittlichsten Threadschnittstellen, die heute verfügbar sind. Am Beispiel C++ führt dieser Kurs in die parallele Programmierung für gemeinsamen Speicher mit Threads ein.- Architekturen mit gemeinsamem Speicher- Management von Threads- Zugriff auf gemeinsame Daten- Synchronisierung nebenläufiger Operationen- Entwurf lockbasierter nebenläufiger Datenstrukturen- Entwurf von nebenläufigem Code- Testen und Fehlersuche",
            "Qualifikationsziele_Lernergebnisse": "Kompetenz in der Entwicklung paralleler Programme- Systematisch korrekte und effiziente parallele Programme entwickeln- Parallele Datenstrukturen entwerfen und umsetzen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Kenntnisse in C/C++",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0953-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Kenntnisse in C/C++",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0953-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Einführung in Enterprise-Architektur-Management",
        "Modul Nr.": "20-00-0967",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0967-vl Einführung in Enterprise-Architektur-Management0 Vorlesung 2",
            "Lerninhalt": "Die Vorlesung gibt eine Einführung in die Kernkonzepte und Vorgehensmodelle der Unternehmensarchitektur. Anhand eines in der Praxis weitverbreiteten Frameworks (TOGAF) werden diese vorgestellt. Es werden theoretische Grundlagen zu Architekturmodellen und Metamodellen (ISO/IEC/IEEE 42010) präsentiert. Der Bedarf und Zweck von Unternehmensarchitekturen in komplexen und großen Organisationen wird mit praxisnahen Beispielen illustriert. Zudem werden die wesentlichen Managementprozesse der Unternehmensarchitektur vorgestellt und deren Zusammenspiel mit anderen IT-Managementprozessen, wie Demand Management und Projektportfolio Management, diskutiert. Abschließend wird eine Einführung in die Standardisierung der Lösungsentwicklung für Unternehmensarchitekturen gegeben und in diesem Kontext der Einsatz von Referenzarchitekturen vorgestellt.Das Ziel der Vorlesung ist es, einerseits eine theoretische Einführung in die Grundlagen des Enterprise Architektur Managements zu geben und andererseits praktische Herausforderungen der Unternehmensarchitekturen mit Beispielen aus der Praxis zu illustrieren.",
            "Qualifikationsziele_Lernergebnisse": "Einführung in Unternehmensarchitekturen und deren Managementprozesse.Die Rolle und Zweck von Unternehmensarchitekturen für das Business IT Alignment nachvollziehen. Kernkonzepte der Unternehmensarchitektur und das Management von Unternehmensarchitekturen verstehen. Einblicke in Perspektiven, Aspekte und Beziehungen in Enterprise Architecture Frameworks geben (TOGAF). Einblicke in Architekturbeschreibungsmodelle und Metamodelle (ISO/IEC/IEEE 42010).Einführung in die Standardisierung von Lösungen und Referenzarchitekturen.Modellierung von Unternehmensarchitekturen mit ArchiMate.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundwissen in Informatik und Software Engineering",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0967-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundwissen in Informatik und Software Engineering",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0967-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittenes Multithreading in C++",
        "Modul Nr.": "20-00-0977",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0977-iv Fortgeschrittenes Multithreading in C++0 Integrierte Veranstaltung4",
            "Lerninhalt": "C++ bietet eine der modernsten Threadschnittstellen, die heute verfügbar sind. Am Beispiel C++ führt dieser Kurs in die fortgeschrittene parallele Programmierung für gemeinsamen Speicher mit Threads ein.Aufbauend auf den Inhalten der Vorlesung Multithreading in C++ werden die folgenden Themen behandelt:- C++ Speichermodell und atomare Operationen- Entwurf lockfreier nebenläufiger Datenstrukturen- Forstgeschrittenes Thread-Management (z.B. Thread Pools)",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, haben Sie erweiterte Kompetenz in der Entwicklung paralleler Programme und sind in der Lage- Systematisch korrekte und effiziente parallele Programme zu entwickeln- Parallele Datenstrukturen zu entwerfen und umzusetzen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Kenntnisse in C/C++- Basiskenntnisse der Programmierung von Threads in C++ (lockbasierte Synchronisation und lockbasierte nebenläufige Datenstrukturen)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0977-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Kenntnisse in C/C++- Basiskenntnisse der Programmierung von Threads in C++ (lockbasierte Synchronisation und lockbasierte nebenläufige Datenstrukturen)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0977-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Advanced C++modern programming",
        "Modul Nr.": "20-00-1068",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1068-iv Advanced C++ modern programming0 Integrierte Veranstaltung2",
            "Lerninhalt": "Die Vorlesung wird die letzten Änderungen und Erweiterungen der Sprache C++ behandeln und insbesondere auf die Standards:ISO/IEC 14882:2011, 14882:2014, and 14882:2017 eingehen.Die Liste der Themen:1. Einführung in modernes C++2. Verbessertes Typsystem3. Uniforme Initialisierung4. Moderner Ansatz in Hinblick auf den Entwurf und Implementierung von Klassen5. Verbesserungen für die Entwicklung von Bibliotheken6. Moderne \"generische Programmierung\"7. Einführung in die Metaprogrammierung8. Vereinfachung von Code durch den Einsatz von Standardkomponenten9. STL: Containers, Algorithmen und Iteratoren10. Neueste Entwicklungen: C++1711. Die Zukunft von C++: C++20",
            "Qualifikationsziele_Lernergebnisse": "+ Die Studierenden werden in der Lage sein die Hauptunterschiede zwischen den modernen C++ Standards zu benennen+ Die Studierenden haben ein vertieftes Verständnis moderner \"generischer Programmierung\"+ Die Studierenden sind in der Lage die neuen Hauptkomponenten der C++ Standardbibliothek zu verwenden+ Die Studierenden können Abwägungen zwischen Flexibilität und Performance in modernen C++ nachvollziehen+ Die Studierenden haben ein Überblick über die Wahrscheinlichsten Entwicklungsschritte",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: + Grundlagenwissen von C und C+++ Vertrautheit mit den Grundlagen object-orientierter und generischer Programmierung+ Grundlagenwissen im Bereich funktionale Programmierung",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1068-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: + Grundlagenwissen von C und C+++ Vertrautheit mit den Grundlagen object-orientierter und generischer Programmierung+ Grundlagenwissen im Bereich funktionale Programmierung",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1068-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Automatische Softwareverifikation",
        "Modul Nr.": "20-00-1069",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1069-iv Automatische Softwareverifikation0 Integrierte Veranstaltung4",
            "Lerninhalt": "Die Veranstaltung befasst sich mit dem Techniken zur automatischen Softwareverifikation und behandelt dabei folgende Themebereiche:- operationelle Semantik von sequentiellen Programmen- konfigurierbare Programmanalyse inklusive Konfiguration für Datenflussanalysen und Model Checking- counter-example guided abstraction refinement (CEGAR)- Bounded Model Checking- k-Induktion- kooperative Verifikation, insbesondere Conditional Model Checking- inkrementelle Verifikation- Nachprüfung von Verifikationsergebnissen (a la Proof-Carrying Code, Witness Validation)- Generierung von Testeingaben mittels Verifizierern",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden eine Vielzahl von Verfahren zur automatischen Verfikation benennen. Sie können die den Verfahren zugrunde liegenden Formalismen wiedergeben, die Funktionsweise der Verfahren beschreiben und die Verfahren klassifizieren. Außerdem können die Studierenden die Verfahren auf Beispielen anwenden und neue konfigurierbare Programmanalysen entwickeln.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik, insbesondere Kenntnisse aus der Vorlesung Aussagen und Prädikatenlogik oder Vergleichbares.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1069-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik, insbesondere Kenntnisse aus der Vorlesung Aussagen und Prädikatenlogik oder Vergleichbares.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1069-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Typsysteme",
        "Modul Nr.": "20-00-1076",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1076-iv Typsysteme 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Typsysteme bieten einen effizienten Weg, um die korrekte Funktionsweise von Programmen zu garantieren, bevor diese überhaupt gestartet werden. Es gibt sie in den verschiedensten Ausprägungen: als Standard-Konstrukt und Teil einer Programmiersprache oder speziell für bestimmte Anwendungen entworfen.Wir werden uns u.A. mit den folgenden Themen beschäftigen:- Einfach getypter lambda-Kalkül- Statische vs. dynamische Analyse von Typen- Operationale Semantik- Soundness von Typsystemen- Typ Inferenz- Curry-Howard-Korrespondenz- Polymorphism- Subtyping- Safety und Liveness Garantien durch Typsysteme- Abhängige Typen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende ein Spektrum von unterschiedlichen Typsystemen und ihre Einsatzgebiete. Sie verstehen die Grundlagen und Funktionsweise statische Programmanalyse und die Unterschiede verschiedener Typsysteme. Sie können können verschieden artige Typsysteme anwenden. Darüber hinaus können sie beurteilen und formal analysieren, welche Eigenschaften ein Typsystem garantieren kann. Sie kennen die Grenzen statischer Analysen und können Varianten bekannter Typsysteme für neue Anwendungen definieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1076-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1076-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B,Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Verifikation paralleler Programme",
        "Modul Nr.": "20-00-1079",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1079-iv Verifikation paralleler Programme 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Die Veranstaltung befasst sich mit überwiegend automatischen Techniken zur Verifikation von parallelen Programmen, insbesondere multi-threaded Programmen mit gemeinsamen Speicher. Die Veranstaltung behandelt dabei folgende Themenbereiche:- Semantik von parallelen Programmen (z.B. Interleaving-Semantik, Semantik von ausgewählten schwachen Speichermodellen)- Statische und dynamische Techniken zur Erkennung von Data Races- Techniken der Deadlockanalyse- Analyse von Programmeigenschaften (z.B. mittels Sequentialisierung, Bounded Model Checking, etc.)- Partial Order Reduction- Thread-modulare Verifikation- Verifikation unter schwachen Speichermodellen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden Verfahren zur Verifikation von parallelen Programmen, insbesondere Verfahren zur Analyse von Data Races, Deadlocks und Sicherheitseigenschaften (Safety) benennen. Sie können die den Verfahren zugrunde liegenden Formalismen wiedergeben, die Funktionsweise der Verfahren beschreiben und die Verfahren auf Beispielen anwenden. Außerdem können die Studierenden die Stärken und Schwächen der Verfahren beurteilen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik. Vorteilhaft, aber nicht erforderlich ist der Besuch der Veranstaltung Automatische Software Verifikation.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1079-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik. Vorteilhaft, aber nicht erforderlich ist der Besuch der Veranstaltung Automatische Software Verifikation.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1079-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Analyse Hybrider Systeme",
        "Modul Nr.": "20-00-1087",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1087-vl Analyse Hybrider Systeme 0 Vorlesung 2",
            "Lerninhalt": "- Hybride Automaten- Erreichbarkeitsanalyse linear hybrider Automaten mit Flowpipes- Differentielle dynamische Logik- Kalkül für eine differentielle dynamische Logik- Modellierungsprinzipien hybrider Automaten und differentieller dynamischer Logik",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden erwerben folgende Fähigkeiten:- Modellierung Cyber-Physikalischer Systeme als hybride Automaten und hybride Programme- Spezifikation von Erreichbarkeitseigenschaften und Invarianten solcher Modelle- Verständnis für den Unterschied von explorativer und deduktiver Verifikation- Verständnis grundlegender Verifikationsalgorithmen hybrider Systeme- Kenntnis typischer Modellierungsmuster und -fehler",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Grundkenntnisse in Logik und Differentialgleichung entsprechend der Bachelorvorlesungen 'Aussagenlogik und Prädikatenlogik', 'Formale Methoden im Softwareentwurf' und 'Mathematik 3 für Informatiker'",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1087-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Grundkenntnisse in Logik und Differentialgleichung entsprechend der Bachelorvorlesungen 'Aussagenlogik und Prädikatenlogik', 'Formale Methoden im Softwareentwurf' und 'Mathematik 3 für Informatiker'",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1087-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Petrinetze und deren Analyse",
        "Modul Nr.": "20-00-1092",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1092-iv Petrinetze und deren Analyse 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Petrinetze sind ein weit verbreitetes Werkzeug zur Modellierung und Verifikation sequentieller und verteilter Systeme. Als graphisches Modell überzeugen sie durch Anschaulichkeit und Verständlichkeit und kommen daher auch in vielen Bereichen außerhalb der Informatik zum Einsatz. Der Fokus dieser Lehrveranstaltung liegt auf dem Einsatz von Petrinetzen als Tool für die Verifikation. Nach einer Einführung in Petrinetze als Modellierungswerkzeug, werden wir uns mit verschiedenen Analysemethoden auf Petrinetzen beschäftigen. Dazu betrachten wir verschiedene für die Verifikation wichtige Fragestellungen, wie Terminierung und Lebendigkeit, und diskutieren Techniken mit denen diese Eigenschaften auf Petrinetz-Modellen analysiert werden können.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende ein weiteres Modellierungs- und Analysewerkzeug für sequentielle und verteilte Systeme. Sie wissen, wie sie das Verhalten von Systemen anschaulich als Petrinetz darstellen können und kennen verschiedene Analysemethoden für solche Netze. Damit können sie die Qualität von z.B. Softwareprodukten verbessern und Garantien für deren korrektes Verhalten liefern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere formalen Sprachen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1092-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere formalen Sprachen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1092-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Model Checking",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1115-vlModel Checking 0 Vorlesung 2",
            "Lerninhalt": "* Temporallogiken:- Lineare temporal Logik (LTL), Computation Tree Logic (CTL) und CTL*: Syntax, Semantik, Komplexität* Modelprüfungsverfahren für LTL, CTL, CTL*, insbesondere Büchiautomaten* Partial Order Reduction* Timed Automata",
            "Qualifikationsziele_Lernergebnisse": "Im Rahmen des Kurses sollen die Studierenden folgende Fähigkeiten erwerben:* Verständnis der theoretischen Grundlagen der Temporallogiken LTL, CTL und CTL** Fähigkeit zur Auswahl der geeigneten Logik zur Spezifikation und Modellprüfung in Abhängigkeit von dem zu modellierenden System und der zu prüfenden Eigenschaft* Verfahren und Techniken zur Modellprüfung (Model Checking) z.B. Modellprüfung mit Büchiautomaten, Partial Order Reduction u.ä.* Wissen über die Charakteristika und Grenzen der Modellprüfung* Kenntnisse in der Modellprüfung von Timed Automate* Fähigkeit zur Anwendung von Tools zur Modellprüfung",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Kenntnisse in* Aussagenlogik* Deduktionssystemen* Automatentheorie",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1115-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Kenntnisse in* Aussagenlogik* Deduktionssystemen* Automatentheorie",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1115-vl] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Konzepte der Programmiersprachen",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1117-ivKonzepte der Programmiersprachen0 Integrierte Veranstaltung4",
            "Lerninhalt": "Kurze Einführung und Geschichte der Programmiersprachen, Kriterien zur Messung von Programmiersprachen, Grundkonzepte der PL wie Syntax, Semantik, Variablen, Namen, Bindungen, Umfang, Subprogram, Expressionen, Arrays, Pointers, abstrakte Typen, funktionale Programme",
            "Qualifikationsziele_Lernergebnisse": "Der Student wird am Ende des Kurses in der Lage sein, die zugrundeliegenden Mechanismen der wichtigsten Konzepte hinter Programmiersprachen zu verstehen. Der Student wird auch Erfahrung erhalten, eine einfache Programmiersprache mit einer beliebten Sprache Workbench namens MPS als Gruppenprojekt zu bauen.",
            "Voraussetzung_fuer_die_Teilnahme": "Keine",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1117-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Keine",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1117-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software-Engineering - Wartung und Qualitätssicherung",
        "Modul Nr.": "18-su-2010",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "18-su-2010-vlSoftware-Engineering - Wartung und QualitätssicherungVorlesung 318-su-2010-ueSoftware-Engineering - Wartung und QualitätssicherungÜbung 1",
            "Lerninhalt": "Die Lehrveranstaltung vertieft Teilthemen der Softwaretechnik, welche sich mit der Pflege und Weiterentwicklung und Qualitätssicherung von Software beschäftigen. Dabei werden diejenigen Hauptthemen des IEEE \"Guide to the Software Engineering Body of Knowledge\" vertieft, die in einführenden Softwaretechnik-Lehrveranstaltungen nur kurz angesprochen werden. Das Schwergewicht wird dabei auf folgende Punkte gelegt: Softwarewartung und Reengineering, Konfigurationsmanagement, statische Programmanalysen und Metrikensowie vor allem dynamische Programmanalysen und Laufzeittests. In den Übungen wird als durchgängiges Beispiel ein geeignetes \"Open Source\"-Projekt ausgewählt. Die Übungsteilnehmer untersuchen die Software des gewählten Projektes in einzelnen Teams, denen verschiedene Teilsysteme des betrachteten Gesamtsystems zugeordnet werden.",
            "Qualifikationsziele_Lernergebnisse": "Die Lehrveranstaltung vermittelt an praktischen Beispielen und einem durchgängigen Fallbeispiel grundlegende Software-Wartungs- und Qualitätssicherungs-Techniken, also eine ingenieurmäßige Vorgehensweise zur zielgerichteten Wartung und Evolution von Softwaresystemen. Nach der Lehrveranstaltung sollte ein Studierender in der Lage sein, die im Rahmen der Softwarewartung und -pflege eines größeren Systems anfallenden Tätigkeiten durchzuführen. Besonderes Augenmerk wird dabei auf Techniken zur Verwaltung von Softwareversionen und -konfigurationen sowie auf das systematische Testen von Software gelegt. In der Lehrveranstaltung wird zudem großer Wert auf die Einübung praktischer Fertigkeiten in der Auswahl und im Einsatz von Softwareentwicklungs- Wartungs- und Testwerkzeugen verschiedenster Arten sowie auf die Arbeit im Team unter Einhaltung von vorher festgelegten Qualitätskriterien gelegt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Softwaretechnik sowie gute Kenntnisse einer objektorientierten Programmiersprache.",
            "Pruefungsform": "Fachprüfung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Softwaretechnik sowie gute Kenntnisse einer objektorientierten Programmiersprache.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "MSc ETiT, MSc iST, MSc Wi-ETiT, Informatik",
            "Literatur": "www.es.tu-darmstadt.de/lehre/se_ii/",
            "Kommentar": "Schwerpunkt Visual & Interactive Computing "
        }
    },
    {
        "Modulname": "Graphische Datenverarbeitung I",
        "Modul Nr.": "20-00-0040",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0040-ivGraphische Datenverarbeitung I 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Einführung in die Grundlagen der Computergraphik, insb. Ein- u. Ausgabegeräte, Rendering Pipeline am Beispiel von OpenGL, räumliche Datenstrukturen, Beleuchtungsmodelle, Ray Tracing, aktuelle Entwicklungen in der Computergraphik",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch dieser Veranstaltung sind Studierende in der Lage alle Komponenten der Graphikpipeline zu verstehen und dadurch variable Bestandteile (Vertex-Shader, Fragment-Shader, etc.) anzupassen. Sie können Objekte im 3D-Raum anordnen, verändern und effektiv speichern, sowie die Kamera und die Perspektive entsprechend wählen und verschiedene Shading-Techniken und Beleuchtungsmodelle nutzen, um alle Schritte auf dem Weg zum dargestellten 2D-Bild anzupassen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - Programmierkenntnisse- Grundlegende Algorithmen und Datenstrukturen- Lineare Algebra- Analysis- Inhalte der Vorlesung Visual Computing",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - Programmierkenntnisse- Grundlegende Algorithmen und Datenstrukturen- Lineare Algebra- Analysis- Inhalte der Vorlesung Visual Computing",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Real-Time Rendering: Tomas Akenine-Möller, Eric Haines, Naty Hoffman A.K. Peters Ltd., 3rd edition, ISBN 987-1-56881-424-7- Fundamentals of Computer Graphics: Peter Shirley, Steve Marschner, third edition, ISBN 979-1-56881-469-8- Weitere aktuelle Literaturhinweise werden in der Veranstaltung gegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Graphische Datenverarbeitung II",
        "Modul Nr.": "20-00-0041",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0041-ivGraphische Datenverarbeitung II 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Grundlagen der verschiedenen Objekt- und Oberflächen-Repräsentationen in der graphischen Datenverarbeitung. Kurven und Oberflächen (Polynome, Splines, RBF) Interpolation und Approximation, Displaytechniken, Algorithmen: de Casteljau, de Boor, Oslo, etc. Volumen und implizite Oberflächen. Visualisierungstechniken, Iso-Surfaces, MLS, Oberflächen-Rendering, Marching-Cubes. Polygonnetze. Netz Kompression , Netz-Vereinfachung, Multiskalen Darstellung, Subdivision. Punktwolken: Renderingtechniken, Oberflächen-Rekonstruktion, Voronoi-Diagramme und Delaunay-Triangulierung.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch dieser Veranstaltung sind Studierende in der Lage mit diversen Objekt- und Oberflächen-Repräsentationen umzugehen, das heißt diese zu verwenden, anzupassen, anzuzeigen (rendern) und effektiv zu speichern. Dazu gehören mathematisch polynomiale Repräsentationen, Iso-oberflächen, volumen Darstellungen, implizite Oberflächen, Polygonnetze, Subdivision-Kontrollnetze und Punktwolken.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Algorithmen und Datenstrukturen, Grundlagen aus der Höheren Mathematik, Graphische Datenverarbeitung I, C / C++",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Algorithmen und Datenstrukturen, Grundlagen aus der Höheren Mathematik, Graphische Datenverarbeitung I, C / C++",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Real-Time Rendering: Tomas Akenine-Möller, Eric Haines, Naty Hoffman A.K. Peters Ltd., 3rd edition, ISBN 987-1-56881-424-7- Weitere aktuelle Literaturhinweise werden in der Veranstaltung gegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Geometrische Methoden des CAE/CAD",
        "Modul Nr.": "20-00-0140",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0140-ivGeometrische Methoden des CAE/CAD6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- parametrische Kurvenmodelle- parametrische Flächenmodelle- Topologie und CAD-Volumenmodelle- CAD-Operationen auf Flächen- Tessellierung- Approximation von Kurven und Flächen- Finite-Elemente-Methode und Strömungssimulation- verschiedene Anwendungen aus dem CAD-Bereich",
            "Qualifikationsziele_Lernergebnisse": "Studierende beherrschen nach erfolgreichem Besuch der Veranstaltung die Grundlagen der rechnergestützten Methoden der geometrischen Modellierung und Simulation. Sie verstehen verschiedene parametrische Kurven- und Oberflächenrepräsentationen und können diese auswerten und miteinander vergleichen. Weiter kennen Sie klassische Datenstrukturen und Algorithmen aus dem Computer Aided Design (CAD). Sie sind in der Lage, diese Techniken praktisch umzusetzen und damit 3D-Geometrie im Rechner darzustellen und zu visualisieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundwissen in Informatik",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundwissen in Informatik",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "VorlesungsfolienLee: Principles of CAD / CAM / CAE Systems, Addison-Wesley.Piegl, Tiller: The NURBS Book, Springer Verlag.Farin: Kurven und Flächen im Computer Aided Geometric Design, viewegShah, Mäntylä: Parametric and Feature-based CAD/CAM, Wiley & Sons",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Bildverarbeitung",
        "Modul Nr.": "20-00-0155",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0155-ivBildverarbeitung 3 integrierte Lehrveranstaltung2",
            "Lerninhalt": "Überblick über die Grundlagen der Bildverarbeitung:- Bildeigenschaften- Bildtransformationen- einfache und komplexere Filterung- Bildkompression,- Segmentierung- Klassifikation",
            "Qualifikationsziele_Lernergebnisse": "Noch erfolgreichem Besuch der Veranstaltung haben die Studierenden einen Überblick über die Funktionsweise und die Möglichkeiten der modernen Bildverarbeitung. Studierende sind dazu in der Lage, einfache bis mittlere Bildverarbeitungsaufgaben selbständig zu lösen.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Gonzalez, R.C., Woods, R.E., \"Digital Image Processing\", Addison- Wesley Publishing Company, 1992- Haberaecker, P., \"Praxis der Digitalen Bildverarbeitung und Mustererkennung\", Carl Hanser Verlag, 1995- Jaehne, B., \"Digitale Bildverarbeitung\", Springer Verlag, 1997",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Computer Vision I",
        "Modul Nr.": "20-00-0157",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0157-ivComputer Vision I 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Grundlagen der Bildformierung- Lineare und (einfache) nichtlineare Bildfilterung- Grundlagen der Mehransichten-Geometrie- Kamerakalibrierung & -posenschätzung- Grundlagen der 3D-Rekonstruktion- Grundlagen der Bewegungsschätzung aus Videos- Template- und Unterraum-Ansätze zur Objekterkennung- Objektklassifikation mit Bag of Words- Objektdetektion- Grundlagen der Bildsegmentierung",
            "Qualifikationsziele_Lernergebnisse": "Studierende beherrschen nach erfolgreichem Besuch der Veranstaltung die Grundlagen der Computer Vision. Sie verstehen grundlegende Techniken der Bild- und Videoanalyse, und können deren Annahmen und mathematische Formulierungen benennen, sowie die sich ergebenden Algorithmen beschreiben. Sie sind in der Lage diese Techniken praktisch so umzusetzen, dass sie grundlegende Bildanalyseaufgaben an Hand realistischer Bilddaten lösen können.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Besuch von Visual Computing",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Besuch von Visual Computing",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden regelmässig aktualisiert und beinhalten beispielsweise:- R. Szeliski, \"Computer Vision: Algorithms and Applications\", Springer 2011- D. Forsyth, J. Ponce, \"Computer Vision -- A Modern Approach\", Prentice Hall, 2002",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Virtuelle und Erweiterte Realität",
        "Modul Nr.": "20-00-0160",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0160-ivVirtuelle und Erweiterte Realität 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Im Rahmen dieser Lehrveranstaltung werden zuerst die Grundlagen, Begriffsbildungen und Referenzmodelle zur Einordnung der Thematik im Rahmen der Computer-Graphik/Computer-Vision aufgezeigt. Aufbauend darauf werden die besonderen Technologien, Algorithmen und Standards der Augmented Reality (AR) und der Virtual Reality (VR) behandelt. Dazu gehören:- Datenschnittstellen (Standards, Vorverarbeitung, Systeme, etc.)- Interaktionstechniken (z.B. Interaktion mit Hilfe von Rangekameras)- Darstellungsverfahren (z.B. Echtzeit-Rendering)- Web-basierte VR/AR- Computer-Vision-basiertes Tracking für Augmented-Reality- Augmented Reality mit Rangekamera-Technologien- Augmented Reality auf SmartphonesystemenSchließlich werden diese Techniken an Beispielen aktueller Forschungsarbeiten aus den Bereichen -AR/VR-Wartungsunterstützung' und -AR/VR-gestützte Präsentation von Kulturgütern' dokumentiert.",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die Anforderungen und Problematiken von Virtual/Augmented Reality und sie wissen, für welche Problemstellungen diese Technologien eingesetzt werden können. Sie kennen die Standards, mit deren Hilfe VR/AR-Anwendungen spezifiziert werden, insb. wissen die Studierenden, welche Computer-Vision-Technologien eingesetzt werden können, um in verschiedenen Umgebungen die Kamerapose stabil zu tracken.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Graphischen Datenverarbeitung (GDV)",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Graphischen Datenverarbeitung (GDV)",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Dörner, R., Broll, W., Grimm, P., Jung, B. Virtual und Augmented Reality (VR / AR)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Informationsvisualisierung und Visual Analytics",
        "Modul Nr.": "20-00-0294",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0294-ivInformationsvisualisierung und Visual Analytics6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Diese Vorlesung wird eine detaillierte Einführung in die Informationsvisualisierung geben, um sich dann intensiv den wissenschaftlichen Fragestellungen und praxisnahen Anwendungsszenarien von Visual Analytics zu widmen.-Überblick der Informationsvisualisierung und Visual Analytics (Definitionen, Modelle, Historie)-Datenpräsentierung und Datentransformation-Abbildung von Daten auf visuelle Strukturen- Visuelle Repräsentierungen und Interaktion fuer bivariate, multivariate Daten, Zeitreihen, Graphen und Geographische Daten- Grundlagen von Data Mining-Grundlagen von Visual Analytics: - Analytische Beweisführung - Data Mining- Evaluation von Visual Analytics SystemenAnwendungsgebiete: Medizin, Biologie, Finanzen und Wirtschaft, Meteorologie, Rettungsdienst,....",
            "Qualifikationsziele_Lernergebnisse": "Studierende können nach erfolgreichem Besuch der Veranstaltung-Informationsvisualisierungsmethoden für verschiedene Datentypen benutzen-interactive Visualisierungsysteme für Daten aus verschiedenen Anwendungsgebieten designen-Visualisierung und automatische Datenverarbeitung kombinieren um Big Data Probleme zu lösen-Wissen über Hauptcharakteristika menschlicher visuellen Wahrnehmung in Informationsvisualisierung und Visual Analytics anwenden-geeignete Evaluationsmethode für spezifische Situationen und Szenarien auswählen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Interesse an Methoden der Computergrafik und Visualisierung",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Interesse an Methoden der Computergrafik und Visualisierung",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Vorlesung bekanntgegeben. Beispiele für verwendete Literaturkönnten sein:C. Ware: Information Visualization: Perception for DesignEllis et al: Mastering the Information Age",
            "Kommentar": "Die Veranstaltung richtet sich an Informatiker, Wirtschaftsinformatiker, Mathematiker in Bachelor, Master und Diplomstudiengänge und weiteren interessierten Kreisen (z.B. Biologen, Psychologen)"
        }
    },
    {
        "Modulname": "Statistisches Maschinelles Lernen",
        "Modul Nr.": "20-00-0358",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0358-ivStatistisches Maschinelles Lernen 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Statistische Methodik für das Maschinelle Lernen- Auffrischung zu Statistik, Optimierung und Linearer Algebra- Bayes\u2019sche Entscheidungstheorie - Wahrscheinlichkeitsdichtenschätzung- Nichtparametrische Modelle- Mixtur Modelle und der EM-Algorithmus- Lineare Modele zur Klassifikation und Regression - Statistische Lerntheorie- Kernel Methoden zur Klassification und Regression",
            "Qualifikationsziele_Lernergebnisse": "Die Lehrveranstaltung ist eine systematische Einführung in die Grundlagen und Methodik des statistischen maschinellen Lernens. Nach erfolgreichen Abschluss der Lehrveranstaltung, verstehen Studierende die wichtigsten Methoden und Ansätze des Statischen Maschinellen Lernens. Sie können maschinelle Lernverfahren anwenden, um eine Vielzahl neuer Probleme zu lösen.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "1. C.M. Bishop, Pattern Recognition and Machine Learning (2006), Springer2. K.P. Murphy, Machine Learning: a Probabilistic Perspective (expected 2012), MIT Press3. D. Barber, Bayesian Reasoning and Machine Learning (2012), Cambridge University Press4. T. Hastie, R. Tibshirani, and J. Friedman (2003), The Elements of Statistical Learning, Springer Verlag5. D. MacKay, Information Theory, Inference, and Learning Algorithms (2003), Cambridge University Press6. R.O. Duda, P.E. Hart, and D.G. Stork, Pattern Classification (2nd ed. 2001), Willey-Interscience7. T.M. Mitchell, Machine Learning (1997), McGraw-Hill",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Serious Games",
        "Modul Nr.": "20-00-0366",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0366-ivSerious Games 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Einführung in die Thematik -Serious Games': wissenschaftlich-technische Grundlagen, Anwendungsgebiete und Trends. Die Einzelthemen umfassen unter anderem:- Einführung in Serious Games- Game Development, Game Design- Game Technology, Tools und Engines- Personalisierung und Adaption- Interactive Digital Storytelling- Authoring und Content Generation- Multiplayer Games- Game Interfaces und Sensor Technology- Effects, Affects und User Experience- Mobile Games- Serious Games Anwendungsbereiche und Best-Practice BeispieleDie Übungen enthalten Theorie- und Praxisanteile. Dabei wird die Verwendung einer Game Engine gelehrt.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Vorlesung können die Studierenden das Konzept von -Serious Games' erklären und in verschiedene Anwendungsbereiche (wie Bildung und Gesundheit) transferieren. Sie können das allgemeine Vorgehen bei der Entwicklung von Computerspielen beschreiben und können grundsätzliche Prinzipien des Game Designs, der Personalisierung / Adaption und des Interactive Digital Storytellings anwenden. Außerdem können sie weitere aktuelle Fragestellungen sowie deren Lösungen aus dem Bereich Serious Games skizzieren.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Vorlesung bekanntgegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Medizinische Bildverarbeitung",
        "Modul Nr.": "20-00-0379",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0379-vlMedizinische Bildverarbeitung 3 integrierte Lehrveranstaltung2",
            "Lerninhalt": "Die Vorlesung gliedert sich in zwei Teile. In der ersten Hälfte der Vorlesung wird die Funktionsweise von Geräten, welche medizinische Bilder liefern (CT, MRI, PET, SPECT, Ultraschall), erklärt.In der zweiten Hälfte werden verschiedene Bildverarbeitungsmethoden erklärt, welche typischerweise für die Bearbeitung medizinischer Bilder eingesetzt werden.",
            "Qualifikationsziele_Lernergebnisse": "Noch erfolgreichem Besuch der Veranstaltung haben die Studierenden einen Überblick über die Funktionsweise und die Möglichkeiten der modernen medizinischen Bildverarbeitung. Studierende sind dazu in der Lage, einfache bis mittlere medizinische Bildverarbeitungsaufgaben selbständig zu lösen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Mathematische Grundlagen sind dringend empfehlenswert. Ferner wird empfohlen, die Vorlesung -Bildverarbeitung' vorher besucht zu haben.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Mathematische Grundlagen sind dringend empfehlenswert. Ferner wird empfohlen, die Vorlesung -Bildverarbeitung' vorher besucht zu haben.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "1) Heinz Handels: Medizinische Bildverarbeitung2) 2) Gonzalez/Woods: Digital Image Processing (last edition)3) 3) Bernd Jähne: Digitale Bildverarbeitung. 6. überarbeitete und erweiterte Auflage. Springer, Berlin u. a. 2005, ISBN 3-540-24999-0.4) Kristian Bredies, Dirk Lorenz: Mathematische Bildverarbeitung. Einführung in Grundlagen und moderne Theorie. Vieweg+Teubner, Wiesbaden 2011, ISBN 978-3-8348-1037-3.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Ambient Intelligence",
        "Modul Nr.": "20-00-0390",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0390-ivAmbient Intelligence 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Die Vorlesung führt in aktuelle Entwicklungen von Ambient Intelligence ein. Im Vordergrund der Vorlesung steht die Mensch-Maschine-Interaktion (MMI) in intelligenten Umgebungen in einem allgegenwärtigen Informationsraum, wie sie beispielsweise zunehmend durch eingebettete Systeme in alltägliche Gebrauchsobjekte gegeben ist. Spezieller Fokus wird auf den mobilen Aspekt eines allgegenwärtigen Informationszugriffs und der Informationsaufbereitung und -darstellung in mobilen Endgeräten gelegt. Dabei soll einerseits ein Einblick in die grundlegenden Technologien, Anwendungen und Experimente gegeben werden und anderseits (nicht im Schwerpunkt) auch die sozio-kulturellen Implikationen und Aspekte neuer Ambient Intelligence Lösungen diskutiert werden. Zusätzliche Themen der Vorlesung sind System-Architekturen für verteilte Umgebungen, Kontext-Awareness und Kontext-Management, Benutzermodelle und deren Implikationen, Sensornetzwerke und Interaktionstechniken. Die Vorlesung wird Beispiele aktueller Projekte diskutieren und die internationalen Forschungslinien von Ambient Intelligence beleuchten.",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung erfolgreich besucht haben, können sie Technologietrends und Forschungserkenntnisse im Bereich Ambient Intelligence beschreiben. Die wichtigsten Konzepte zur Realisierung -intelligenter Umgebungen' -intelligente Netzwerke und Objekte, Techniken der erweiterten, mobilen Realität, ubiquitäre und allgegenwärtige Informationsräume, nomadische Kommunikationen, Echt-Zeit-Kommunikation und relevante Middleware, Eingebettete Systeme, Sensor Netzwerke und Wearable Computing - können diskutiert und eingeordnet werden. Nach Abschluss der zugehörigen Übung können Studierende die Projektphasen der Entwicklung einer Ambient-Intelligence Anwendung eigenständig planen und realisieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Empfohlen für Studenten mit abgeschlossenem Bachelor-Studium, empfehlenswerte Vorlesung 'Visual Computing', Seminar -Multimodale Interaktion mitintelligenten Umgebungen'",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Empfohlen für Studenten mit abgeschlossenem Bachelor-Studium, empfehlenswerte Vorlesung 'Visual Computing', Seminar -Multimodale Interaktion mitintelligenten Umgebungen'",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Computer Vision II",
        "Modul Nr.": "20-00-0401",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0401-ivComputer Vision II 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Computer Vision als (probabilistische) Inferenz- Robuste Schätzung und Modellierung- Grundlagen der Bayes\u2019schen Netze und Markov\u2019schen Zufallsfelder- Grundlegende Inferenz- und Lernverfahren der Computer Vision- Bildrestaurierung- Stereo- Optischer Fluß- Bayes\u2019sches Tracking von (artikulierten) Objekten- Semantische Segmentierung- Aktuelle Themen der Forschung",
            "Qualifikationsziele_Lernergebnisse": "Studierende haben nach erfolgreichem Besuch der Veranstaltung ein vertieftes Verständnis der Computer Vision. Sie formulieren Fragestellungen der Bild- und Videoanalyse als Inferenzprobleme und berücksichtigen dabei Herausforderungen reeller Anwendungen, z.B. im Sinne der Robustheit. Sie lösen das Inferenzproblem mittels diskreter oder kontinuierlicher Inferenzalgorithmen, und wenden diese auf realistische Bilddaten an. Sie evaluieren die anwendungsspezifischen Ergebnisse quantitativ.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Besuch von Visual Computing und Computer Vision I ist empfohlen.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Besuch von Visual Computing und Computer Vision I ist empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden regelmässig aktualisiert und beinhalten beispielsweise:- S. Prince, 'Computer Vision: Models, Learning, and Inference', Cambridge University Press, 2012- R. Szeliski, \"Computer Vision: Algorithms and Applications\", Springer 2011 ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Probabilistische Graphische Modelle",
        "Modul Nr.": "20-00-0449",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0449-ivProbabilistische Graphische Modelle6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "- Auffrischung Wahrscheinlichkeits- & Bayes\u2019sche Entscheidungstheorie- Gerichtete und ungerichtete graphische Modelle und deren Eigenschaften- Inferenz in Baumgraphen- Approximative Inferenz in allgemeinen Graphen: Message Passing und Mean Field- Lernen von gerichteten und ungerichteten Modellen- Sampling-Methoden für Inferenz und Lernen- Modellierung in Beispielanwendungen, inkl. Topic-Modelle- Tiefe Netze- Halb-überwachtes Lernen ",
            "Qualifikationsziele_Lernergebnisse": "Studierende haben nach erfolgreichem Besuch der Veranstaltung ein vertieftes Verständnis von probabilistischen graphischen Modellen. Sie beschreiben und analysieren die Eigenschaften graphischer Modelle und formulieren geeignete Modelle für konkrete Schätz-und Lernaufgaben. Sie verstehen Inferenzalgorithmen, beurteilen deren Eignung und gebrauchen diese für graphische Modelle in relevanten Anwendungen. Sie ermitteln weiterhin welche Lernverfahren sich eignen, um die Modellparameter anhand von Beispieldaten zu bestimmen, und wenden diese an.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Besuch von 'Statistisches Maschinelles Lernen' ist empfohlen.",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Besuch von 'Statistisches Maschinelles Lernen' ist empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden regelmäßig aktualisiert und beinhalten beispielsweise:- D. Barber: 'Bayesian Reasoning and Machine Learning', Cambridge University Press 2012- D. Koller, N. Friedman: 'Probabilistic Graphical Models: Principles and Techniques', MIT Press 2009",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Medizinische Visualisierung",
        "Modul Nr.": "20-00-0467",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0467-ivMedizinische Visualisierung 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Medizinische Bilddaten; Bildaufbereitung; Medizinische Visualisierung mit VTK; IndirekteVolumenvisualisierung; Direkte Volumenvisualisierung; Transfer-Funktionen; InteraktiveVolumenvisualisierung; Illustratives Rendering; Beispiel: Visualisierung von Tensor-Bilddaten; Beispiel: Visualisierung von Baumstrukturen; Beispiel: Virtuelle Endoskopie; Beispiel: Bildgestützte Chirurgie",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung Techniken der Volumenvisualisierung. Sie verstehen die Notwendigkeit der Bildverbesserung für die Visualisierung. Sie können das \"Visualization Toolkit' (VTK) anwenden, um mit dessen Hilfe Anwendungen für die Visualisierung von medizinischen Bilddaten für Diagnose, Planung und Therapie zu erstellen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: GDV I, (Medizinische) Bildverarbeitung",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: GDV I, (Medizinische) Bildverarbeitung",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Preim, Botha: Visual Computing for Medicine",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Capturing Reality",
        "Modul Nr.": "20-00-0489",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0489-ivCapturing Reality 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Dieser Kurs deckt ein breites Spektrum von Techniken zur Digitalisierung und Modellierung unserer Welt mit einem Fokus auf Anwendungen in der Computergraphik und Computer Vision ab. Dies beinhaltet insbesondere:- grundlegende Werkzeuge und Kalibrationstechniken für die Digitalisierung- Digitalisierungs- und Modellierungstechniken für verschiedenste Objekt- und Szeneneigenschaften (z.B. Geometrie, Reflexionseigenschaften)- grundlegende mathematische Modellierungs- und Optimierunstechniken- Implementierung und praktische Anwendung einer Reihe von Techniken",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Besuch der Veranstaltung sind Studierende dazu in der Lage, Digitalisierungs- und Modellierungsprobleme für Objekte und Szenen in Computergraphik und Computer Vision sowie die zugrunde liegenden Techniken zu analysieren. Sie können selbständig neue Versuchsaufbauten entwickeln, Experimente durchführen und die Ergebnisse auswerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Der Besuch der Veranstaltung Graphische Datenverarbeitung I oder Computer Vision I sowie grundlegende Programmierkenntnisse in C/C++",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Der Besuch der Veranstaltung Graphische Datenverarbeitung I oder Computer Vision I sowie grundlegende Programmierkenntnisse in C/C++",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Noriko Kurachi: The Magic of Computer Graphics. A K Peters/CRC PressRichard Szeliski: Algorithms and Applications, SpringerMarcus Magnor, Oliver Grau, Olga Sorkine-Hornung, Christian Theobalt: Digital Representations of the Real World: How to Capture, Model, and Render Visual RealityWolfgang Förstner, Bernhard P. Wrobel: Photogrammetric Computer Vision - Geometry, Orientation and Reconstruction",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Geometric Algebra Computing",
        "Modul Nr.": "20-00-0490",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0490-iv Geometric Algebra Computing 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Geometric Computing mit Hilfe einer geometrisch intuitiven Algebra.",
            "Qualifikationsziele_Lernergebnisse": "Anwenden eines neuen math. Systems auf Gebieten wie Visual Computing und Robotik.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0490-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0490-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "1. Geometric Algebra for Computer Science von Dorst, Fontijne und Mann 2. Dissertation: http://tuprints.ulb.tu-darmstadt.de/epda/000764/",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "TK2: Human Computer Interaction",
        "Modul Nr.": "20-00-0535",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0535-vlTK2: Human Computer Interaction 3 integrierte Lehrveranstaltung2",
            "Lerninhalt": "Die Vorlesung stellt verschiedene grundlegende Konzepte, Modelle und Theorien aus dem Bereich der Human Computer Interaction (HCI) vor. Die Veranstaltung umfasst die folgenden Inhalte:- Theoretische Grundlagen aus Psychologie und Interaktionsgestaltung als Basis für die Gestaltung von Nutzerschnittstellen- Überblick über verschiedene Typen von Nutzerschnittstellen- Command-line interfaces- Grafische Nutzerschnittstellen, u.a. Mac OS und Windows- Interaktive Oberflächen, u.a. Tabletops, Multitouch- Mobile user interfaces, u.a. basierend auf iPhone OS, Android- Pen-based user interfaces, u.a. elektronische Stifte- Tangible user interfaces, Organic user interfaces- Sprachbasierte user interfaces- Beurteilung, Messung, Bewertung von Nutzerschnittstellen- Nutzerstudien- Quantitative Evaluationsmethoden- Qualitative Evaluationsmethoden- Nutzerzentrierte Softwareentwicklung",
            "Qualifikationsziele_Lernergebnisse": "Nach der Teilnahme an dieser Lehrveranstaltung haben Studierende- Verständnis der psychologischen Grundlagen des Designs von Benutzerschnittstellen erworben- Methoden des user-centric design process kennengelernt- Überblickswissen über die gängigen UI Konzepte erworben- Evaluationstechniken kennen gelernt und angewandt",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden kontinuierlich aktualisiert, Beispiele für verwendete Literatur könnten sein:Ausgewählte Kapitel aus den folgenden Standardwerken:- Donald Norman: The Design of Everyday Things- Alan Dix, Janet Finlay, Gregory Abowd and Russel Beale: Human-Computer Interaction- Jenny Preece , Yvonne Rogers and Helen Sharp: Interaction Design: Beyond Human-Computer Interaction",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Physikalisch-basierte Animation",
        "Modul Nr.": "20-00-0682",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0682-ivPhysikalisch-basierte Animation 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "1. Grundlagen der physikalisch-basierten Animation - Anwendungen - Simulationsmodelle - Definition holonomer und nichtholonomer Zwangsbedingungen - Bewegungsgleichungen für Partikel - Gewöhnliche Differentialgleichungen - Numerische Integrationsverfahren2. Partikelsysteme - Aufbau von Partikelsystemen - Simulation physikalischer Effekte3. Simulation von Haaren - Haarmodelle - Simulationsverfahren - Haar-Haar Interaktion4. Simulation von Kleidung  - Masse-Feder-Systeme - Finite-Elemente-Methoden - Positionsbasierte Verfahren5. Simulation von Weichkörpern  - Generierung von Volumennetzen - Masse-Feder-Systeme - Finite-Elemente-Methoden - Positionsbasierte Verfahren - Volumenerhaltung6. Starrkörper - Grundlagen - Bewegungsgleichungen für Starrkörper - Simulation von Gelenken7. Kollisionserkennung  - Hüllkörper - Hüllkörperhierarchien - Zellrasterverfahren - Kollisionstests für Starrkörper - Kollisionstests für deformierbare Körper - Kontinuierliche Kollisionserkennung - Bildbasierte Verfahren8. Brüche - Animation von Brüchen mit Bruchmustern - Simulation spröder Brüche - Anpassung des Simulationsnetzes",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach einem erfolgreichen Besuch der Veranstaltung Mehrkörpersysteme und diskrete und kontinuierliche deformierbare Simulationsmodelle. Sie verstehen die numerischen Simulationsverfahren sowie deren jeweiligen Anwendungsbereiche und können diese Verfahren anwenden. Sie haben einen grundlegenden Überblick über Verfahren der Echtzeitsimulation in der Computergraphik.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Kenntnisse von Numerik, Algorithmen und Datenstrukturen, Computergraphik",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Kenntnisse von Numerik, Algorithmen und Datenstrukturen, Computergraphik",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Vorlesung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "User-Centered Design in Visual Computing",
        "Modul Nr.": "20-00-0793",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0793-iv User-Centered Design in Visual Computing0 Integrierte Veranstaltung2",
            "Lerninhalt": "Die Entwicklung von benutzerzentrierten Softwarelösungen dient nicht nur zur besseren und effizienteren Nutzung von Software, sie erhöht vielmehr die Akzeptanz und somit auch die Verbreitung und Verwendung. Die Vorlesung 'User Centered Design in Visual Computing' richtet sich in erster Linie an Studierende des Fachbereichs Informatik und vermittelt Modelle, Methoden und Techniken zur benutzerzentrierten Entwicklung von Visualisierungssoftware und visuell-interaktiven Benutzerschnittstellen. Dabei werden insbesondere Methoden vorgestellt, die zu einer gesteigerten Akzeptanz und effizienterer Benutzung der entworfenen Lösungen führen. Des Weiteren werden Methoden der Evaluation vorgestellt, die die Akzeptanz und Nutzbarkeit messen. Die Vorlesung behandelt die eingeführten Themen mit besonderem Bezug zu Visual Computing und graphischen Benutzerschnittstellen.Stoffplan:- Usability- User Experience- Task Analysis- Benutzerschnittstellen- Interaktionsdesign- Prototyping- Graphikdesign und Informationsvisualisierung- Evaluation während und nach der Softwareentwicklung- Anwendungen",
            "Qualifikationsziele_Lernergebnisse": "Studierende können nach erfolgreichem Besuch der Veranstaltung:- Geeignete Methoden zur Entwicklung von benutzerzentrierten Softwarelösungen identifizieren und begründen- Techniken zu benutzerzentrierten Nutzungsschnittstellen anwenden- Evaluationsmethoden zur Untersuchung der eingesetzten Techniken in den verschiedenen Phasen der Entwicklung identifizieren und auswählen- Verbesserungen zur Informationsaufnahme und Navigation auf Basis vorhandener Untersuchungen und Evaluationen vorschlagen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen des Visual Computing, wie sie beispielsweise in der Pflichtveranstaltung Visual Computing und in der Vorlesung GDV I vermittelt werden",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0793-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen des Visual Computing, wie sie beispielsweise in der Pflichtveranstaltung Visual Computing und in der Vorlesung GDV I vermittelt werden",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0793-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Deep Learning für medizinische Bildgebung",
        "Modul Nr.": "20-00-1014",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1014-iv Deep Learning für medizinische Bildgebung0 Integrierte Veranstaltung3",
            "Lerninhalt": "Formulierung der medizinischen Bildsegmentierung, Computergestützte Diagnostik und chirurgische Planung als Probleme des maschinellen Lernens, Deep Learning für medizinische Bildsegmentierung, Deep Learning für computergestützte Diagnostik, Chirurgische Planung von präoperativen Bildern mit Deep Learning, Tool-Präsenz Erkennung und Lokalisierung von endoskopischen Videos durch Deep Learning, Adversarial Beispiele für medizinische Bildgebung, Generative Adversarial Networks für Medizinische Bildgebung.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss des Kurses sollten die Teilnehmer in der Lage sein, alle Komponenten der Formulierung eines medizinischen Bildanalyseproblems als Proble des Maschinellen Lernens zu verstehen. Sie sollten auch in der Lage sein, fundierte Entscheidungen über die Wahl eines universellen Deep Learning Paradigmas für ein gegebenes medizinische Bildanalyseproblem zu treffen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Programmierkenntnisse- Verständnis des algorithmischen Designs- Lineare Algebra- Bildverarbeitung / Computer Vision I- Statistisches Maschinelles Lernen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1014-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Programmierkenntnisse- Verständnis des algorithmischen Designs- Lineare Algebra- Bildverarbeitung / Computer Vision I- Statistisches Maschinelles Lernen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1014-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Tiefe Generative Modelle",
        "Modul Nr.": "20-00-1035",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1035-iv Tiefe Generative Modelle 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Generative Modelle, implizite und explizite Modelle, Variational AutoEncoders, Generative Adversarial Networks, Numerische Optimierung für generative Modelle, Anwendungen in der medizinischen Bildverarbeitung",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende das Modul besucht haben, können sie- den Aufbau und die Funktionsweise Tiefer Generativer Modelle (Deep Generative Models, DGM) erklären- wissenschaftliche Veröffentlichungen zum Thema DGMs kritisch hinterfragen und damit fachlich beurteilen- grundlegende DGMs in einer dafür ausgelegten höheren Programmiersprache selbstständig konstruieren / implementieren- die Implementierung und Anwendung von DGMs auf unterschiedliche Anwendungen übertragen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Programmierkenntnisse Python- Lineare Algebra- Bildverarbeitung/Computer Vision I- Statistisches Maschinelles Lernen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1035-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Programmierkenntnisse Python- Lineare Algebra- Bildverarbeitung/Computer Vision I- Statistisches Maschinelles Lernen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1035-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in Veranstaltung bekannt gegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Verteilte Gemetrieverarbeitung",
        "Modul Nr.": "20-00-1075",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1075-iv Verteilte Geometrieverarbeitung 0 Integrierte Veranstaltung4",
            "Lerninhalt": "* Grundlagen und Algorithmen der Geometrieverarbeitung: Smoothing, Remeshing, Delaunay-Triangulierung, Parametrisierung, Texturierung, u.a.* Einführung in Big Data und Cloud Computing* Indexstrukturen für den schnellen Zugriff auf massive Geometriedatenmengen: Quad tree, R-tree, Space-filling curves, u.a.* Verteilte und cloud-basierte Datenspeicherung* Architekturen für verteilte Verarbeitungspipelines* Programmiermodelle für verteilte Algorithmen (z.B. MapReduce)* Technologien und Frameworks für die verteilte Datenverarbeitung (z.B. Spark, Vert.x) und Geometrieverarbeitung (Draco, u.a.)* Deployment von verteilten Anwendungen in die Cloud* Ergänzend gibt es praktische und theoretische Übungen",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Besuch der Veranstaltung besitzen die Studierenden grundlegende Kenntnisse zur Geometrieverarbeitung sowie zur verteilten, cloud-basierten Verarbeitung sehr großer Datenmengen im Allgemeinen. Sie sind in der Lage, selbstständig skalierbare Anwendungen zu entwickeln und diese in der Cloud auszuführen, um die Geometrieverarbeitung zu parallelisieren und damit die Performance zu erhöhen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:* Programmierkenntnisse in Java oder anderen JVM-Sprachen* Grundlegende Algorithmen und Datenstrukturen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1075-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:* Programmierkenntnisse in Java oder anderen JVM-Sprachen* Grundlegende Algorithmen und Datenstrukturen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1075-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Hands-On HCI",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1116-ivHands-On HCI 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Vielleicht haben Sie bereits von Virtual / Augmented Reality, 3D-Druck, am Körper getragenen oder anfassbaren (tangible) Benutzeroberflächen gehört oder diese sogar ausprobiert. Der Bereich Human-Computer-Interaktion (HCI) deckt all diese spannenden Themen ab und bietet die Möglichkeit, neue Prototypen zu bauen und diese in Benutzerstudien auszuprobieren. Wenn Sie Theorie und Praxis im Bereich der HCI verbinden möchten ist dieser Kurs - Hands-On HCI - genau das Richtige für Sie. Das Ziel des Kurses ist es, Sie durch den gesamten Forschungszyklus im Bereich der HCI zu führen. Damit kann dieser Kurs eine Vorbereitung für Ihre zukünftige Bachelor- / Masterarbeit in diesem Bereich sein, sowie einen ersten Baustein auf Ihrem akademischen Weg darstellen.",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss des Moduls können Studierende- drei Ansätze zur HCI-Forschung voneinander unterscheiden und anwenden.- drei Arten empirischer Untersuchungen unterscheiden.- effektiv eine wissenschaftliche Publikation lesen.- zwischen Arten von HCI-Beiträgen unterscheiden.- Forschungsfragen, Hypothesen und experimentelle Variablen formulieren und definieren.- basierend auf den zuvor erarbeiteten Forschungsfragen ein dazu passendes Studiendesign entwerfen.- eine Studie durchführen und dabei quantitative und qualitative Methoden zur Datensammlung verwenden.- quantitative Daten auf der Basis von statistischen Methoden analysieren, auswerten und interpretieren.- qualitative Daten auf der Basis von Grounded Theory analysieren und interpretieren.- den Peer-Review Prozess verstehen und sowie Reviews für eine wissenschaftliche Publikation schreiben.- Evaluationstechniken mit und ohne Nutzern verstehen und anwenden.- die gewonnenen Erkenntnisse als wissenschaftliche Publikation verschriftlichen und vor einem Fachpublikum präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen wird die vorherige Belegung von Human-Computer Interaction (TK2).",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1116-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen wird die vorherige Belegung von Human-Computer Interaction (TK2).",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1116-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Biometrische Erkennung und Sicherheit",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1118-ivBiometrische Erkennung und Sicherheit0 Integrierte Veranstaltung4",
            "Lerninhalt": "Biometrische Systeme und ihre Struktur; Biometrische Leistungsbewertung und Metriken; Gesichtserkennung; Fingerabdruck und Augenbiometrie; Multibiometrische Fusion; Effizientes maschinelles Lernen und Biometrie; Schwachstellen biometrischer Systeme; Erkennung von Präsentationsangriffen; Biometrischer Vorlagenschutz; Biometrische Privatsphäre; Fairness in biometrischen Systemen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch des Kurses sind die Teilnehmer mit den biometrischen Lösungen vertraut. Sie verstehen grundlegende Techniken zur automatischen Erkennung von Personen, die Schwachstellen der Biometrie und die Schutzmaßnahmen gegen diese Schwachstellen. Sie sind in der Lage, diese Techniken zur Lösung grundlegender biometrischer Aufgaben an realistischen Problemstellungen zu implementieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Es wird empfohlen, zuvor Visual Computing besucht zu haben. Grundlagen in Mathematik und Wahrscheinlichkeitsrechnung sind erforderlich.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1118-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Es wird empfohlen, zuvor Visual Computing besucht zu haben. Grundlagen in Mathematik und Wahrscheinlichkeitsrechnung sind erforderlich.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1118-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Affective Computing",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1120-ivAffective Computing 0 Integrierte Veranstaltung4",
            "Lerninhalt": "- Einführung in das Affective Computing mit einem Überblick über die Anwendung in Unterhaltung, Gesundheit und Pädagogik- Emotionstheorien: Psychologie, Kognitionswissenschaft und Neurowissenschaft- Diskussion über Möglichkeiten, wie Maschinen Emotionen \"haben\" können- Experimenteller Aufbau, Methodik und Analyse- Emotionen und das Gehirn- Körperlicher Ausdruck von Emotionen- Synthese von emotionalem Verhalten- Emotionen und soziale Interaktion- Persönlichkeit und Kulturen- Emotionserkennung in Text, Sprache und Gesicht- Praktische Programmiererfahrung für Affective Computing- Vorurteile und Ethik des Affective Computing",
            "Qualifikationsziele_Lernergebnisse": "Dieser Kurs zielt darauf ab, die Theorien, Methoden und Anwendungen rund um Affective Computing in einer interdisziplinären Perspektive zu lehren. Nach erfolgreichem Abschluss des Kurses verstehen die Studierenden affektive Interaktionen und deren Auswirkungen auf die Mensch-Computer-Interaktion, lernen Methoden zur Erhebung, Analyse und Auswertung affektiver Verhaltensdaten anzuwenden. Sie demonstrieren Kenntnisse zur computergestützten Analyse, Synthese und Erkennung menschlicher affektiver Verhaltensdaten und zum Entwurf emotionssensibler interaktiver Technologien wie Interaktionen mit virtuellen Agenten, Robotern und Spielen. Sie gewinnen praktische Erfahrung mit den Rahmenbedingungen für menschliches Affekt- und Verhaltensverständnis und ein Bewusstsein für potenzielle Verzerrungen in Daten sowie mögliche Gefahren im Umgang mit sensitiven personenbezogenen Daten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden: - Programmierkenntnisse- Statistisches Maschinelles Lernen oder Einführung in die Künstliche Intelligenz",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1120-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden: - Programmierkenntnisse- Statistisches Maschinelles Lernen oder Einführung in die Künstliche Intelligenz",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1120-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Grundlagen der Bioinformatik",
        "Modul Nr.": "10-30-0036",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "10-01-0036-vlBioinformatik-Vorlesung 2 Vorlesung 210-01-0036-seBioinformatik-Übung 2 Übung 2",
            "Lerninhalt": "Algorithmen für die Sequence Analyse und AlignmentsMolekulare VisualisierungAlgorithmen für Strukturvorhersage und HomologiemodellierungMolecular Dynamics als Simulationstechnik in HPC",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten erwerben Grundlagenwissen in der sequenz-basierten Bioinformatik (Sequence Alignment, Scoring Schemata, Datenbanken, Mustererkennung) und derStrukturmodellierung und Simulation (Strukturvorhersage, Molekulardynamik).Die Studenten werden in die Lage versetzt, eigenständig Standard-Werkzeuge derBioinformatik einzusetzen und deren grundlegende Algorithmen in diversenImplementierungen zu identifizieren. Notwendige statistische und mathematische Grundlagen werden vermittelt und in Übungen und Seminarstunden vertieft.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Deonier, Tavare, Waterman Computational Genome Analysis, Springer, 2005- Durbin, Eddy, Krogh, Mitchison, Biological Sequence Analysis, Cambridge University Press,- 1998- MacKay, Information Theory, Inference, and Learning Algorithms, Cambridge University- Press, 2003- Schlick, Molecular Modeling and Simulation, Springer, 2002",
            "Kommentar": "Schwerpunkt Web, Wissens- und Informationsverarbeitung "
        }
    },
    {
        "Modulname": "Data Mining und Maschinelles Lernen",
        "Modul Nr.": "20-00-0052",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0052-ivData Mining und Maschinelles Lernen6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Durch die rasante Entwicklung der Informationstechnologie sind immer größere Datenmengen verfügbar. Diese enthalten oft implizites Wissen, das, wenn es bekannt wäre, große wirtschaftliche oder wissenschaftliche Bedeutung hätte. Data Mining ist ein Forschungsgebiet, das sich mit der Suche nach potentiell nützlichem Wissen in großen Datenmengen beschäftigt, und Maschinelles Lernverfahren gehören zu den Schlüsseltechnologien innerhalb dieses Gebiets.Die Vorlesung bietet eine Einführung in das Gebiet des Maschinellen Lernens unter dem besonderen Aspekt des Data Minings. Es werden Verfahren aus verschiedenen Paradigmen des Maschinellen Lernens mit exemplarischen Anwendungen vorgestellt. Um das Wissen zu operationalisieren, werden in den Übungen prak-tisch-e Erfahrungen mit Lernalgorithmen gesammelt.- Einführung (Grundbegriffe, Lernprobleme, Konzepte, Beispiele, Repräsentation)- Regel-Lernen\u25cb Lernen einzelner Regeln (Generalisierung und Spezialisierung, Strukturierte Hypothesenräume, Version Spaces)\u25cb Lernen von Regel-Mengen (Covering Strategie, Evaluierungsmaße für Regeln, Pruning, Mehr-Klassenprobleme)- Evaluierung und kosten-sensitives Lernen (Accuracy,X-Val,ROC-Kurven,Cost-Sensitive Learning)- Instanzenbasiertes Lernen (kNN,IBL,NEAR,RISE)- Entscheidungsbaum-Lernen (ID3, C4.5, etc.) - Ensemble-Methoden (Bias/Variance, Bagging, Randomization, Boosting, Stacking, ECOCs)- Pre-Processing (Feature Subset Selection, Diskretisierung, Sampling, Data Cleaning)- Clustering und Lernen von Assoziationsregeln (Apriori)",
            "Qualifikationsziele_Lernergebnisse": "Nach der erfolgreichen Absolvierung dieser Lehrveranstaltung sind die Studenten in der Lage- grundlegende Techniken des Data Mining und Maschinellen Lernens zu verstehen und erklären- praktische Data Mining Systeme selbständig einsetzen und deren Stärken und Schwächen verstehen- neue Entwicklungen auf diesem Gebiet kritisch beurteilen",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Autonome SystemeM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Mitchell: Machine Learning, McGraw-Hill, 1997- Ian H. Witten and Eibe Frank: Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations, Morgan-Kaufmann, 1999",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Web Mining",
        "Modul Nr.": "20-00-0101",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0101-ivWeb Mining 6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Das World-Wide Web verschafft jedem Internet-User Zugang zu einer stetig wachsenden Informationsfülle, die ohne entsprechende Unterstützung nicht mehr zu überschauen ist. Web Mining ist eine Forschungsrichtung, die versucht, das Problem mit Hilfe von Techniken des Maschinellen Lernens und Data Minings in den Griff zu bekommen. In dieser Vorlesung werden sowohl Grundlagen von Information Retrieval und Text Classification vermittelt, als auch auf die Ausnutzung der Besonderheiten von Web-Dokumenten (d.h., ihre Strukturierung und ihre Vernetzung) eingegangen.- Introduction \u25cb Web Mining Overview\u25cb The Web, HTTP, HTML, DOM, XPath\u25cb Data Mining Overview\u25cb Structured, Semi-Structured and Unstructured Data\u25cb Sample Web Mining Tasks- Information Retrieval on the Web \u25cb search engines & web crawlers\u25cb document indexing\u25cb the vector space model\u25cb inverted index\u25cb performance measures (recall & precision)\u25cb relevance feedback\u25cb estimating the size of the web- Text Mining\u25cb text classification \u25a0 document representation\u25a0 induction of classifiers (k-NN, Naive Bayes, SVMs, Rule Learners)\u25a0 Overfitting Avoidance\u25a0 Evaluation of Classifiers\u25a0 Multi-Label Classification\u25cb feature engineering \u25a0 stop words\u25a0 feature subset selection\u25a0 n-grams\u25a0 stemming\u25a0 phrases\u25a0 latent semantic indexing\u25cb semi- and unsupervised learning\u25a0 clustering (k-means, bottom-up agglomerative)\u25a0 semi-supervised learning (active learning, self-training, co-training)- Structure mining \u25cb the Web as a graph\u25cb hyperlink-based relevance ranking (hubs and authorities, page rank)\u25cb hypertext classification (Naive Method, HyperClass, hyperlink ensembles)- Information Extraction & Wrapper Induction \u25cb conventional information extraction (AutoSlog)\u25cb structured text (LR-Wrappers)\u25cb semi-structured text (SoftMealy, WHISK, SRV, RAPIER)- Web Usage Mining\u25cb recommender systems\u25cb memory-based collaborative filtering\u25cb model-based collaborative filtering\u25cb web log mining",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie- grundlegende Techniken des Information Retrieval und Web Mining verstehen und erklären- praktische Information Retrieval und Web Mining Systeme selbständig einsetzen und deren Stärken und Schwächen verstehen- neue Entwicklungen uaf diesem Gebiet kritisch beurteilen",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Soumen Chakrabarti: Mining the Web - Discovering Knowledge from Hypertext Data. Morgan Kaufmann Publishers, 2003.- Christopher D. Manning, P. Raghavan and H. Schütze, Introduction to Information Retrieval, Cambridge University Press. 2008.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Natural Language Processing and the Web",
        "Modul Nr.": "20-00-0433",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0433-ivNatural Language Processing and the Web6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Das Web beinhaltet mehr als 10 Milliarden indexierbare Webseiten, die mittels Stichwortsuche zugänglich sind. Die Vorlesung behandelt Methoden der automatischen Sprachverarbeitung bzw. des Natural Language Processing (NLP) zur Verarbeitung großer Mengen unstrukturierter Texte im Web und zur Analyse von Online-Inhalten als wertvolle Ressource für andere sprachtechnologische Anwendungen im Web.Zentrale Inhalte:- Verarbeitung unstrukturierter Texte im Web\u25cb NLP-Grundlagen: Tokenisierung, Wortartenerkennung, Stemming, Lemmatisierung, Chunking\u25cb UIMA: Grundlagen und Anwendungen\u25cb Web-Inhalte und ihre Charakteristika, u.a. verschiedene Genres, z.B. persönliche Seiten, Nachrichtenportale, Blogs, Foren, Wikis\u25cb Das Web als Korpus, insb. innovative Verwendung des Webs als sehr großes, verteiltes, verlinktes, wachsendes und multilinguales Korpus- NLP-Anwendungen für das Web\u25cb Einführung in das Information Retrieval\u25cb Web-Suche und natürlichsprachliche Suchschnittstellen\u25cb Web-basierte Beantwortung von natürlichsprachlichen Fragen\u25cb Web-Mining im Web 2.0, z.B. Wikipedia, Wiktionary\u25cb Qualitätsbewertung von Web-Inhalten\u25cb Multilingualität\u25cb Internet-of-Services: Service Retrieval\u25cb Sentimentanalyse und Community Mining\u25cb Paraphrasen, Synonyme, semantische Verwandtschaft und das Web",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie- Methoden und Ansätze zur Verarbeitung unstrukturierter Texte verstehen und differenzieren,- die Arbeitsweise von Web-Suchmaschinen nachvollziehen und erläutern,- exemplarische Anwendungen der Sprachverarbeitung im Web selbständig aufbauen und analysieren,- das Potenzial von Web-Inhalten für die Verbesserung von sprachtechnologischen Anwendungen analysieren und einschätzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Algorithmen und Datenstrukturen sowie Programmierkenntnisse in Java werden erwartet",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Algorithmen und Datenstrukturen sowie Programmierkenntnisse in Java werden erwartet",
            "Benotung": "StandardIn dieser Vorlesung findet eine Anrechnung von vorlesungsbegleitenden Leistungen statt, die lt. §25(2) der 4. Novelle der APB und den vom FB 20 am 02.10.2012 beschlossenen Anrechnungsregeln zu einer Notenverbesserung um bis zu 1.0 führen kann.",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- Kai-Uwe Carstensen, Christian Ebert, Cornelia Endriss, Susanne Jekat, Ralf Klabunde: Computerlinguistik und Sprachtechnologie. Eine Einführung. 3. Auflage. Heidelberg: Spektrum, 2009. ISBN: 978-3-8274-20123-7. http://www.linguistics.rub.de/CLBuch/- T. Götz, O. Suhre: Design and implementation of the UIMA Common Analysis System, IBM Systems Journal 43(3): 476-489, 2004.- Adam Kilgarriff, Gregory Grefenstette: Introduction to the Special Issue on the Web as Corpus, Computational Linguistics 29(3): 333-347, 2003.- Christopher D. Manning, Prabhakar Raghavan, Hinrich Schütze: Introduction to Information Retrieval, Cambridge: Cambridge University Press, 2008. ISBN: 978-0-521-86571-5. http://nlp.stanford.edu/IR-book/ ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Foundations of Language Technology",
        "Modul Nr.": "20-00-0546",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0546-ivFoundations of Language Technology6 integrierte Lehrveranstaltung4",
            "Lerninhalt": "Die Vorlesung bietet eine Einführung in die zentralen Sichtweisen, Probleme, Methoden und Techniken der automatischen Sprachtechnologie am Beispiel der Programmiersprache Python.Zentrale Inhalte:- Sprachtechnologie/Natural language processing (NLP)\u25cb Tokenisierung\u25cb Segmentierung\u25cb Wortartenerkennung\u25cb Korpora\u25cb Statistische Analyse- Maschinelles Lernen\u25cb Kategorisierung und Klassifikation\u25cb Informationsextraktion- Einführung in Python\u25cb Datenstrukturen\u25cb Strukturierte Programmierung\u25cb Arbeiten mit Dateien\u25cb Einsatz von Bibliotheken\u25cb Programmbibliothek NLTKDie Veranstaltung basiert auf der Klassenbibliothek NLTK für Python. Diese bietet einen mächtigen Werkzeugkasten, um die theoretischen Methoden explorativ und problemlösend einzusetzen, ohne umfangreiche Programmierkenntnisse vorauszusetzen.",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie- die grundlegende Terminologie der automatischen Sprachtechnologie definieren,- wesentliche Fragestellungen dieses Gebietes benennen und erläutern,- einfache Pythonprogramme erklären und selbst implementieren,- die gelernten Methoden und Techniken auf konkrete Anwendungsszenarien des Textverstehens übertragen sowie- deren Möglichkeiten und Grenzen kritisch beurteilen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: ",
            "Pruefungsform": "Fachprüfung schriftlich/mündlich 60-120/30 min.",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: ",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Steven Bird, Ewan Klein, Edward Loper: Natural Language Processing with Python, O'Reilly, 2009. ISBN: 978-0596516499. http://www.nltk.org/book/",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Deep Learning für Natural Language Processing",
        "Modul Nr.": "20-00-0947",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Internet- und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0947-iv Deep Learning für Natural Language Processing0 Integrierte Veranstaltung4",
            "Lerninhalt": "Die Veranstaltung bietet eine Einführung in die grundlegenden Konzepte des Deep Learning und ihren Einsatz für Problemstellungen im Bereich Natural Language Processing (NLP).Zentrale Inhalte:- grundlegende Konzepte des Deep Learning (e.g. Feed-Forward Netze, Hidden Layers, Backpropagation, Aktivierungs- und Loss-Funktionen)- Word Embeddings: Theorie, unterschiedliche Ansätze und Modelle, Verwendung in maschinellen Lernverfahren- neuronale Netzwerkarchitekturen (e.g. recurrent NN, recursive NN, convolutional NN) für verschiedene Gruppen von NLP-Problemen wie die Klassifikation von Dokumenten (z.B. Spamerkennung), die Bestimmung von Sequenzen (z.B. POS-Tagging, Named Entity Recognition) und komplexeren Strukturen (z.B. Chunking, Parsing, Semantic Role Labeling)Die Veranstaltung strebt eine enge Verzahnung zwischen theoretischen Konzepten und ihrer praktischen Verwendung zur Lösung typischer Problemstellungen bei Datenanalyse auf freien Texten mit Hilfe von existierenden Programm-Bibliotheken in Python an.",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung abgeschlossen haben, können sie- die grundlegenden Konzepte von neuronalen Netzen und Deep Learning erklären.- Word Embeddings erklären, trainieren und für die Lösung von NLP-Problemen einsetzen.- neuronale Netzwerkarchitekturen für NLP-Probleme wie die Klassifizierung von Dokumenten und das Bestimmen linguistischer Sequenzen (z.B. POS-Tagging) und Strukturen (z.B. Chunking) verstehen und beschreiben.- neuronale Netzwerke für NLP-Probleme mit Hilfe existierender Bibliotheken in Python implementieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Mathematik- und Programmierkenntnisse",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0947-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Mathematik- und Programmierkenntnisse",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0947-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Statistical Relational Artificial Intelligence: Logic, Probability, and Computation",
        "Modul Nr.": "20-00-1011",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1011-iv Statistical Relational Artificial Intelligence: Logic, Probability, and Computation0 Integrierte Veranstaltung4",
            "Lerninhalt": "+ logische Programmierung+ Lernen von logischen Programmen aus Daten+ Probabilistische Graphische Modelle: Inferenz und Lernen+ Statistisch-Relationale Modelle wie z.B. ProbLog und Markov Logic Networks+ Schlussfolgern in statistisch-relationalen Modellen+ Lernen von statistisch-relationalen Modellen aus Daten+ Relationale lineare und quadratische Programme",
            "Qualifikationsziele_Lernergebnisse": "Die Lehrveranstaltung ist eine systematische Einführung in die Grundlagen und Methodik des statistisch-relationalen Lernens und Künstlichen Intelligenz: Das Studium und Design von intelligenten Agenten, die in verrauschten Welten agieren, die aus Individuen (Objekte, Dinge) und komplexe Beziehungen zwischen den Individuen bestehen. Nach erfolgreichem Abschluss der Lehrveranstaltung verstehen Studierende die wichtigsten Methoden und Ansätze in der statistisch-relationalen Künstlichen Intelligenz. Sie verstehen die grundlegenden Herausforderungen von relationalen Domänen. Sie kennen aktuelle Ansätze, um diese Herausforderungen zu lösen. Sie sind außerdem in der Lage ihre Kenntnisse auf aktuelle Probleme anzuwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Der Besuch von 'Statistisches Maschinelles Lernen' und 'Probabilistische Graphische Modelle' ist empfohlen, ist aber keine Voraussetzung.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1011-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)-",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Der Besuch von 'Statistisches Maschinelles Lernen' und 'Probabilistische Graphische Modelle' ist empfohlen, ist aber keine Voraussetzung.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1011-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Literaturempfehlungen werden regelmäßig aktualisiert und beinhalten beispielsweise:Luc De Raedt, Kristian Kersting, Sriraam Natarajan, David Poole (2016): Statistical Relational Artificial Intelligence: Logic, Probability, and Computation. Synthesis Lectures on Artificial Intelligence and Machine Learning, Morgan & Claypool Publishers, ISBN: 9781627058414.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Skalierbares Datenmanagement",
        "Modul Nr.": "20-00-1017",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1017-iv Skalierbares Datenmanagement 0 Integrierte Veranstaltung4",
            "Lerninhalt": "Diese Vorlesungen ist eine Einführung in die Basiskonzepte und die wesentlichen Paradigmen für skalierbare Datenmanagement-Systeme. Der Fokus der Vorlesung ist auf die system-orientieren Aspekten und Interna solcher Systeme gerichtet, um große Datenmengen zu speichern, zu ändern, und zu analysieren.Themen der Vorlesung sind:Database ArchitecturesParallel and Distributed DatabasesData WarehousingMapReduce and HadoopSpark and its EcosystemOptional: NoSQL Databases, Stream Processing, Graph Databases, Scalable Machine Learning",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Kurs sollen die Studierenden einen Überblick über die wichtigsten Konzepte, Algorithmen und System-Aspekte für skalierbare Datenmanagement-Systeme erworben haben. Das Hauptziel ist es, dass die Studierenden das Wissen besitzen, solche Systeme zu designen und zu entwickeln, inklusive praktischer Übungen auf Basis von bestehenden Systemen wie Spark.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Programmierkenntnisse in C++ and JavaInformationsmanagement (20-00-0015-iv)Optional:Foundations of Distributed Systems (20-00-0998-iv)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1017-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Programmierkenntnisse in C++ and JavaInformationsmanagement (20-00-0015-iv)Optional:Foundations of Distributed Systems (20-00-0998-iv)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1017-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Deep Learning: Architectures & Methods",
        "Modul Nr.": "20-00-1034",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1034-iv Deep Learning: Architectures & Methods0 Integrierte Veranstaltung4",
            "Lerninhalt": "- Auffrischung des Hintergrundwissens- Deep Feedforward Netze- Regularisierung im Deep Learning- Optimierung zum Training tiefer Netze- Convolutional tiefe Netze- Modelierung von Sequenzen durch Rekordernte und Rekursive Netze- Lineare Faktor Modelle- Autoenkoder- Repräsentationslernen- Strukturierte Probabilistische Modelle zum Deep Learning- Monte Carlo Methoden- Approximative Inferenz- Tiefe generative Modelle- Deep Reinforcement Learning- Deep Learning in Vision- Deep Learning in NLP",
            "Qualifikationsziele_Lernergebnisse": "Dieser Kurs richtet sich an Studierende mit fortgeschrittenem Erfahrung im maschinellen Lernen und vermittelt diesen Studierenden das notwendige Wissen, um eigenständig Forschungsprojekte im Bereich der Deep Learning durchzuführen, z.B. im Rahmen einer Bachelor- oder Masterarbeit. Dies betrifft sowohl ein grundlegendes Verständnis der algorithmischen Ansätze zum Deep Learning als auch die der Architekturen der tiefen tiefen Netze.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:20-00-0358-iv Statistisches Maschinelles Ler-nen20-00-0052-iv Data Min-ing und Maschinelles Ler-nen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1034-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:20-00-0358-iv Statistisches Maschinelles Ler-nen20-00-0052-iv Data Min-ing und Maschinelles Ler-nen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1034-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Advanced Data Management Systems",
        "Modul Nr.": "20-00-1039",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1039-iv Advanced Data Management Systems0 Integrierte Veranstaltung4",
            "Lerninhalt": "Dies ist eine fortgeschrittene Vorlesung aus dem Bereich der Architektur und Implementierung moderner Datenbanksysteme mit dem speziellen Fokus auf System-orientieren Aspekten und Interna solcher Systeme. Mögliche Themengebiete die in der Vorlesung behandelt werden sind: moderne Hardwaretechnologien für das Datenbanksysteme, Optimierungen für Hauptspeicherdatenbanken, Parallelisierungsstrategien und Approximative Anfrageausführung usw.Es wird erwartet, dass für jede Vorlesung aktuelle Veröffentlichungen (SIGMOD, VLDB, etc.) vorher gelesen werden. Die Hauptideen ausgewählter Veröffentlichungen werden in Programmierprojekten umgesetzt. Die Endnote des Kurses basiert auf den Programmierprojekten. Es gibt keine Klausur.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss der Vorlesung haben Studenten folgende Lernziele erreicht:- Vertieftes Verständnis von aktuellen Techniken für das Design von modernen Datenbanksystemen- Diskussion von Vor- und Nachteilen dieser Techniken mit dem Fokus auf möglichen Verbesserungen- Implementierung von einzelnen Techniken und experimentelle Evaluierung dieser Techniken zum Vergleich von Designalternativen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Solide Programmierkenntnisse in C and C++Skalierbares Datenmanagement (20-00-1017-iv)Informationsmanagement (20-00-0015-iv)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1039-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Solide Programmierkenntnisse in C and C++Skalierbares Datenmanagement (20-00-1017-iv)Informationsmanagement (20-00-0015-iv)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1039-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Einführung in die Künstliche Intelligenz",
        "Modul Nr.": "20-00-1058",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1058-iv Einführung in die Künstliche Intelligenz0 Integrierte Veranstaltung3",
            "Lerninhalt": "Die Künstliche Intelligenz (KI) beschäftigt sich mit Algorithmen zur Lösung von Problemen, von denen man gemeinhin annimmt, dass deren Lösung Intelligenz erfordert. Orientierte man sich in den Anfangstagen der Wissenschaft primär an psychologischen Erkenntnissen über das menschliche Denken, hat sich das Gebiet seither zunehmend dahingehend entwickelt, dass in den Problemlösungsansätzen versucht wird, die Stärken des Computers auszunutzen. Im Zuge dieser Vorlesung werden wir einen kurzen Überblick über die zentralen Themen dieser Kernwissenschaft der Informatik geben, insbesondere in die Themen Suche, Planen, Lernen und Schließen. Die historischen und philosophischen Grundlagen werden ebenfalls behandelt.- Grundlagen- Einführung, Geschichte der AI (RN chapter 1)- Intelligente Agenten (RN chapter 2)- Suche- Uninformierte Suche (RN chapters 3.1 - 3.4)- Heuristische Suche (RN chapters 3.5, 3.6)- Lokale Suche (RN chapter 4)- Constraint Satisfaction Problems (RN chapter 6)- Spiele: Suche mit Gegnern (RN chapter 5)- Planning- Planen im Zustandsraum (RN chapter 10)- Planen im Planraum (RN chapter 11)- Decisions under Uncertainty- Unsicherheit und Wahrscheinlichkeiten (RN chapter 13)- Bayesian Networks (RN chapter 14)- Decision Making (RN chapter 16)- Machine Learning- Neural Networks (RN chapters 18.1,18.2,18.7)- Reinforcement Learning (RN chapter 21)- Philosophische Grundlagen",
            "Qualifikationsziele_Lernergebnisse": "Nach der erfolgreichen Absolvierung dieser Lehrveranstaltung sind die Studenten in der Lage- grundlegende Techniken der Künstlichen Intelligenz zu verstehen und erklären- in einer Diskussion über die prinzipielle Möglichkeit der Schaffung einer Künstlichen Intelligenz fundierte Argumente vorzubringen- neue Entwicklungen auf diesem Gebiet kritisch beurteilen",
            "Voraussetzung_fuer_die_Teilnahme": "Keine",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1058-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Keine",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1058-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Ethik in Natürlicher Sprachverarbeitung",
        "Modul Nr.": "20-00-1061",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1061-iv Ethik in Natürlicher Sprachverarbeitung0 Integrierte Veranstaltung4",
            "Lerninhalt": "Mit zunehmender Verbreitung von Sprachtechnologien wächst das Bewusstsein, dass Entscheidungen, die wir über unsere Daten, Methoden und Werkzeuge treffen, direkt mit deren Auswirkungen auf Menschen und Gesellschaften verbunden sind. Diese Veranstaltung stellt reale Anwendungen von Sprachtechnologien und die möglichen ethischen Implikationen vor. Wir besprechen philosophische Grundlagen der ethischen Forschung und fortschrittliche Methoden auf dem neuesten Stand der Technik.Zentrale Inhalte:- Philosophische Grundlagen: Was ist Ethik - Geschichte, medizinische und psychologische Experimente, ethische Entscheidungsfindung.- Falschdarstellung und Befangenheit: Algorithmen zur Identifizierung von Vorurteilen in Modellen und Daten, sowie kontradiktorische Ansätze zum Gegensteuern.- Datenschutz: Algorithmen für demografische Inferenz, Persönlichkeitsprofile und Anonymisierung von demographischen und persönlichen Merkmalen.- Höflichkeit in der Kommunikation: Techniken zur Überwachung des Trolling, Hate Speech, missbräuchliche Sprache, Cybermobbing, toxische Kommentare.- Demokratie und die Sprache der Manipulation: Ansätze zur Erkennung von Propaganda und Manipulation in Nachrichten, zur Erkennung von gefälschten Nachrichten und zur politischen Gestaltung.- NLP zum Wohle der Menschheit: NLP mit geringen Ressourcen, Anwendungen zur Reaktion auf Katastrophen und Überwachung von Krankheiten, medizinische Anwendungen, psychologische Beratung, Schnittstellen für die Zugänglichkeit.",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung abgeschlossen haben, können sie- philosophische und praktische Aspekte von Ethik erklären- die Grenzen und Limitierungen maschineller Lernmodelle aufzeigen- Techniken einsetzen, um Befangenheit und Unfairness in Modellen und Daten zu identifizieren und genezusteuern- den Einfluss von Meinungsbeeinflussung in Datenaufbereitungen und Nachrichten aufzeigen und quantifizieren- Hassrede und Online-Missbrauch identifizieren sowie Gegenmaßnahmen entwickeln",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlegende Algorithmen und Datenstrukturen sowie Programmierkenntnisse",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1061-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlegende Algorithmen und Datenstrukturen sowie Programmierkenntnisse",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1061-iv] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": "ModulhandbuchB. Sc./M. Sc. InformatikStudienleistungenSeminare"
        }
    },
    {
        "Modulname": "Seminar aus Data Mining und Maschinellem Lernen",
        "Modul Nr.": "20-00-0102",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und English",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0102-seSeminar aus Data Mining und Maschinellem Lernen3 Seminar 2",
            "Lerninhalt": "Dieses Seminar dient zur Aufarbeitung neuerer Forschungsarbeiten im Bereich des Data Mining und des Maschinellen Lernens. Für jeden Seminar-Termin wird ein Teilnehmer ein Papier vortragen, welches dann von allen Teilnehmern diskutiert wird. Benotet werden die Vorbereitung und die Präsentation der Arbeit, sowie die Teilnahme an der Diskussion; evtl. auch eine schriftliche Ausarbeitung. Ausgewählt werden neuere Publikationen aus den relevanten Journalen des Gebiets, insbesondere aus den Journalen 'Data Mining and Knowledge Discovery', \"Machine Learning\", sowie \"Journal of Machine Learning Research\". Es können aber (nach Rücksprache) auch eigene Themenvorschläge ausgearbeitet werden. Bitte beachten Sie unbedingt aktuelle Ankündigungen zu dieser Lehrveranstaltung unter http://www.ke.informatik.tu-darmstadt.de/lehre.",
            "Qualifikationsziele_Lernergebnisse": "Nach diesem Seminar sollten Studierende in der Lage sein- einen unbekannten Text im Bereich des maschinellen Lernens selbständig aufzuarbeiten- eine Präsentation für ein Fachpublikum in diesem Gebiet zu entwickeln- an einer Fachdiskussion über ein Thema aus dem Gebiet des maschinellen Lernens sinnvoll teilzunehmen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Basic knowledge in Machine Learning in Data Mining",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Basic knowledge in Machine Learning in Data Mining",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Telekooperation",
        "Modul Nr.": "20-00-0130",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0130-seSeminar Telekooperation 3 Seminar 2",
            "Lerninhalt": "Das Seminar Telekooperation setzt sich mit der strukturierten Arbeit an wissenschaftlichen Veröffentlichungen auseinander.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Besuch des Seminars Telekooperation- sind Studierende mit dem Forschungsgebiet ihres Seminarthemas vertraut - können sich Studierende kritische mit wissenschaftlicher Literatur auseinandersetzen- eine solchen Auseinandersetzung und zugehöriger Schlussfolgerung in schriftlicher und mündlicher Form dokumentieren und vortragen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Allgemeine Informatik --Kenntnisse aus dem Grundstudium",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Allgemeine Informatik --Kenntnisse aus dem Grundstudium",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "W. Strunk, E. B. White. The Elements of Style, Pearson, ISBN 0-321-24861-9",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Themen der Entwicklung und Anwendung moderner Robotersysteme",
        "Modul Nr.": "20-00-0148",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0148-seAktuelle Themen der Entwicklung und Anwendung moderner Robotersysteme3 Seminar 2",
            "Lerninhalt": "- selbständige Einarbeitung in eine konkrete Aufgabenstellung aus der Entwicklung und Anwendung moderner Robotersysteme unter Anleitung- Einarbeitung in den relevanten Stand der Forschung und Technik- Erarbeitung eines Lösungsvorschlags und dessen Präsentation und Diskussion in einem Vortrag und einem Abschlussbericht",
            "Qualifikationsziele_Lernergebnisse": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten Bereichen, Teilsystemen und Methoden moderner Robotersysteme und trainieren Präsentations- und Dokumentationsfähigkeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese durch die Lehrveranstaltung 'Grundlagen der Robotik' vermittelt werden",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese durch die Lehrveranstaltung 'Grundlagen der Robotik' vermittelt werden",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Aktuelle Literaturhinweise werden in der Veranstaltung gegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Design und Implementierung moderner Programmiersprachen",
        "Modul Nr.": "20-00-0182",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0182-se Design und Implementierung moderner Programmiersprachen0 Seminar 2",
            "Lerninhalt": "",
            "Qualifikationsziele_Lernergebnisse": "Fähigkeit zur selbständigen Erarbeitung wissenschaftlicher Fragestellungen im Bereich -Design und Implementierung moderner Programmiersprachen' Erwerb von Kenntnissen über ausgewählte aktuelle ThemenAneignung von Präsentationstechniken",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Vordiplom oder gleichwertige Qualifikation (d.h. fachlicher Kenntnisstand nach den ersten vier Semestern des Bachelor-Studiengangs Informatik). Das Seminar kann auch zur Einarbeitung z.B. für Studien-, Semester-, Bachelor-, Master- oder Diplomarbeiten dienen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0182-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Vordiplom oder gleichwertige Qualifikation (d.h. fachlicher Kenntnisstand nach den ersten vier Semestern des Bachelor-Studiengangs Informatik). Das Seminar kann auch zur Einarbeitung z.B. für Studien-, Semester-, Bachelor-, Master- oder Diplomarbeiten dienen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0182-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "3D Animation & Visualisierung",
        "Modul Nr.": "20-00-0216",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0216-se3D Animation & Visualisierung 3 Seminar 2",
            "Lerninhalt": "Im Mittelpunkt dieses Seminars stehen aktuelle Arbeiten aus den Themenbereichen physikalisch basierte Simulation, Animation, Echtzeitrendering und Visualisierung.- eigenständiges Einarbeiten in ein Thema anhand von bereitgestellten wissenschaftlichen Arbeiten (i.d.R. englischsprachig)- Interpretation und Einordnen der Ergebnisse der Literaturarbeit- Erstellen einer textuellen Zusammenfassung und eines Vortrags über die Thematik- Präsentation vor einem Publikum mit heterogenem Vorwissen + Fachdiskussion",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten erhalten in diesem Seminar Fach- und Methodenkompetenz durch die Erarbeitung eines wissenschaftlichen Themas anhand vorgegebener und selbst recherchierter Fachliteratur. Sie können die wesentlichen Aspekte der untersuchten Arbeiten erkennen und diese kompakt aufbereiten, sowohl in textueller als auch in Vortragsform für ein Publikum mit heterogenem Vorwissensstand. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: GDV I, (GDV II)",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: GDV I, (GDV II)",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Ausgewählte Artikel von ACM SIGGRAPH, EUROGRPAHICS, IEEE und ähnlichen Konferenzen. Alle Artikel sind in englischer Sprache.Selected articles from ACM SIGGRAPH, EUROGRPAHICS, IEEE and similar Conferences. All articles are written in English. ",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Visual Analytics: Interaktive Visualisierung sehr großer Datenmengen",
        "Modul Nr.": "20-00-0268",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0268-seVisual Analytics: Interaktive Visualisierung sehr großer Datenmengen3 Seminar 2",
            "Lerninhalt": "Dieses Seminar richtet sich an Informatiker, die sich für den Bereich der Informationsvisualisierung interessieren, insbesondere den Teilbereich, der sich mit der Visualisierung extrem großer Datenmengen beschäftigt. Die Studenten werden in diesem Seminar eigene Themen im Bereich Visual Analytics erarbeiten, wissenschaftlich aufarbeiten und präsentieren. Zudem wird im Seminar von jedem Teilnehmer ein Aufsatz zum selben Thema ausgearbeitet werden.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch der Veranstaltung haben die Studierenden die Fach- und Methodenkompetenz zur Erarbeitung eines wissenschaftlichen Themas anhand vorgegebener und selbst recherchierter Fachliteratur. Die Studierenden können Themen analysieren, präsentieren und fachlich intensiv diskutieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Interesse sich mit einer graphisch-analytischen Fragestellung bzw. Anwendung aus der aktuellen Fachliteratur zu befassen. Vorkenntnisse in Graphischer Datenverarbeitung, Informationssysteme oder Informationsvisualisierung",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Interesse sich mit einer graphisch-analytischen Fragestellung bzw. Anwendung aus der aktuellen Fachliteratur zu befassen. Vorkenntnisse in Graphischer Datenverarbeitung, Informationssysteme oder Informationsvisualisierung",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Serious Games Seminar",
        "Modul Nr.": "20-00-0328",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "90 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0328-seSerious Games Seminar 4 Seminar 2",
            "Lerninhalt": "In dem Seminar wird der aktuelle Stand der Forschung bezüglich des Einsatzes von Serious Games (beispielsweise für Bildung, Gesundheit und Sport) analysiert und diskutiert. Die Themen haben jeweils Bezug zur aktuell laufenden Forschung des Fachgebiets, teilweise in Kooperation mit Partnern aus der Games Industrie und/oder Serious Games Anwendern.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an dem Seminar können sich die Studierenden eigenständig in ein Thema aus dem Bereich -Serious Games' einarbeiten. Sie sind mit Techniken der Literaturrecherche im Bereich von wissenschaftlichen Veröffentlichungen und von Industriequellen vertraut. Die dort genannten Techniken bzw. Ergebnisse können von ihnen zusammengefasst, bewertet und untereinander verglichen werden. Außerdem können sie die von ihnen erzielten Ergebnisse einem Publikum unter Anwendung von verschiedenen Präsentationstechniken vorstellen sowie eine dazugehörige Fachdiskussion aktiv bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: ",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: ",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Keine",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software Engineering - Projektseminar",
        "Modul Nr.": "20-00-0359",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0359-se Software Engineering - Projekt Seminar0 Seminar 2",
            "Lerninhalt": "- Angebotsmesse der Auftraggeber - Projektauswahl - Anforderungsanalyse beim externen Auftraggeber - Präsentation des Pflichtenheftes insbesondere der Projektorganisation und des iterativen Entwicklungsplans - Analyse der Werkzeuge und der Designkonzepte - Präsentation der Architektur und des Designs risikobehafteter Funktionen - Design und Implementierung der Iterationen - Präsentation der Implementierung und der Qualitätssicherung - Präsentation des abgeschlossenen Projekts der nächsten Studentengeneration",
            "Qualifikationsziele_Lernergebnisse": "- Erfahrung mit selbständiger Durchführung von Softwareprojekten mittleren Umfangs - Fähigkeit die verschiedenen Rollen innerhalb eines Softwareprojekts wahrzunehmen - Fähigkeit die Methoden und Werkzeuge zu bewerten und einzusetzen - Einschätzung der eigenen Kompetenz und Leistungsfähigkeit in realitätsnahen Situationen - Training der Soft Skills, insbesondere Teamfähigkeit - Kommunikation mit Kunden - Präsentationsfähigkeit ",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Software Engineering - Requirements (parallel) - Software Engineering - Design (parallel) - Software Engineering - Softwarequalitätssicherung (parallel, empfehlenswert) - Empfehlenswert ist Praxiserfahrung - Teamtraining und Präsentationstechnik durch die HDA ",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0359-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Software Engineering - Requirements (parallel) - Software Engineering - Design (parallel) - Software Engineering - Softwarequalitätssicherung (parallel, empfehlenswert) - Empfehlenswert ist Praxiserfahrung - Teamtraining und Präsentationstechnik durch die HDA ",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0359-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Algorithmische Modellierung zur Erstellung von Fahrplänen",
        "Modul Nr.": "20-00-0391",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i. d. R. jedes ",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0391-seAlgorithmische Modellierung zur Erstellung von Fahrplänen3 Seminar 2",
            "Lerninhalt": "- Modellierung periodischer Fahrpläne insbesondere im Einsenbahnverkehr- Berücksichtigung von Infrastrukturbedingungen bei der Fahrplanerstellung- Stabilität von Fahrplänen- Fahrplanauskunftssysteme",
            "Qualifikationsziele_Lernergebnisse": "Studierende erwerben in dieser Veranstaltung umfassende Fähigkeiten in algorithmischer Modellierung im Zusammenhang mit Problemstellungen aus dem Bereich Bahnverkehr",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Algorithmen und Datenstrukturen",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Algorithmen und Datenstrukturen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung angegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sicherheitskonzepte im Eisenbahnbetrieb",
        "Modul Nr.": "20-00-0461",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0461-se Sicherheitskonzepte im Eisenbahnbetrieb0 Seminar 2",
            "Lerninhalt": "Grundwissen über Eisenbahnsicherungsanlagen und sicheren Eisenbahnbetrieb. Umsetzung von Sicherheitskonzepten in modernen Eisenbahnsicherungsanlagen.",
            "Qualifikationsziele_Lernergebnisse": "",
            "Voraussetzung_fuer_die_Teilnahme": "Grundkenntnisse über zuverlässige Systeme (z.B. Besuch der VL Computersystemsicherheit) und Interesse am Eisenbahnbetrieb.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0461-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Grundkenntnisse über zuverlässige Systeme (z.B. Besuch der VL Computersystemsicherheit) und Interesse am Eisenbahnbetrieb.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0461-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Trends im Medical Computing",
        "Modul Nr.": "20-00-0468",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0468-seAktuelle Trends im Medical Computing3 Seminar 2",
            "Lerninhalt": "- Selbstständiges Studium aktueller Conference und Journal Papers aus dem Bereich Medical Imaging zu einem ausgewählten Thema im Bereich grundlegender Methoden.- Kritische Auseinandersetzung mit dem behandelten Thema- Eigene weiterführende Literaturrecherchen- Erstellen eines Vortrags (schriftliche Ausarbeitung und Folienpräsentation) über die behandelte Thematik- Präsentation des Vortrags vor Publikum mit heterogenem Vorwissen- Fachliche Diskussion über die behandelte Thematik nach dem Vortrag- Medizinische Anwendungsfelder sind u.a. Onkologie, Orthopädie, navigierte ChirurgieBehandelte Methoden umfassen u.a.: Segmentierung, Registrierung, Visualisierung, Simulation, Navigation und Tracking.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten.Sie lernen die wesentlichen Aspekte der untersuchten Arbeiten zu erkennen und auf verständliche Weise einem heterogenen Publikum vorzutragen. Dabei wenden sie verschiedene Präsentationstechniken an. Nach dem Vortrag können die Studierenden aktiv eine Fachdiskussion zu dem präsentierten Thema leiten und bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Bachelor ab 4. Semester, Master ab 1. Semester.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Bachelor ab 4. Semester, Master ab 1. Semester.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird zu Beginn der Veranstaltung bekanntgegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Skalenraum- und PDE-Methoden in der Bildanalyse und -verarbeitung",
        "Modul Nr.": "20-00-0469",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0469-seSkalenraum- und PDE-Methoden in der Bildanalyse und -verarbeitung3 Seminar 2",
            "Lerninhalt": "Bildanalyse und -verarbeitung beschäftigen sich mit der Untersuchung von Bildern und der Anwendung bestimmer Aufgaben auf Bilder, wie Verbesserung, Rauschunterdrückung, Schärfung und Segmentierung. In diesem Kurs werden häufig verwendete mathematische Methoden vorgestellt und diskutiert. Der Schwerpunkt liegt dabei auf der axiomatischen Modellwahl, deren mathematischen Eigenschaften und dem praktischen Nutzen.Stichwörter:- Filterung (Kantenerkennung, Verbesserung, Wiener, Fourier, ...)- Bilder & Beobachtungen: Skalenraum, Regularisierung, Distributionen- Objekte: Differenzstruktur, Invarianten, Feature-Erkennung- Tiefenstruktur: Katastrophen und Multi-Skalen-Hierarchie- Variationsmethoden und Partielle Differentialmethoden: Perona-Malik, anisotrope Diffusion, Total Variation, Mumford-Shah, Chan-Vese, geometrische partielle Differentialgleichungen, Level-Sets.- Kurvenevolution: Normalenbewegung, mittlere Krümmungsbewegung, euklidische Verkürzungsbewegung.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch der Veranstaltung beschreiben Studierende die Grundkonzepte sowie grundlegenden mathematische Modelle und Methoden der Bildanalyse und -verarbeitung. Sie erklären wichtige Verfahren zu Skalenraum- sowie zu PDE-Ansätzen und können damit repräsentative Fachbeiträge beschreiben, beurteilen, und transferieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Da Bildanalyse und -verarbeitung eine Mischung aus verschiedenen Disziplinen, wie Physik, Mathematik, Vision, Informatik und Engineering, ist, ist dieser Kurs gezielt auf ein breites Publikum zugeschnitten. Daher werden nur Grundkenntnisse in Analysis angenommen. Weitere notwendige mathematische Werkzeuge werden in den Sitzungen skizziert.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Da Bildanalyse und -verarbeitung eine Mischung aus verschiedenen Disziplinen, wie Physik, Mathematik, Vision, Informatik und Engineering, ist, ist dieser Kurs gezielt auf ein breites Publikum zugeschnitten. Daher werden nur Grundkenntnisse in Analysis angenommen. Weitere notwendige mathematische Werkzeuge werden in den Sitzungen skizziert.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Main:- B. M. ter Haar Romeny, Front-End Vision and Multi-scale Image Analysis, Dordrecht, Kluwer Academic Publishers, 2003.Recommended:- T. Lindeberg: Scale-Space Theory in Computer Vision, Dordrecht, Kluwer Academic Publishers, 1994.- J. Weickert: Anisotropic Diffusion in Image Processing, Teubner-Verlag, Stuttgart, Germany, 1998.- G. Aubert & P. Kornprobst: Mathematical problems in image processing: Partial Differential Equations and the Calculus of Variations (second edition), Springer, Applied Mathematical Sciences, Vol 147, 2006.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Algorithmen zum Graphendesign",
        "Modul Nr.": "20-00-0518",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i. d. R. jedes ",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0518-seAlgorithmen zum Graphendesign 3 Seminar 2",
            "Lerninhalt": "- Algorithmen zur Einbettung von Graphen in die Ebene- Mathematische Formalisierung ästhetischer Zeichenkriterien- VLSI Design- Algorithmen und NP-Vollständigkeitsresultate bezügl. Einbettungen von Graphen in die Ebene mit Nebenbedingungen",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende erfolgreich diese Veranstaltung besucht haben,- können sie Diagrammdarstellungsprobleme als algorithmische Fragestellungen modellieren- können sie ästhetischer Fragestellungen als Probleme algorithmischer Natur modellieren- verstehen sie algorithmische Fragestellungen im VLSI-Schaltkreisentwurf",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Vorlesung über Algorithmen",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Vorlesung über Algorithmen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Semantik Visualisierung",
        "Modul Nr.": "20-00-0542",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch und English",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0542-seSemantik Visualisierung 3 Seminar 2",
            "Lerninhalt": "Eigenständige wissenschaftliche Ausarbeitung eines in der Forschung aktuellen Themas aus dem Bereich Semantik Visualisierung-Eigene Literaturrecherchen, angeleitet von Betreuer-Interpretation und Einordnen der Ergebnisse der Literaturarbeit, zusammen mit Betreuer-Erstellen einer schriftlichen Ausarbeitung zu dem gewählten Thema (Deutsch oder Englisch), angeleitet vom Betreuer-Erstellen eines Vortrages zu der ausgearbeiteten Thematik, angeleitet von Betreuer-Halten des Vortrages vor einem FachpublikumFeedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, Präsentationstechniken) und zur Fachdiskussion",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten und dieses wissenschaftlich beschreiben. Sie lernen diverse Techniken und Ressourcen der Literaturrecherche kennen und können diese auch für weitere Arbeiten einsetzen. Des Weiteren werden die Studierenden mit praktischen und aktuellen Themen aus der angewandten Forschung konfrontiert und lernen dabei interessante Themengebiete kennen.Die schriftliche Ausarbeitung ermöglicht die wissenschaftliche Wiedergabe in Form von Schrift, während die Präsentation vor einem Fachpublikum die mündliche Wiedergabe fördert. Somit lernen die Studierenden ein Thema zu recherchieren, schriftlich auszuarbeiten und zu präsentieren.Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Besuch der Vorlesung Visual Computing",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Besuch der Vorlesung Visual Computing",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Forschungsseminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation",
        "Modul Nr.": "20-00-0549",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0549-seForschungsseminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation4 Seminar 3",
            "Lerninhalt": "Das Forschungsseminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation erarbeitet aktuelle Fragstellungen, die als hoch-relevant für die zukünftige Entwicklung der genannten Themenfelder eingeschätzt werden. Es umfasst das Studium, die kritische Analyse und Diskussion, das Zusammenfassen und die Präsentation ausgewählter erstklassiger Forschungsbeiträge. Ein Einblick in wissenschaftliche Arbeitsweise wird vermittelt. Ein Kurzreferat und ein abschließendes Referat sowie eine schriftliche Ausarbeitung werden erstellt.Die Themen des Forschungsseminars speisen sich aus den aktuellen Forschungsthemen der Arbeitsgruppe SEEMOO.Lernziele:- Eigenständiges Einarbeiten in ein Thema auf dem Gebiet Kommunikationsnetze, Sicherheit, Mobilität und Drahtloser Kommunikation (i.d.R. englischsprachig)- Eigene darüber hinausgehende Literaturrecherchen- Interpretation und Einordnen der Ergebnisse der Literaturarbeit- Erstellen eines einführenden und eines vertiefenden Vortrags über die Thematik einschließlich Folienpräsentationen- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen- Fachdiskussion nach jedem Vortrag- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, Präsentationstechniken) und zur Fachdiskussion- Kennen des wissenschaftlichen Arbeitsprozesses und Publikationsprozesses",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit selbstständig wissenschaftlich neue Themen zu erschließen. Sie haben ein tiefgreifendes Verständnis ausgewählter Basismechanismen, Methoden und Anwendungen in dem bearbeiteten Themenfeld erworben. Arbeitstechniken wie ausführliche Literaturrecherche, kritische Diskussion und Analyse wissenschaftlicher Artikel und die Presentation der erzielten Arbeitsergebnisse werden von den Studierenden beherrscht. Die Studierenden können ihre Arbeit vor einem kritischen Fachpublikum verteidigen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets SEEMOO",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets SEEMOO",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation",
        "Modul Nr.": "20-00-0582",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0582-seSeminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation3 Seminar 2",
            "Lerninhalt": "Das Seminar zu Netzen, Sicherheit, Mobilität und Drahtloser Kommunikation erarbeitet aktuelle Fragestellungen auf den genannten Gebieten. Unter Anleitung der Dozenten umfasst es das Studium, die kritische Analyse und Diskussion, das Zusammenfassen und die Präsentation ausgewählter Forschungsbeiträge. Ein Kurzreferat und ein abschließendes Referat sowie eine schriftliche Ausarbeitung werden erstellt.Die Themen des Seminars speisen sich aus den aktuellen Forschungsthemen der Arbeitsgruppe SEEMOO.Lernziele:- Eigenständiges Einarbeiten in ein Thema auf dem Gebiet Kommunikationsnetze, Sicherheit, Mobilität und Drahtloser Kommunikation (i.d.R. englischsprachig)- Darüber hinausgehende Literaturrecherchen, angeleitet von Betreuer- Interpretation und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer- Erstellen eines einführenden und eines vertiefenden Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet von Betreuer- Halten der beiden Vorträge vor einem Publikum mit heterogenem Vorwissen- Fachdiskussion nach jedem Vortrag- Feedback an die Vortragenden zu den Vorträgen (u.a. betreffend Rhetorik, Präsentationstechniken) und zur Fachdiskussion",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit unter Anleitung wissenschaftlich zu arbeiten. Sie kennen die grundlegenden Techniken der wissenschaftlichen Literaturarbeit und können diese für ein definiertes Thema anwenden. Sie haben ein mitteltiefes Verständnis ausgewählter Basismechanismen, Methoden und Anwendungen in dem bearbeiteten Themenfeld. Die Studierenden können dieses erworbene Wissen einem heterogenen Publikum verständlich präsentieren und die technischen Details des bearbeiteten Themas erläutern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets SEEMOO",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets SEEMOO",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Text Analytics",
        "Modul Nr.": "20-00-0596",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0596-seText Analytics 3 Seminar 2",
            "Lerninhalt": "Die Seminarreihe beschäftigt sich mit aktuellen Themen in der automatischen Sprachverarbeitung. Es werden grundlegende Methoden und Technologien zur Analyse geschriebener, natürlicher Sprache vorgestellt, wobei der Schwerpunkt des Seminars in jedem Semester neu gesetzt wird.Weitere Informationen: https://www.ukp.tu-darmstadt.de/teaching/courses/regular-seminar/",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie- aktuelle Forschungsfragen zum Seminarthema benennen und erläutern,- wissenschaftliche Veröffentlichungen verstehen, kritisch beurteilen und untereinander diskutieren,- ein Forschungsthema eigenständig aufarbeiten und- dieses der Gruppe vorstellen und auf Rückfragen und Diskussionsbeiträge eingehen.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekanntgegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittene Themen in der Computergraphik",
        "Modul Nr.": "20-00-0604",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0604-seFortgeschrittene Themen in der Computergraphik3 Seminar 2",
            "Lerninhalt": "- Grundlagen der wissenschaftlichen Vortragstechnik und Begutachtung- Eigenständiges Einarbeiten in aktuelle Publikationen in Computergraphik (englischsprachig)- Eigene darüber hinausgehende Recherche zur Hintergrund-Literatur, angeleitet von Betreuer- Erstellen eines zweiteiligen Vortrags (Problemstellung und Lösungsansatz) über eine Publikationen einschließlich Folienpräsentation, angeleitet durch Betreuer- Erstellen eines (simulierten) wissenschaftlichen Gutachtens über eine zweite Publikation, angeleitet durch Betreuer- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen- Führung der Fachdiskussion nach beiden Vortragsteilen- Aktive Teilnahme an den Fachdiskussionen, sowie Feedback an die Vortragenden",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in aktuelle Themen der Computergraphik anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie können die wesentlichen Beiträge der untersuchten Publikationen erkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand präsentieren, unter Berücksichtigung von Prinzipien des guten wissenschaftlichen Vortrags. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten. Weiterhin sind sie in der Lage ein wissenschaftliches Gutachten über eine aktuelle Publikation anzufertigen, welches den üblichen Standards des wissenschaftlichen Begutachtungsprozesses genügt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Teilnehmer sollten Grundkenntnisse in Computergraphik besitzen (z.B. durch Besuch von Graphische Datenverarbeitung I).",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Teilnehmer sollten Grundkenntnisse in Computergraphik besitzen (z.B. durch Besuch von Graphische Datenverarbeitung I).",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "aktuelle Publikationen, überwiegend des vergangenen Jahres",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Smart City",
        "Modul Nr.": "20-00-0619",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0619-seSeminar Smart City 3 Seminar 2",
            "Lerninhalt": "Die rasche Urbanisierung stellt Städt zunehmend vor komplexe Heruasforderungen, die sowohl sozio-ökonomischer, umweltpolitischer, infrastruktureller und organisierender Natur sind.Im Seminar lernen Studenten verschiedene Ansätze kennen mit diesen Herausforderungen umzugehen, u.a. Verkehrsfluss vorhersage, Analyse von Umwelt Daten, Katastrophenschutz.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten erlernen grundsätzliche wissenschaftliche Arbeitsweisen im Umgang mit bestehender Literatur zu Smart City Forschung. Weiterhin erhalten die Studenten einen guten Überblick über das Themenfeld Smart City.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "verschieden",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar - Softwaresicherheit für mobile Endgeräte",
        "Modul Nr.": "20-00-0641",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "5 Prüfungsform",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0641-se Seminar - Softwaresicherheit für mobile Endgeräte0 Seminar 2",
            "Lerninhalt": "Das Ziel dieses Seminars ist eine Verbindung zwischen zwei aktuellen Themen herzustellen: Das erste Thema betrifft Sicherheit-Lösungen und bekannte Schwachstellen auf modernen mobilen Endgeräten. Das zweite Thema ist die Programm-Analyse für Low-Level-Sprachen, z.B. Java oder Android Dalvik Bytecode. Neuere Forschungsartikel aus diesen beiden Bereichen werden im Seminar präsentiert. Ein Teil des Seminars wird in Form einer Diskussion stattfinden, wie Techniken aus dem Bereich Programm-Analyse helfen können, die Sicherheit auf mobilen Geräten zu verbessern.",
            "Qualifikationsziele_Lernergebnisse": "Kenntnisse von Methoden und aktuellen Forschungsfragestellungen bzgl. Software-Sicherheit für mobile Endgeräte; Verbesserung der Fähigkeiten zum Lesen und Verstehen wissenschaftlicher Artikel; Fähigkeit wissenschaftliche Ergebnisse als solche zu erkennen und inhaltlich zu bewerten; Fähigkeit über wissenschaftliche Arbeiten und Ergebnisse schriftlich zu berichten; Verbesserung der Fähigkeit zum Präsentieren und Diskutieren wissenschaftlicher Projekte und Ergebnisse",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Programmierkenntnisse in Java. Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0641-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Programmierkenntnisse in Java. Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0641-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittene Themen in Computer Vision und Maschinellem Lernen",
        "Modul Nr.": "20-00-0645",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0645-seFortgeschrittene Themen in Computer Vision und Maschinellem Lernen3 Seminar 2",
            "Lerninhalt": "- Grundlagen der wissenschaftlichen Vortragstechnik und Begutachtung- Eigenständiges Einarbeiten in aktuelle Publikationen in Computer Vision oder Maschinellem Lernen (englischsprachig)- Eigene darüber hinausgehende Recherche zur Hintergrund-Literatur, angeleitet von Betreuer- Erstellen eines zweiteiligen Vortrags (Problemstellung und Lösungsansatz) über eine Publikationen einschließlich Folienpräsentation, angeleitet durch Betreuer- Erstellen eines (simulierten) wissenschaftlichen Gutachtens über eine zweite Publikation, angeleitet durch Betreuer- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen- Führung der Fachdiskussion nach beiden Vortragsteilen- Aktive Teilnahme an den Fachdiskussionen, sowie Feedback an die Vortragenden",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in aktuelle Themen der Computer Vision und/oder des Maschinellen Lernens anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie können die wesentlichen Beiträge der untersuchten Publikationen erkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand präsentieren, unter Berücksichtigung von Prinzipien des guten wissenschaftlichen Vortrags. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten. Weiterhin sind sie in der Lage ein wissenschaftliches Gutachten über eine aktuelle Publikation anzufertigen, welches den üblichen Standards des wissenschaftlichen Begutachtungsprozesses genügt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Teilnehmer sollten Grundkenntnisse in Computer Vision, sowie idealerweise maschinellem Lernen besitzen (z.B. durch Besuch von Computer Vision I, Statistisches Maschinelles Lernen).",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Teilnehmer sollten Grundkenntnisse in Computer Vision, sowie idealerweise maschinellem Lernen besitzen (z.B. durch Besuch von Computer Vision I, Statistisches Maschinelles Lernen).",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Aktuelle Publikationen, überwiegend des vergangenen Jahres",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Mobile Security",
        "Modul Nr.": "20-00-0652",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0652-seMobile Security 3 Seminar 2",
            "Lerninhalt": "In diesem Seminar werden verschiedene Sicherheitsaspekte von mobilen Endgeräten (mit Fokus auf Smartphones) analysiert und diskutiert. Die Studenten werden eine Anzahl aktueller wissenschaftlicher Publikationen zu einem bestimmten Thema in Form einer Seminararbeit zusammenfassen, vergleichen und bewerten. Zusätzlich wird jeder Teilnehmer am Ende des Semsters seine Seminararbeit vorstellen.Mögliche Themen sind unter anderem:- Sicherheitsmodelle von aktuellen mobilen Betriebssystemen (z.B. Android, iOS, Windows Phone, MeeGo, Symbian, RIM)- Sicherheitsanalyse und Vergleich von aktuellen App Store Modellen- Mobile Endgeräte im Unternehmenseinsatz- Sicherheitserweiterungen für Android- Kernel Sicherheit- Applikationssicherheit (z.B. mobile Malware und Laufzeitangriffe)- Datenschutz-relevante Aspekte von mobilen Endgeräten- Sicherheit von mobilen Netzwerken",
            "Qualifikationsziele_Lernergebnisse": "Dieses Seminar behandelt verschieden Themen aus dem Bereich mobiler Sicherheit mit Fokus auf Smartphones. Durch die erfolgreiche Teilnahme erhalten Studenten detaillierte Kenntnisse über Sicherheit und Datenschutz in mobilen Betriebssystemen, Geräten, Infrastrukturen und Anwendungen. Außerdem lernen sie sich in aktuelle wissenschaftliche Themengebiete einzuarbeiten und ihre Ergebnisse sowohl schriftlich als auch mündlich zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen der Informatik",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen der Informatik",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Computergestützte Planung und Navigation in der Medizin",
        "Modul Nr.": "20-00-0677",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0677-seComputergestützte Planung und Navigation in der Medizin3 Seminar 2",
            "Lerninhalt": "- Selbstständiges Studium aktueller Konferenz- und Journal-Papers aus dem Bereich Medical Imaging zu einem ausgewählten Thema im Bereich der Planung und chirurgischen Navigation.- Kritische Auseinandersetzung mit dem behandelten Thema- Eigene weiterführende Literaturrecherchen- Erstellen eines Vortrags (schriftliche Ausarbeitung und Folienpräsentation) über die behandelte Thematik- Präsentation des Vortrags vor Publikum mit heterogenem Vorwissen- Fachliche Diskussion über die behandelte Thematik nach dem VortragBehandelte Methoden, die in Zusammenhang mit der Operationsplanung und navigierten Chirurgie stehen sind u.a.: Segmentierung, Registrierung, Visualisierung, Simulation, Navigation und Tracking.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten.Sie lernen die wesentlichen Aspekte der untersuchten Arbeiten zu erkennen und auf verständliche Weise einem heterogenen Publikum vorzutragen. Dabei wenden sie verschiedene Präsentationstechniken an. Nach dem Vortrag können die Studierenden aktiv eine Fachdiskussion zu dem präsentierten Thema leiten und bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Bachelor ab 4. Semester, Master ab 1. Semester.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Bachelor ab 4. Semester, Master ab 1. Semester.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird zu Beginn der Veranstaltung bekanntgegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Symbolische Ausführung",
        "Modul Nr.": "20-00-0702",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0702-se Symbolische Ausführung 0 Seminar 2",
            "Lerninhalt": "Symbolische Ausführung von Programmen ist eine fundamentale Analysetechnik, die u.a. die Basis von Testgenerierung, Compileroptimierung, Verifikation oder Visualisierung darstellt. In den letzten Jahren wurden darin bedeutende Fortschritte erzielt. Im Seminar werden die wichtigsten klassischen und neuen Arbeiten zur symbolischen Ausführung vorgestellt.",
            "Qualifikationsziele_Lernergebnisse": "Verstehen was die Möglichkeiten und Grenzen dieser fundamentalen Programmanalysetechnik sind.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0702-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0702-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Themen zu Secure Usage",
        "Modul Nr.": "20-00-0712",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0712-se Aktuelle Themen zu Secure Usage0 Seminar 2",
            "Lerninhalt": "Bei der Verarbeitung vertraulicher Daten müssen üblicherweise Regularien beachtet werden, die den Zugriff auf Daten einschränken und kontrollieren. Eine Art, solche Regularien zu formulieren, sind Richtlinien zur Zugriffskontrolle (z. B. Chinese Wall). Nutzungsrichtlinien gehen über Kontrollrichtlinien hinaus, indem sie nicht nur die Zugriffsrechte einschränken, sondern auch die Nutzungsbedingungen (z. B. für welchen Zweck, wie oft, in welchem Zeitraum?). Zur Durchsetzung derartiger Regularien werden geeignete Mechanismen benötigt, insbesondere im Kontext von nicht vertrauenswürdigem Code.In diesem Seminar werden aktuelle Forschungsartikel präsentiert, die sich mit Sprachen für Sicherheitsrichtlinien, statischer Verifikation für Richtlinienkonformität und Durchsetzungsmechanismen zur Laufzeit befassen.",
            "Qualifikationsziele_Lernergebnisse": "Kenntnisse von Methoden und aktuellen Forschungsfragestellungen zum Thema Nutzungskontrolle; Verbesserung der Fähigkeiten zum Lesen und Verstehen wissenschaftlicher Artikel; Fähigkeit wissenschaftliche Ergebnisse als solche zu erkennen und inhaltlich zu bewerten; Fähigkeit über wissenschaftliche Arbeiten und Ergebnisse schriftlich zu berichten; Verbesserung der Fähigkeit zum Präsentieren und Diskutieren wissenschaftlicher Projekte und Ergebnisse",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0712-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0712-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Angewandte Themen der Computergraphik",
        "Modul Nr.": "20-00-0724",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0724-seAngewandte Themen der Computergraphik3 Seminar 2",
            "Lerninhalt": "Ausgewählte aktuelle Arbeiten aus Forschung und Literatur werden zur Bearbeitung ausgegeben.Die Arbeiten stammen aus folgenden Feldern der Computergraphik:- Visualisierung / Rendering- Simulation- Geometrieverarbeitung und Modellierung- Semantik und 3D",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung einen Ausschnitt an aktuellen Themen der Computergraphik. Sie können sich selbständig den Inhalt einer Veröffentlichung erarbeiten, die Problemstellung und den Lösungsansatz erkennen und präsentieren. Weiter sind sie in der Lage, Verbesserungspotenzial in den Arbeiten zu analysieren und darzustellen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Vorkenntnisse in GDV oder Geom. Methoden CAD/CAE sind vorteilhaft",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Vorkenntnisse in GDV oder Geom. Methoden CAD/CAE sind vorteilhaft",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekanntgegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Cyber Security Seminar",
        "Modul Nr.": "20-00-0756",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0756-seCyber Security Seminar 3 Seminar 2",
            "Lerninhalt": "Cyber-Sicherheit ist maßgeblich, um aktuelle Verfügbarkeit und Stabilität sicherzustellen, nicht nur von Internet-Anwendungen und Dienstleistungen, sondern auch von einer breiten Palette von Systemen, die mit dem Internet verbunden sind, wie Kraftwerke, Wasserversorgung und mehr. Zentral für Cyber-Sicherheit sind -Advanced Persistent Threat' (APT) Attacken. APT-Angriffe sind in der Regel aus einer Reihe von Schwachstellen, welche auf eine raffinierte Weise kombiniert sind.In diesem Seminar untersuchen wir die Grundbausteine, welche die APT-Attacken sowie die Techniken und Methoden verwenden, um diese anzuwenden. Insbesondere werden wir Themen behandeln wie: Sicheres Routing, anonyme Kommunikation, Malware und Botnets, Cloud-Sicherheit, die Sicherheit von Netzwerktechnologien (SDN und andere), Datenschutz, Sicherheit in Sozialen Netzwerken, Denial-of-Service, Angriffe auf wichtige kryptographische Protokolle, verdeckte Kommunikation, SCADA Sicherheit (Steuerungsnetzwerke) und Funk-Sicherheit.Das Seminar wird die Erkennung und Vermeidung solcher Angriffe untersuchen sowie in einem kooperativen Ansatz die Erkennung von Angriffen betrachten. Wir werden dabei aktuelle (vorgegebene) Forschungsergebnisse im Bereich Cyber-Sicherheit und APTs diskutieren.Studenten wählen ein Paper aus einer demnächst auf dieser Seite verfügbaren Liste. Sie können auch ein anderes Paper vorschlagen, solange es innerhalb der Bandbreite dieses Seminars liegt und vom Dozenten zugelassen wird. Die Veröffentlichungen stammen meistens aus führenden Sicherheitskonferenzen (IEEE Security and Privacy, ACM CCS, Usenix Security, Esorics, NDSS) und Zeitschriften (ACM TISSEC, IEEE TDSC).Jeder Student soll mit dem Dozent per E-Mail (auf FCFS Basis) einen Termin für die Vorstellung des Papers sowie einen Vortrag vereinbaren. Eine Woche vor der Präsentation sendet der Student eine Kurzfassung sowie die Präsentationsfolien an den Dozenten; anhand dieser erläutert der Student sein Paper den anderen Seminarteilnehmern und diskutiert es mit Ihnen.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über mehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen, wobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Kenntnisse in Networking, Sicherheit, Kryptographie",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Kenntnisse in Networking, Sicherheit, Kryptographie",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Eine erste Liste der Themen wird noch zum Beginn des neuen Semesters bekanntgegeben. Eigene Themen können ebenso vorgeschlagen werden.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Decision Procedures",
        "Modul Nr.": "20-00-0774",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0774-se Decision Procedures 0 Seminar 2",
            "Lerninhalt": "Automatisches Beweisen, insbesondere SMT, sind grundlegende Techniken für die statische Analyse von Software. Sie werden in einer Vielzahl von statischen Analysewerkzeugen, wie z.B. in SDV (Microsoft), VCC oder Krakatoa, eingesetzt.Damit sie jedoch sinnvoll und erfolgreich in der Praxis angewendet werden können, müssen sie in der Lage sein Probleme zu behandeln für deren Lösung lineare und nicht-lineare Arithmetik, Bitvektoren, Arrays, quantifizierte Formeln und weitere Theorien notwendig sind.In diesem Seminar werden wir uns mit aktuellen (state-of-the-art) Entscheidungsprozeduren für diese Theorien beschäftigen, sowie der Frage nachgehen wie diese kombiniert werden können und deren Realisierung in Beweisern wie Z3.",
            "Qualifikationsziele_Lernergebnisse": "Erwerb von Wissen über EntscheidungsprozedurenErwerb der Fähigkeit sich in ein komplexes Thema einzuarbeitenErwerb der Fähigkeit Forschungsarbeiten (Konferenzbeiträge, Journalartikel) zu lesen und zu verstehenErwerb der Fähigkeit komplexe Themen anderen Studierenden verständlich zu erklärenVortragskompetenz",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlegendes Wissen in Logik erster Stufe und zugehöriger KalküleInteresse und Neugier am Thema",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0774-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlegendes Wissen in Logik erster Stufe und zugehöriger KalküleInteresse und Neugier am Thema",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0774-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar: Aktuelle Werkzeuge für sprachbasierte Sicherheit",
        "Modul Nr.": "20-00-0779",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0779-seSeminar: Aktuelle Werkzeuge für sprachbasierte Sicherheit3 Seminar 2",
            "Lerninhalt": "- Eigenständiges Einarbeiten in ein aktuelles Thema aus dem Bereich Werkzeuge für sprachbasierte Sicherheit anhand von bereitgestellten wissenschaftlichen Arbeiten (englischsprachig)- Eigene darüber hinausgehende Literaturrecherchen, angeleitet durch Betreuer- Reflektion und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer- Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet durch Betreuer- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen- Fachdiskussion basierend auf dem Vortrag- Feedback an die Vortragenden zu den Vorträgen (betreffend u.a. Rhetorik, Präsentationstechnik) und zur Fachdiskussion",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in ein aktuelles Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über mehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen, wobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Automatische Code Generierung",
        "Modul Nr.": "20-00-0790",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0790-se Automatische Code Generierung0 Seminar 2",
            "Lerninhalt": "- Beispiele von Domänen spezifischen Sprachen- Automatisches Differenzieren- Automatische Erzeugung für an bestimmte Hardwarearchitekturen angepassten Code",
            "Qualifikationsziele_Lernergebnisse": "- Grundkenntnisse über die Entwicklung und Verwendung von DSL.- Kennenlernen einiger Frameworks für DSL und zur Unterstützung des Model Driven Software Developments (MDSD).- Grundlagen des automatischen Differenzierens und dessen Implementierung",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Grundlagen der Informatik 3- Grundkenntnisse der Differentialalgebra im Hinblick auf Ableitungen (Kettenregel, Gradienten, Jacobi-Matrix)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0790-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Grundlagen der Informatik 3- Grundkenntnisse der Differentialalgebra im Hinblick auf Ableitungen (Kettenregel, Gradienten, Jacobi-Matrix)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0790-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Typsysteme von Programmiersprachen",
        "Modul Nr.": "20-00-0796",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0796-se Typsysteme von Programmiersprachen0 Seminar 2",
            "Lerninhalt": "Typsysteme sind formale Methoden, die sicherstellen, dass sich Programme gemäß einer Spezifikation korrekt verhalten. Ihr Anwendungsgebiet ist breit gefächert und umfasst bspw. Softwareentwicklung, Programmiersprachendesign und IT Sicherheit.Dieses Seminar beschäftigt sich mit grundlegenden und aktuellen Forschungsthemen zu Typsystemen, zum Beispiel Dependent Types, Typinferenz, Verfahren zur Typprüfung,constraint-basierte Ansätze usw.",
            "Qualifikationsziele_Lernergebnisse": "Neben praktischen Erfahrungen im wissenschaftlichen Arbeiten erlangen dieStudierenden ein tieferes Verständnis für aktuelle Entwicklungen undHerausforderungen in der Forschung an Typsystemen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundkenntnisse in Mathematik und formalen Methoden.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0796-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundkenntnisse in Mathematik und formalen Methoden.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0796-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seitenkanalangriffe gegen Software",
        "Modul Nr.": "20-00-0798",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0798-se Seitenkanalangriffe gegen Software0 Seminar 2",
            "Lerninhalt": "In diesem Seminar sollen Forschungsartikel bezüglich verschiedener Aspekte von Seitenkanalangriffen gegen Software sowie entschpechender Gegenmaßnahmen diskutiert werden; so beispielsweise:- Seitenkanalangriffe gegen kryptographische Software,- Seitenkanalangriffe gegen Webanwendungen,- Seitenkanalangriffe gegen Betriebssysteme,- Seitenkanalangriffe auf mobile Endgeräte,- Seitenkanalangriffe in der Cloud.Seitenkanäle sind indirekte, unbeabsichtigte Informationsflüsse, die durch die physikalische Ausführung eines Computerprogramms aufgedeckt werden. Beispiele hierfür sind Programmlaufzeit, Cache-Verhalten, Stromverbrauch, elektromagnetische Ausstrahlung usw. Da solche unbeabsichtigte Informationsflüsse mit geheimen Dateien wie z. B. privaten kryptographischen Schlüsseln korrelieren können, stellen Seitenkanäle ernste Sicherheitsschwachstellen dar. Während eines Seitenkanalangriffs ist der Hacker in der Lage, durch den Seitenkanal aufgedeckte Informationen zu sammeln, sie zu analysieren und anhand dieser Analyse die geheimen Dateien zu rekonstruieren. Da es dank neuer Sicherheitsmechanismen fortwährend schwieriger wird, herkömmliche Sicherheitsschwachstellen wie z. B. Programmfehler auszunutzen, werden Seitenkanäle für Hacker immer interessanter.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Seminar kennen die Studierenden das Konzept von Seitenkanalangriffen gegen Software sowie dazugehörige Beispiele. Sie verstehen die Ernsthaftigkeit der Problematik von Seitenkanälen sowie deren Verbreitung. Die Studierenden verbessern ihre Fähigkeit zum Lesen und Verstehen wissenschaftlicher Artikel, dem Präsentieren wissenschaftlicher Ergebnisse sowie zur Diskussion und Vergleich der Ansätze.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0798-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0798-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Privatheit & Anonymität in einer vernetzten Welt",
        "Modul Nr.": "20-00-0807",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0807-se Privatheit & Anonymität in einer vernetzten Welt0 Seminar 3",
            "Lerninhalt": "Im Rahmen dieses Seminars werden Privatsphäre und Sicherheit sowie Auswirkungen entstehender Technologien wie das -Internet der Dinge' diskutiert. Insbesondere werden neue Bedrohungen sowie verschiedene Angriffstechniken und entsprechende Gegenmaßnahmen betrachtet. Beispiele von Themen sind: wearable privacy, smart cars privacy, device fingerprinting, in-store tracking, HTTP(s) Traffic analysis, privacy leaks in Android-Geräte, data anonymization und differential privacy, transparency-enhancing technologies. Die Seminarteilnehmer bekommen ein Thema zugewiesen, sollen aktuelle Forschungsarbeiten lesen, den weiteren Teilnehmern vorstellen und in einer Seminararbeit zusammenfassen. Das primäre Ziel des Seminars ist es, die Fähigkeit der Studenten zu verbessern, ein wissenschaftliches Thema zu bearbeiten, eine Präsentation ähnlich wie bei einer wissenschaftlichen Konferenz zu halten und eine wissenschaftliche Diskussion zu ausgewählten Privacy-Forschungsthemen (mit-) zu gestalten. Die Studierenden simulieren die verschiedenen Phasen einer wissenschaftlichen Konferenz: Einreichung der Arbeiten, Begutachtung der Arbeiten, Feedback, Einreichung der finalen Version, Präsentation des Papiers und ggf. Sitzungsleitung.",
            "Qualifikationsziele_Lernergebnisse": "Das Seminar richtet sich an Bachelor- und Masterstudenten die sich für das Thema Privatheit in der digitalen Welt interessieren. Sie sollten die Bereitschaft mitbringen, neue veröffentliche Forschungsarbeiten zum Thema \"Privacy\" zu begutachten bzw. zu diskutieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Grundlegendes Verständnis der Computer-Sicherheit und Netzwerkprotokolle könnte hilfreich sein.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0807-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Grundlegendes Verständnis der Computer-Sicherheit und Netzwerkprotokolle könnte hilfreich sein.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0807-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar: Formale Spezifikation und Verifikation",
        "Modul Nr.": "20-00-0914",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0914-se Seminar: Formale Spezifikation und Verifikation0 Seminar 2",
            "Lerninhalt": "- Eigenständiges Einarbeiten in ein Thema aus dem Bereich Formale Spezifikation und Verifikation anhand von bereitgestellten wissenschaftlichen Arbeiten (englischsprachig)- Eigene darüber hinausgehende Literaturrecherchen, angeleitet durch Betreuer- Reflektion und Einordnen der Ergebnisse der Literaturarbeit, angeleitet von Betreuer- Erstellen eines Vortrags über die Thematik einschließlich Folienpräsentationen, angeleitet durch Betreuer- Halten des Vortrags vor einem Publikum mit heterogenem Vorwissen- Fachdiskussion basierend auf dem Vortrag- Feedback an die Vortragenden zu den Vorträgen (betreffend u.a. Rhetorik, Präsentationstechnik) und zur Fachdiskussion",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung können die Studierenden sich eigenständig in ein Thema anhand von wissenschaftlichen Veröffentlichungen einarbeiten. Sie sind mit den verschiedenen Techniken der Literaturrecherche vertraut. Sie können über mehrere wissenschaftliche Arbeiten hinweg Techniken vergleichen und Forschungsergebnisse übergreifend evaluieren. Sie können die wesentlichen Aspekte der untersuchten Arbeiten erkennen und diese kompakt einem Publikum mit heterogenem Vorwissensstand vortragen, wobei sie dabei effektiv verschiedene Präsentationstechniken anwenden. Nach dem Vortrag können die Vortragenden aktiv eine Fachdiskussion zu dem von ihnen präsentierten Thema bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0914-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0914-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderenStudiengängen verwendet werden.",
            "Literatur": "Wird jeweils passend zu den aktuellen Themen bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Grundlagen der Computersicherheit",
        "Modul Nr.": "20-00-0925",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0925-se Grundlagen der Computersicherheit0 Seminar 2",
            "Lerninhalt": "In diesem Seminar sollen Forschungsartikel bezüglich verschiedener Aspekte von Computersicherheit und deren Grundlagen diskutiert werden; die Forschungsartikel behandeln beispielsweise:- Sicherheitsmodelle und Sicherheitseigenschaften,- Angriffe und Angreifermodelle,- Komposition, Abstraktion und Verfeinerung im Kontext von Computersicherheit- Verifizierbare Sicherheit,- Quantifizierte Sicherheit,- Zugriffskontrolle und Verwendungskontrolle,- Sicherheitsmodelle und Sicherheitseigenschaften- Informationsflusskontrolle, und- Sprach-basierte Sicherheit.Die Grundlagen der Computersicherheit umfassen Theorien von Computersicherheit, formale Modelle für diese Theorien und Techniken zur Verifikation von Computersicherheit. Dabei erleichtern Theorien das konzeptuelle Verständnis für Computersicherheit und für Bedrohungen der Computersicherheit. Basierend auf diesem Verständnis bieten formale Modelle ein Gerüst für die Spezifikation der gewünschten Sicherheitseigenschaften, für die Definition des betrachteten Systems und für die eindeutige Definition der Annahmen an die Systemumgebung. Schließlich kann die Erfüllung der spezifizierten Sicherheitseigenschaften durch eine Implementierung des Systems mit Hilfe von Techniken zur Verifikation sicher gestellt werden.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein aktuelle Entwicklungen in den Grundlagen der Computersicherheit mit Bezug zu formalen Methoden zu diskutieren. Des Weiteren, werden die Studierenden ihre Fähigkeit im Lesen und Verstehen wissenschaftlicher Artikel, im Präsentieren wissenschaftlicher Ergebnisse und im Diskutieren und Vergleichen formaler Ansätze der Computersicherheit und derer Implementierung verbessern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0925-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0925-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Privatsphäre-schützende Technologien",
        "Modul Nr.": "20-00-0935",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2.",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0935-se Privatsphäre-schützende Technologien0 Seminar 2",
            "Lerninhalt": "Daten sind das Öl des 21. Jahrhunderts und Benutzer hinterlassen immer mehr digitale Spuren, die von Firmen wie Facebook oder Google, sowie von Geheimdiensten zusammengetragen und ausgewertet werden.In diesem Seminar wollen wir Techniken zum Schutz der Privatsphäre betrachten, die es erlauben sensitive Daten unter Verschlüsselung zu verarbeiten, ohne die Daten selbst Preis zu geben.Es werden sowohl die theoretischen Hintergründe als auch die praktischen Aspekte solcher Lösungen betrachtet.Die Studierenden wählen ein Thema und erhalten dazu ein oder zwei Publikationen, die sie in einer Ausarbeitung schriftlich zusammenfassen und in einem Vortrag vorstellen.Mögliche Themen sind beispielsweise:- Privatsphäre-schützende biometrische Identifikation- Privatsphäre-schützende mobile Anwendungen, z.B. für Standort-abhängige Dienste- Privatsphäre-schützendes Herunterladen von Dateien, z.B. für Medizinische- oder Patent-Datenbanken (Private Information Retrieval)- Privatsphäre-schützendes Finden gemeinsamer Kontakte oder Kunden (Private Set Intersection)- Privatsphäre-schützendes Prüfen der Kreditwürdigkeit (Private Function Evaluation)- Privatsphäre-schützendes Datenbanksystem (Semi-Private Function Evaluation)- Representation von Funktionen als Daten (Universal Circuits)- Oblivious RAM in Privatsphären-schützenden Technologien (ORAM + Secure Computation)- Werkzeuge für Privatsphäre-schützende Anwendungen",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden lernen aktuelle und praktikable Techniken zum Schutz der Privatsphäre.",
            "Voraussetzung_fuer_die_Teilnahme": "Teilnahme an der Veranstaltung \"Einführung in die Kryptographie\" ist von Vorteil, aber nicht unbedingt notwendig.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0935-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Teilnahme an der Veranstaltung \"Einführung in die Kryptographie\" ist von Vorteil, aber nicht unbedingt notwendig.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0935-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Themen zu Nebenläufigkeit und Parallelität",
        "Modul Nr.": "20-00-0960",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0960-se Aktuelle Themen zu Nebenläufigkeit und Parallelität0 Seminar 2",
            "Lerninhalt": "In diesem Seminar werden Forschungsartikel zu verschiedenen Aspekten von Nebenläufigkeit und Parallelität diskutiert; die Forschungsartikel behandeln beispielsweise:- Semantik der Nebenläufigkeit (Interleaving-Sematik, Multicore-Semantik, Weak Memory Models),- Parallele Architekturen (Grundlagen von parallelen Architekturen, symmetrische Multiprozessorsysteme, Massenparallelrechner),- Parallele Programmierung (parallele Programmierungsmodelle, Kommunikation, Synchronisation),- Parallelisierung und Kompilierung (Voll-/Halbautomatische Parallelisierung, Datenabhängigkeiten, Lastverteilung),- Verifikation von nebenläufigen Programmen (Separation Logic, Rely/Guarantee Reasoning).",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein, aktuelle Entwicklungen in den Bereichen Nebenläufigkeit und Parallelität zu diskutieren. Des Weiteren werden die Studierenden ihre Fähigkeiten im Lesen und Verstehen wissenschaftlicher Artikel und im Präsentieren, Diskutieren und Vergleichen wissenschaftlicher Ergebnisse verbessern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0960-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0960-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Zivile Sicherheit",
        "Modul Nr.": "20-00-0961",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0961-se Zivile Sicherheit 0 Seminar 0",
            "Lerninhalt": "Unter dem Begriff \"zivile Sicherheit\" versteht man neben Katastrophenschutz und Terrorismusbekämpfung auch die Aspekte der Sicherheit, die einen direkten Bezug zum Bürger und dessen Alltag aufweisen. Sie ist also auch dann bedroht, wenn der Bürger im täglichen Leben eine latente Unsicherheit hinsichtlich gewöhnlicher Handlungen verspürt.In dieser Veranstaltung werden drei ausgewählte Szenarien der zivilen Sicherheit adressiert, die einen Bezug zur IT haben: Medikamentenhandel über das Internet, Versicherungsbetrug und Geldwäsche sowie Handel mit Antiken aus Raubgrabungen über das Internet. Dabei sind sowohl die Methoden der Betrüger als auch die der Betrugsaufdeckung von Interesse. Basis für diese Themen sind die BMBF Forschungsprogramme zur Wirtschaftskriminalität und zur organisierten Kriminalität. Es sollen Technologien entwickelt, Dunkelfeldforschung betrieben sowie interdisziplinäre Eigenschaften bezüglich beispielsweise Recht und Wirtschaft betrachtet werden.Die Veranstaltung kombiniert Vorlesung und Seminar. Zu Beginn wird eine Einführung in die Thematik gegeben, in welcher unter anderem internationale Sicherheitsstrategien, computerisierte Methoden der Aufdeckung von Betrugsfällen und Aspekte des Datenschutzes behandelt werden.In dem anschließenden Seminar werden einzelne Themen vertieft betrachtet, wie beispielsweise:- Umschlagplätze für Medikamente im Internet- Bildmanipulationen als Grundlage für Versicherungsbetrug- Forensische Erkennung von Identitäten- Ähnlichkeitssuche: Welche Methoden für Bild und Text werden in der Praxis genutzt- Wie schützen sich Auktionsplattformen vor illegalen Angeboten?Die Vertiefung geschieht auf Basis empfohlener Publikationen, von denen ausgehend der Teilnehmer einen Seminarvortrag und eine begleitende Ausarbeitung erstellt und diese mit den übrigen Teilnehmern der Veranstaltung diskutiert.",
            "Qualifikationsziele_Lernergebnisse": "- Erstellen von wissenschaftlichen Kurzvorträgen- Verwendung von Zitaten- Interdisziplinäre Sicherheitsbetrachtung- Einsatz von Methoden der Betrugserkennung",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Hilfreich sind Grundkenntnisse in Internettechnologie und IT Security.Für einzelne Seminarthemen werden in der Veranstaltungen weitere Empfehlungen hinsichtlich der Vorkenntnisse ausgesprochen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0961-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Hilfreich sind Grundkenntnisse in Internettechnologie und IT Security.Für einzelne Seminarthemen werden in der Veranstaltungen weitere Empfehlungen hinsichtlich der Vorkenntnisse ausgesprochen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0961-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "IT in der Grundlehre",
        "Modul Nr.": "20-00-0963",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0963-se IT in der Grundlehre 0 Seminar 2",
            "Lerninhalt": "Ausgewählte IT-basierte Konzepte für Vorlesung sowie Übungs-und Prüfungsbetrieb in Lehrveranstaltungen mit großen, heterogenen Teilnehmergruppen.",
            "Qualifikationsziele_Lernergebnisse": "Nach Besuch der Veranstaltung sind die Studierenden in der Lage, geeignete IT-basierte Konzepte für Vorlesung sowie Übungs-und Prüfungsbetrieb in Lehrveranstaltungen mit großen, heterogenen Teilnehmergruppen zu entwickeln und softwareseitig umzusetzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: FOP",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0963-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: FOP",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0963-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Rigorose und formale Analyse verlässlicher Software",
        "Modul Nr.": "20-00-0975",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0975-se Rigorose und formale Analyse verlässlicher Software0 Seminar 2",
            "Lerninhalt": "Dieses Seminar behandelt Konzepte und Ideen formaler Methoden für eine rigorose Analyse verlässlicher Systeme. Es werden verschiedene Themen angeboten, z.B. statische Analyse und Trace-Analyse, symbolische Ausführung und formale Verifikation nebenläufiger Programme. Beim Einführungstreffen des Seminars werden die zur Verfügung stehenden Themen präsentiert. Jeder Teilnehmer bearbeitet ein Thema unter Aufsicht eines Betreuers. Am Ende des Seminars ist eine schriftliche Ausarbeitung abzugeben und das bearbeitete Thema den übrigen Seminarteilnehmern in einem Vortrag zu präsentieren.Weitere Informationen sind unter https://www.deeds.informatik.tu-darmstadt.de/deeds/teaching/courses/ zu finden.",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, haben Sie - Einblick in die aktuelle Forschung zu formalen Methoden und Software-Verifikation- Fähigkeiten erworben, um selbstständig zu recherchieren, aktuelle Forschungsergebnisse in einer schriftlichen Ausarbeitung kritisch zu bewerten und in einem wissenschaftlichen Vortrag zu präsentieren",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlegendes Verständnis formaler Methoden der InformatikSehr gute Englischkenntnisse (mündlich und schriftlich)Erste Erfahrung im Lesen von wissenschaftlichen ArtikelnKritisches Denken und Interesse an mathematischen Formalismen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0975-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlegendes Verständnis formaler Methoden der InformatikSehr gute Englischkenntnisse (mündlich und schriftlich)Erste Erfahrung im Lesen von wissenschaftlichen ArtikelnKritisches Denken und Interesse an mathematischen Formalismen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0975-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Modellierung und Analyse von Aktoren-basierten Softwaresystemen",
        "Modul Nr.": "20-00-0992",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0992-se Modellierung und Analyse von Aktoren-basierten Softwaresystemen0 Seminar 2",
            "Lerninhalt": "Ansätze zur aktor-basierten Modellierung und formalen Analyse von Softwaresystemen:- Theorie- Modellierungssprachen- Analysen- Werkzeuge",
            "Qualifikationsziele_Lernergebnisse": "- Wissen über das aktor-basierte Programmierparadigma- Wissen über die Modellierung und formale Analyse von Softwaresystemen- Durchdringung und Aufarbeitung von wissenschaftlichen Konferenzbeiträgen und Journalartikeln zum Seminarthema- Verständliche und organisierte Präsentation wissenschaftlicher Artikel",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Interesse in formaler Grundkenntnisse in formalen Methoden und statischer Programmanalyse",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0992-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Interesse in formaler Grundkenntnisse in formalen Methoden und statischer Programmanalyse",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0992-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Parallel Computing",
        "Modul Nr.": "20-00-0994",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0994-se Parallel Computing 0 Seminar 3",
            "Lerninhalt": "Aktuelle Trends in der Parallelverarbeitung, z.B.- Neue Anwendungsfelder (z.B. Deep-Learning)- Neue parallele Programmiermodelle- Entwicklung paralleler Software für Smartphones- GPUs, Manycore-Architecturen- FPGAs- Architekturen für die Post-Moore-Ära- Parallele Dateisysteme- Neue parallele Algorithmen- Exascale-Computing- Cloud-Computing",
            "Qualifikationsziele_Lernergebnisse": "- Kennenlernen aktueller Themen im Bereich Parallelverarbeitung- Literatur auswählen und analysieren- Verständliche Berichte formulieren- Übersichtliche Folien erstellen- Mündlich präsentieren- Anderen Teilnehmern Feedback geben",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Kennnisse in Rechnerarchitektur, Programmierung, Softwaretechnik- Grundlagen paralleler Systeme",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0994-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Kennnisse in Rechnerarchitektur, Programmierung, Softwaretechnik- Grundlagen paralleler Systeme",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0994-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Themen zu Programmsemantiken",
        "Modul Nr.": "20-00-1009",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1009-se Aktuelle Themen zu Programmsemantiken0 Seminar 2",
            "Lerninhalt": "In diesem Seminar werden Forschungsartikel zu verschiedenen Aspekten von Programmsemantiken diskutiert. Beispielthemen beinhalten:- sequentielle Programmsemantiken,- nebenläufige Programmsemantiken,- instrumentierte Programmsemantiken,- Testen von Programmsemantiken, und- Verifikation basierend auf Programmsemantiken.Formale Programmsemantiken werden genutzt um ein klares Verständnis von Eigenschaften von Programm zu erreichen. Neben anderen Vorteilen erlauben solche Semantiken das Design und die Implementierung von Programmanalysen, die genutzt werden können um Eigenschaften von Programmen zu verifizieren. Während die höhere Komplexität von Programmiersprachen (z.B. Unterstützung von nebenläufigen und verteilten Systemen) formale Programmsemantiken noch wünschenswerter machen, führt diese Komplexität zu noch größeren Herausforderungen in der Formalisierung von Programmsemantiken.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein, aktuelle Entwicklungen im Bereich von Programmsemantiken zu diskutieren. Des Weiteren werden die Studierenden ihre Fähigkeiten im Lesen und Verstehen wissenschaftlicher Artikel und im Präsentieren, Diskutieren und Vergleichen wissenschaftlicher Ergebnisse verbessern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten vier Semesterndes Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1009-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten vier Semesterndes Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1009-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Krisen-, Sicherheits- und Friedenstechnologien",
        "Modul Nr.": "20-00-1019",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "90 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1019-se Seminar Krisen-, Sicherheits-und Friedenstechnologien0 Seminar 2",
            "Lerninhalt": "Im Seminar werden fortgeschrittene theoretische Themen des Fachgebiets -Wissenschaft und Technik für Frieden und Sicherheit' (PEASEC) erarbeitet. Basierend auf einer Einführung/Wiederholung der Techniken wissenschaftlichen Arbeitens und einiger Grundlagen werden fortgeschrittene Themen vergeben, die sich an der aktuellen Forschung orientieren. Im Rahmen der Veranstaltung entstehende Arbeiten werden im Anschluss mithilfe eines Review-Verfahrens gegenseitig überprüft und anschließend überarbeitet.- Grundlagen: Friedens-, Konflikt- und Sicherheitsforschungo Friedens- und Konfliktforschungo Sicherheitsforschung und Informationssicherheit- Informatik in Militär, Krieg und Konflikteno Militärische Nutzung von Informatik und Dual-Use-Problematiko Cyberwar: Konflikte im Cyberraum mit Information Warfare, Fake News und Social Botso Terrorismus und terroristische Propaganda in sozialen Medien- Informatik für Friedeno Mensch-Computer-Interaktion für Cyberpeace und zur Friedensförderungo IT im Kontext politischer Aktivisteno Bekämpfung terroristischer Propaganda in sozialen Medien- Sicherheitskritische Mensch-Computer-Interaktiono Usable Safety-Engineering sicherheitskritischer interaktiver Systemeo Recht, Ethik, Kulturo Betriebliche Informationssystemeo Krisenmanagementsysteme und Medizintechniko Warn- und Assistenzsystemeo Soziale Medieno Kooperationssysteme für Einsatzlageno Technologien für freiwillige PartizipationThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und theoretischen Grundkonzepte für Frieden und Sicherheit. Insbesondere lernen sie:- Grundlagen der Friedens-, Konflikt-, und Sicherheitsforschung aus Blickwinkel der Informatik- Herausforderungen der IT-Gestaltung und -Nutzung im Kontext von Frieden und Sicherheit- Methoden zur Entwicklung sicherheitskritischer Mensch-Computer-Interaktion- Selbstständige Auseinandersetzung mit wissenschaftlichen Texten- Verfassen wissenschaftlicher Ausarbeitungen- Begutachtung wissenschaftlicher Texte",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Grundlagen der Informatik oder Grundlagen der Konflikt- und Friedensforschung- Offen für Studierende der Informatik- Offen für Internationale Studien/Friedens- und Konfliktforschung (Naturwissenschaftlich-technische Dimension der Friedens- und Konfliktforschung -IS-MA-7)- Offen für Studierende anderer Fachgebiete, Anrechenbarkeit nach Absprache",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1019-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Grundlagen der Informatik oder Grundlagen der Konflikt- und Friedensforschung- Offen für Studierende der Informatik- Offen für Internationale Studien/Friedens- und Konfliktforschung (Naturwissenschaftlich-technische Dimension der Friedens- und Konfliktforschung -IS-MA-7)- Offen für Studierende anderer Fachgebiete, Anrechenbarkeit nach Absprache",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1019-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Reuter, C. (2018) Sicherheitskritische Mensch-Computer-Interaktion: Interaktive Technologien und Soziale Medien im Krisen- und Sicherheitsmanagement, 660 S., Wiesbaden: Springer Vieweg - im DruckAltmann, J., Bernhardt, U., Nixdorff, K., Ruhmann, I., & Wöhrle, D. (2016) Naturwissenschaft -Rüstung - Frieden - Basiswissen für die Friedensforschung (Vol. 49), Wiesbaden: Springer Vieweg. Flick, U. (2015) Introducing Research Methodology. Sage Publications LtdWeitere Literatur wird in der Veranstaltung je nach gewähltem Thema genannt.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Schutz von verteilten Infrastrukturen und Netzwerken",
        "Modul Nr.": "20-00-1022",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1022-se Schutz von verteilten Infrastrukturen und Netzwerken0 Seminar 2",
            "Lerninhalt": "Das Seminar zum Schutz von verteilten Infrastrukturen und Netzwerken setzt sich aus der strukturierten Arbeit an wissenschaftlichen Veröffentlichungen auseinander. Die Themen befassen sich hierbei mit:- Vertrauen- Privatheit- Resilienzin Infrastrukturen und Netzwerken.",
            "Qualifikationsziele_Lernergebnisse": "Studenten, die an dem Seminar teilnehmen, haben die Chance die Themen durch strukturierte Forschung, näher kennen zu lernen.Ihre Aufgabe wird es sein, aktuelle wissenschaftliche Veröffentlichungen zu verstehen, um deren Beitrag zu erklären. Außerdem muss ein Survey über das bearbeitete Thema verfasst werden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlegendes Verständnis von IT-Sicherheit und verteilten Systemen.Veranstaltungen:Computersystemsicherheit (CSS)Computer-Netzwerke und verteilte Systeme (CNuvS)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1022-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlegendes Verständnis von IT-Sicherheit und verteilten Systemen.Veranstaltungen:Computersystemsicherheit (CSS)Computer-Netzwerke und verteilte Systeme (CNuvS)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1022-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. Informatik Kann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Cyber-Sicherheit, -Krieg, und -Frieden",
        "Modul Nr.": "20-00-1024",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1024-se Seminar Cyber-Sicherheit, -Krieg, und -Frieden0 Seminar 3",
            "Lerninhalt": "Im Seminar werden fortgeschrittene theoretische Themen des Fachgebiets -Wissenschaft und Technik für Frieden und Sicherheit' (PEASEC) erarbeitet. Basierend auf einer Einführung/Wiederholung der Techniken wissenschaftlichen Arbeitens und einiger Grundlagen werden fortgeschrittene Themen vergeben, die sich an der aktuellen Forschung orientieren. Im Rahmen der Veranstaltung entstehende Arbeiten werden im Anschluss mithilfe eines Review-Verfahrens gegenseitig überprüft und anschließend überarbeitet.- Grundlagen: Friedens-, Konflikt- und Sicherheitsforschungo Friedens- und Konfliktforschungo Sicherheitsforschung und Informationssicherheit- Informatik in Militär, Krieg und Konflikteno Militärische Nutzung von Informatik und Dual-Use-Problematiko Cyberwar: Konflikte im Cyberspace mit Information Warfare, Fake News und Social Botso Terrorismus und terroristische Propaganda in sozialen Medien- Informatik für Friedeno Mensch-Computer-Interaktion für Cyberpeace und zur Friedensförderungo IT im Kontext politischer Aktivisteno Bekämpfung terroristischer Propaganda in sozialen Medien- Sicherheitskritische Mensch-Computer-Interaktiono Usable Safety-Engineering sicherheitskritischer interaktiver Systemeo Recht, Ethik, Kulturo Betriebliche Informationssystemeo Krisenmanagementsysteme und Medizintechniko Warn- und Assistenzsystemeo Soziale Medieno Kooperationssysteme für Einsatzlageno Technologien für freiwillige PartizipationThemen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und theoretischen Grundkonzepte für Frieden und Sicherheit. Insbesondere lernen sie:- Grundlagen der Friedens-, Konflikt-, und Sicherheitsforschung aus Blickwinkel der Informatik- Herausforderungen der IT-Gestaltung und -Nutzung im Kontext von Frieden und Sicherheit- Methoden zur Entwicklung sicherheitskritischer Mensch-Computer-Interaktion- Selbstständige Auseinandersetzung mit wissenschaftlichen Texten- Verfassen wissenschaftlicher Ausarbeitungen- Begutachtung wissenschaftlicher Texte",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlagen der Informatik oder Grundlagen der Konflikt- und Friedensforschung",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1024-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlagen der Informatik oder Grundlagen der Konflikt- und Friedensforschung",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1024-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Grundlagen statischer Analysen",
        "Modul Nr.": "20-00-1028",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1028-se Grundlagen statischer Analysen0 Seminar 2",
            "Lerninhalt": "Die Grundlagen statischer Analysen, die zur Implementierung von fortgeschrittenen Qualitäts-und Sicherheitsanalysen gebraucht werden.Exemplarische Auswahl der Themen:- Berechnung von Kontrol- und Datenabhängigkeiten in der Gegenwart von unendlichen Schleifen und nicht reduzierbarer Kontrollflussgraphen.- Slicing von Code- Identifikation von Schleifen in Machinencode- Konstruktion von Aufrufgraphen- Statische Analyse Frameworks (z.B., IDE, IFDS, Reactive Async)- \"Self-Adaptation\" und statische Analysen- Sound(iness)- Specification Mining",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden werden vertraut sein mit den Grundlagen von fortgeschrittenen Analysen und werden in der Lage sein, die Angemessenheit bestimmter Techniken und Algorithmen für konkrete Anwendungsfälle zu beurteilen. Die Studierenden werden weiterhin in der Lage sein fortgeschrittene, technische Themen im Bereich statische Analyse effektiv zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Das Seminar richtet sich an fortgeschrittene Bachelor- und Masterstudierende. Vertrautheit mit den Grundlagen des Compilerbaus (z.B. SSA Form) ist sehr empfehlenswert.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1028-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Das Seminar richtet sich an fortgeschrittene Bachelor- und Masterstudierende. Vertrautheit mit den Grundlagen des Compilerbaus (z.B. SSA Form) ist sehr empfehlenswert.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1028-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sichere Mehrparteienberechnungen",
        "Modul Nr.": "20-00-1030",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1030-se Sichere Mehrparteienberechnungen0 Seminar 2",
            "Lerninhalt": "Mehrparteienberechnungen sind Berechnungen zwischen 2 oder mehr Usern, bei denen jeder User eine Eingabe beiträgt und am Ende alle Benutzer das gleiche Ergebnis berechnen. Im Internet sind solche Berechnungen heutzutage allgegenwärtig: Benutzer und WLAN-Accesspoint haben ein Passwort und möchten einen Schlüssel berechnen, um zukünftige Kommunikation abzusichern. Benutzer einer Kryptowährung wie Bitcoin haben unterschiedliche Versionen aller bisherigen Transaktionen und möchten zusammen herausfinden, welche Version zukünftig verwendet werden soll.Exemplarische Auswahl der Themen:- Was ist sichere Mehrparteienberechnung?- Wie kann man mit blockchains Konsens erreichen?- Kryptographische Bausteine für sichere Mehrparteienberechnung (Garbled Circuits, blockchain, Oblivious Transfer).- Sichere Mehrparteienberechnung zur Verhinderung von Seitenkanalangriffen.",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden lernen die theoretischen Grundlagen sicherer Mehrparteienberechnungen und diverse Anwendungsbereiche im Detail kennen. Sie sind in der Lage, einen wissenschaftlichen Artikel aufzuarbeiten und zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Das Seminar richtet sich an Masterstudierende. Grundlagenvorlesung IT-Sicherheit oder Grundlagenwissen in Kryptografie sind empfehlenswert.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1030-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Das Seminar richtet sich an Masterstudierende. Grundlagenvorlesung IT-Sicherheit oder Grundlagenwissen in Kryptografie sind empfehlenswert.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1030-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Performance Engineering",
        "Modul Nr.": "20-00-1038",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1038-se Performance Engineering 0 Seminar 2",
            "Lerninhalt": "- Architektur & Eigenschaften von shared-memory multiprocessor(SMP) Maschinen- Messbarkeit & Verstaendnis von Performanz auf SMP Maschinen- Erste Erfahrung in der Benutzung von ausgewaehlten Performance Analyse Tools",
            "Qualifikationsziele_Lernergebnisse": "- Verstaendnis der Performanzfaktoren und -indikatoren von SMP Plattformen: Compute Units, Memory Design, Synchronisation Protocols- Verstaendnis der Wichtigkeit vergleichbarer, nachvollziehbarer und reproduzierbarer Messergebnisse",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlagen von C++ und OpenMP",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1038-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlagen von C++ und OpenMP",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1038-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Zero Knowledge Beweissysteme",
        "Modul Nr.": "20-00-1052",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1052-se Zero Knowledge Beweissysteme 0 Seminar 2",
            "Lerninhalt": "Zero Knowledge (ZK) Beweise sind Beweissysteme, mit denen ein Prover einem Verifier gegenüber die Wahrheit von Behauptungen wie z.B. \"Ich kenne eine Lösung für ein Kreuzworträtsel\" beweisen kann, ohne aber die Lösung des Rätsels zu verraten. ZK Beweise finden vielseitige Anwendung in der Kryptographie, beispielsweise im Bereich von sicherer Verschlüsselung und anonymen Kryptowährungen. In diesem Seminar lernen wir verschiedene Arten von ZK Beweissystemen und deren Anwendungsmöglichkeiten kennen.Exemplarische Auswahl der Themen:- Was sind ZK Beweise und welche Varianten gibt es?- Die Fiat-Shamir Transformation und nicht-interaktive Beweissysteme- Groth-Sahai Beweise- ZCash- Succint Arguments of Knowledge (SNARKs) und ihre Anwendungen- Das Verschlüsselungsverfahren von Naor und Yung",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden lernen die theoretischen Grundlagen von Zero Knowledge Beweissystemen und diverse Anwendungsbereiche im Detail kennen. Sie sind in der Lage, einen wissenschaftlichen Artikel aufzuarbeiten und zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Das Seminar richtet sich an Masterstudierende. Grundlagenvorlesung IT-Sicherheit oder Grundlagenwissen in Kryptografie sind empfehlenswert.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1052-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Das Seminar richtet sich an Masterstudierende. Grundlagenvorlesung IT-Sicherheit oder Grundlagenwissen in Kryptografie sind empfehlenswert.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1052-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Wertbasierte Qualitätskontrolle",
        "Modul Nr.": "20-00-1055",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1055-se Wertbasierte Qualitätskontrolle 0 Seminar 2",
            "Lerninhalt": "Mit der Systementwicklung werden häufig primär wirtschaftliche Ziele (z. B. Kosten, Effizienz) oder technische Kriterien (z. B. korrekte Funktionalität, Stabilität, Wartbarkeit) verfolgt. Durch einen Systemeinsatz sind in der Regel aber weitere Werte betroffen, z.B. Gesundheit. informationelle Selbstbestimmung. Solche Werte werden auch in der Systemgestaltung berücksichtigt. Allerdings bleibt der Bezug dieser Werte zu den vorgeschlagenen Funktionen meistens unscharf mit dem Effekt, dass später andere Interpretationen der Werte als Kritikpunkte eingebracht werden.Christoph Hubig schlägt in seinem Artikel -Indikatorenpolitik' vor, dass die Werte durch prüfbare Indikatoren so präzisiert werden sollen, dass für das geplante Systems entschieden werden kann, ob sie erfüllt sind. Sind die Indikatoren (z.B.: NOx bei dem Wert Gesundheit, Zugriff auf alle eigenen Daten beim Datenschutz) im -grünen Bereich', dann sind nach Vereinbarung auch die Werte erfüllt.Dieser Ansatz ist in der Informatik für technikgetriebene Werte (wie Zuverlässigkeit, Wartbarkeit usw.) üblich. Er wird aber für Werte der Stake Holder kaum verwendet.Die Indikatorenpolitik übertragen auf die Informatik bedeutet, dass in der Analysephase die Erhebung der Werte durchgeführt wird und eine Einigung auf ein Wert-Indikatoren-Modell Voraussetzung für die Systementwicklung ist.Die formalen Teile des Werte-Indikatoren-Modells können in der UML dokumentiert werden. Es bietet sich an, auch die Prüfung des grünen Bereichs für die Indikatoren durch Nachbedingungen in den Use Cases zu beschreiben.Dieser Ansatz hat für die Software Entwicklung den Reiz, dass die Qualitätskontrolle der Werte sich direkt aus der Anforderungsanalyse ergibt.Das Thema des Seminars ist die Erprobung dieses Ansatzes an kleineren Projektideen.Seminarprogramm:- Recherche nach ähnlichen Ansätzen.- Systematik der Transformation des Werte-Indikatoren-Modells in Nachbedingungen- Beispiele, am besten aus dem eigenen Erfahrungsbereich- Entwicklung von Stereotypen für die Indikatorenprüfung",
            "Qualifikationsziele_Lernergebnisse": "Neben den Standardzielen eines Seminars liegt der Schwerpunkt auf der kritischen Beurteilung von Software-Entwicklungskonzepten",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Eigene Projekterfahrung im Bereich Anforderungsanalyse, erfolgreicher Abschluss der LV Software Engineering.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1055-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Eigene Projekterfahrung im Bereich Anforderungsanalyse, erfolgreicher Abschluss der LV Software Engineering.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1055-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Erweitertes Seminar - Systems and Machine Learning",
        "Modul Nr.": "20-00-1057",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1057-se Erweitertes Seminar - Systems and Machine Learning0 Seminar 3",
            "Lerninhalt": "Dieses Seminar dient der Diskussion neuer Forschungspapiere im Zusammenhang von Hardware-/Softwaresystemen und maschinellem Lernen (ML). Das Seminar zielt auf die Verbindungen zwischen diesen Themenbereichen ab und diskutiert Fragestellungen, die auf praktisch anwendbares maschinelles Lernen zugeschnitten sind wie z.B. Hardware-Beschleuniger für ML, verteilte skalierbare ML-Systeme, neuer Programmierparadigmen für ML, Automatisiertes ML, sowie Anwendungen von ML für Systeme.Jeder Teilnehmer präsentiert ein Forschungspapier, das anschließend von allen Teilnehmern diskutiert wird. Darüber hinaus werden zusammenfassende Arbeiten in Gruppen verfasst und einem Peer-Review Prozess unterzogen. Die vorzustellenden Arbeiten stellen in der Regel aktuelle Publikationen in relevanten Konferenzen und Zeitschriften dar.Das Seminar wird als Blockveranstaltung angeboten. Weitere Informationen unter: http://binnig.name",
            "Qualifikationsziele_Lernergebnisse": "Nach diesem Seminar sollten Studierende in der Lage sein:- einen unbekannten Text aus den Bereichen des Seminars selbständig aufzuarbeiten- eine Präsentation und eine schriftliche Zusammenfassung für ein Fachpublikum in diesem Gebiet zu entwickeln- an einer Fachdiskussion über ein Thema aus den Bereichen des Seminars sinnvoll teilzunehmen- die Meinung über eine wissenschaftliche Arbeit in der Form eines schriftlichen Peer-Reviews zu artikulieren",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundkenntnisse in maschinellem Lernen, skalierbares Datenmanagement und Hardware-/Softwaresystemen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1057-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundkenntnisse in maschinellem Lernen, skalierbares Datenmanagement und Hardware-/Softwaresystemen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1057-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Binary Analysis Seminar",
        "Modul Nr.": "20-00-1063",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1063-se Binary Analysis Seminar 0 Seminar 2",
            "Lerninhalt": "Thema ist sowohl die Auseinandersetzung mit Programmanalyse von nativem Code (z.B. x86, x64, arm64, ...) als auch das Kennenlernen von Werkzeugen in diesem Bereich.Die Studenten können ihr Thema aus einem vorgegebenem Themenpool wählen.Folgende Tätigkeiten sind Teil des Seminars:- Selbstständige Einarbeitung in ein Themengebiet der Programmanalyse- Erabeitung der Funktionsweise der Tools im jeweiligen Gebiet- Erstellung eines Vergleichs der Tools- Identifikation von Problemstellungen, die mit dem Ansatz gelöst werden können- Beispielhafte Implementation der identifizierten ProblemstellungenVoraussichtliche Themengebiete:- Symbolic Execution- Dynamic Binary Instrumentation- Recompilation- Dynamic Taint Analysis- Fuzzing",
            "Qualifikationsziele_Lernergebnisse": "Die Veranstaltung vermittelt dem Studenten ein Grundverständnis der Analyse von nativem Code. Zusätzlich wird durch den Vergleich der Werkzeuge die Fähigkeit des wissenschaftlichen Arbeitens gefördert. Außerdem sammeln die Studenten praktische Erfahrungen im Umgang mit gängigen Analysewerkzeugen. Die Studenten sind nach der Veranstaltung in der Lage sich selbstständig in weitere ähnliche und komplexere Themen dieser Art einzuarbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Interesse an Programmanalyse, Schwachstellenidentifikation und Exploitation- Programmierkenntnisse in C, C++ und Assembly von Vorteil- Linux Kenntnisse",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1063-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)Bestehen der Prüfung (100%)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Interesse an Programmanalyse, Schwachstellenidentifikation und Exploitation- Programmierkenntnisse in C, C++ und Assembly von Vorteil- Linux Kenntnisse",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1063-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Bildungstechnologien",
        "Modul Nr.": "20-00-1065",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1065-se Bildungstechnologien 0 Seminar 2",
            "Lerninhalt": "Das Seminar befasst sich mit aktuellen Technologien und Anwendungen, die für den Bildungsbereich (Schule, Hochschule, Aus- und Weiterbildung) entwickelt bzw. in Anwendungen für Lernen und Lehren eingesetzt werden. Dazu werden im Seminar unter einem thematischen Schwerpunkt verschiedene aktuelle, hochwertige Forschungsarbeiten betrachtet. Beispielhafte Schwerpunkte des Seminars sind: Learning Analytics unter Nutzung von Maschinellen Lernen, Adaptivitätsmechanismen in Lernanwendungen, Lerner- bzw. Usermodellierung, Natural Language Processing zur Analyse von Lernartefakten, Augmented and Virtual Reality in Lernanwendungen, HCI Aspekte der Gestaltung von Lernanwendungen. Jede/r Teilnehmer/in analysiert ein oder zwei wissenschaftliche Papier, fasst diese kritisch in einer schriftlichen Ausarbeitung zusammen und präsentiert die Papiere in einer Blockveranstaltung zu Ende des Semesters. Zusätzlich werden während des Semesters Beiträge anderer Studierender begutachtet. In der Blockveranstaltung diskutieren alle Teilnehmer/innen die Beiträge. Benotet werden die Vorbereitung und die Präsentation der Arbeit, die schriftliche Ausarbeitung, die Begutachtung sowie die Teilnahme an der Diskussion.",
            "Qualifikationsziele_Lernergebnisse": "Das Lernziel besteht einerseits darin wissenschaftliche Publikationen, deren Aufbau und wissenschaftliche Methoden kennen, analysieren und anwenden zu lernen. Andererseits soll ein Einblick in aktuelle Technologien gewonnen werden und sollen diese auf ihren Einsatz im Anwendungsfeld Bildung hin beurteilt werden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Interesse an Bildungstechnologien",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1065-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Interesse an Bildungstechnologien",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1065-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Distributed Systems Programming: Seminar",
        "Modul Nr.": "20-00-1066",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1066-se Distributed Systems Programming: Seminar0 Seminar 2",
            "Lerninhalt": "Das \"DSP-Praktikum\" adressiert Forschungsthemen im Bereich von distributed systems (DS, deutsch verteilten Anwendungen) und Programmiersprachen für DS. Die angebotenen Themen hängen von der aktuellen Forschung der DSP Gruppe ab und umfassen unter anderem:- Software-defined networking (SDN)- Network function virtualization (NFV) and in-network processing (INP)- Traffic engineering (TE)- Network monitoring- Resource management in datacenters (RMF)- Big data analytics (Spark, YARN, OpenStack, ..)- Event-based systems- Security in SDN, INP, and big data- Geo-distributed data processing- Compiler infrastructures for DS- Language abstractions for DS- Session types / calculi for DS- Network ProtocolsDie teilnehmenden Studierenden realisieren eine Seminararbeit welches zusammen mit dem Betreuer definiert wird.",
            "Qualifikationsziele_Lernergebnisse": "Nach der Teilnahme am \"DSP-Seminar\" können Studierende technische und wissenschaftliche Probleme im Bereich DS aufarbeiten und präsentieren.Je nach ausgewähltem Thema erlernen Studierende folgende Kompetenzen:- Literaturrecherche im Themenbereich- Methodische Analyse und Auswertung von:- Modellen- Experimenten- Software- Schreiben von technischen Dokumenten oder Projektberichten- Erstellen und Vortragen eines Abschlussvortrages",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, eigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen.Vorlesung TK1 (optional)Da die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr verschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der Anforderungen wird in der ersten Vorlesung präsentiert und können anschließend von den Studenten ausgewählt werden.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1066-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, eigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen.Vorlesung TK1 (optional)Da die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr verschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der Anforderungen wird in der ersten Vorlesung präsentiert und können anschließend von den Studenten ausgewählt werden.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1066-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktor-basierte Programmiersprachen",
        "Modul Nr.": "20-00-1074",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1074-se Aktor-basierte Programmiersprachen0 Seminar 2",
            "Lerninhalt": "Im Zentrum des Seminars stehen Aktor-basierte Modellierungs- und Programmiersprachen wie Scala/Akka, ABS, Encore, u.ä.Teilnehmer_innen dieses Seminars sollen einzelne Vertreter der Aktor-basierten Sprachen vorstellen, die realisierten Konzepte erklären und diskutieren.",
            "Qualifikationsziele_Lernergebnisse": "* Fähigkeit ein wissenschaftliche Thema aufzuarbeiten und zu präsentieren* Fähigkeit wissenschaftliche Berichte zu lesen und verwandte Arbeiten zu recherchieren* Erwerb von Wissen über Aktor-basierte Sprachen und deren Anwendung",
            "Voraussetzung_fuer_die_Teilnahme": "Interesse in Programmiersprachen und verteilten Systemen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1074-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Interesse in Programmiersprachen und verteilten Systemen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1074-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Themen zu Modular Verification",
        "Modul Nr.": "20-00-1077",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1077-se Aktuelle Themen zu Modular Verification0 Seminar 2",
            "Lerninhalt": "Bei der Entwicklung von Softwaresystemen spielt Korrektheit eine entscheidende Rolle. Fehler in Softwaresystemen können nicht nur zu erhöhten Kosten führen, sondern im schlimmsten Fall sogar das Leben von Menschen gefährden (z.B. in Flugzeugen, Weltraumfahrzeugen, Nuklearreaktoren, ...). Verifikation von Software ist eine Möglichkeit, die Abwesenheit von Bugs zu zeigen.Eine Kernfrage hierbei ist, wie man die Skalierbar von formaler Verifikation und Testmethoden für komplexe Systeme sicherstellt. Die Komplexität von Analysen kann von mehrere Faktoren abhängen, z.B. der Größe des Programms oder der Anzahl von parallelen Threads. Modulare Verifikation wirkt dieser Komplexität durch eine Zerlegung der Probelmstellung entgegen. Einzelne Softwarekomponenten werden unabhängig voneinander verifiziert und diese Verifikationsergebnisse werden dann zu Garantien für das gesamte System zusammengesetzt. Die Zusammensetzung von Verifikationsergebnissen muss durch Kompositionalitätsresultate unterstützt werden, damit die modulare Analyse aussagekräftig ist.In diesem Seminar werden aktuelle Forschungsartikel, die verschiedene Techniken der modularen Verifikation behandeln, präsentiert und im Detail diskutiert.",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden können nach erfolgreicher Durchführung der Veranstaltung ausgewählte Forschungsaktivitäten und -resultaten zu modular Verifikation diskutieren. Des Weiteren werden sie ihre Fähigkeiten im Lesen und Verstehen wissenschaftliche Artikel, im Präsentieren wissenschaftlicher Resultate und im wissenschaftlichen Diskutieren weiterentwickeln.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1077-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1077-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittene Techniken der Softwareverifikation",
        "Modul Nr.": "20-00-1078",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1078-se Fortgeschrittene Techniken der Softwareverifikation0 Seminar 2",
            "Lerninhalt": "Im Seminar befassen Sie sich mit Themen zu den aktuellen Forschungsinhalten der Arbeitsgruppe Semantik und Verifikation paralleler System. Es werden sowohl klassische als auch aktuelle Forschungsarbeiten im Bereich Softwareverifikation (d.h. Model Checking, Programmanalyse, Testen, etc.) behandelt. Die Themen des aktuellen Semesters entnehmen Sie bitte der Webseite der Lehrveranstaltung (https://www.informatik.tu-darmstadt.de/svpsys/semantik_und_verifikation_paralleler_systeme_svpsys/lehre_svpsys/seminar_ftsv_svpsys/index.de.jsp).Während des Seminars werden Sie unter Anleitung- sich auf Basis von vorgegebener und selbst gefundener, wissenschaftlicher Literatur in Ihr Thema einarbeiten- einen Vortrag über Ihr Thema vorbereiten und vor den anderen Teilnehmern halten, um mit ihnen anschließend über Ihr Thema zu diskutieren,- eine wissenschaftliche Ausarbeitung verfassen, die einen zusammenfassenden Überblick über Ihr Thema gibt.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss des Seminars können sich die Studierenden anhand von Ausgangsliteratur eigenständig in ein wissenschaftliches Thema einarbeiten und dieses Thema einem heterogenen Fachpublikum sowohl mündlich als auch schriftlich präsentieren.Im Detail können die Studierenden Methoden zur Literaturrecherche anwenden und die Relevanz von gefundener Literatur beurteilen. Sie können den wesentlichen Inhalt einer wissenschaftlichen Veröffentlichung ermitteln und diesen kritisch beurteilen. Außerdem sind sie in der Lage verschiedene wissenschaftliche Arbeiten miteinander zu vergleichen. In einem mündlichen Vortrag können die Studierenden ihr Thema und ihre Ergebnisse einem heterogenen Fachpublikum erklären und ihre Ergebnisse vor diesem Publikum verteidigen. Zusätzlich können die Studierenden in einer schriftlichen Ausarbeitung ihr Thema und ihre Ergebnisse beschreiben.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs InformatikHilfreich: Besuch einer Veranstaltung des Fachgebietes Semantik und Verifikation paralleler Systeme",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1078-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs InformatikHilfreich: Besuch einer Veranstaltung des Fachgebietes Semantik und Verifikation paralleler Systeme",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1078-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Deep Learning und Digital Humanities",
        "Modul Nr.": "20-00-1080",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1080-se Deep Learning und Digital Humanities0 Seminar 2",
            "Lerninhalt": "Der Fokus des Seminars wird auf Humanities Anwendungen wie Gedicht-Generierung und Analyse, Metaphern- und Emotions-Identifikation, etc. liegen, und wie diese mithilfe von Deep Learning gelöst werden können. Die Studenten werden Paper lesen und diese während des Seminars präsentieren.",
            "Qualifikationsziele_Lernergebnisse": "Nach diesem Seminar werden Studenten dazu in der Lage sein:* Probleme aus dem Umfeld von Digital Humanities zu verstehen* verstehen, wie Deep Learning verwendet werden kann, um diese zu lösen* verstehen, wie man crowd-sourcing für Annotationen durchführt",
            "Voraussetzung_fuer_die_Teilnahme": "VL Deep Learning ist hilfreich, aber nicht vorausgesetzt",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1080-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "VL Deep Learning ist hilfreich, aber nicht vorausgesetzt",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1080-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Meta-Science",
        "Modul Nr.": "20-00-1086",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1086-se Meta-Science 0 Seminar 2",
            "Lerninhalt": "Ausgehend von der gegenwärtigen Revolution im Bereich der künstlichen Intelligenz stellt sich das Seminar die Frage, ob solche Revolutionen im Voraus vorhergesagt werden können. Weitere Fokusaspekte des Seminars sind:- Probleme und Aspekte von peer-reviewing- Vorhersage von Citation Counts- Schlechte Praktiken in der Forschung: biases in der Forschung, schlechter Aufbau von Studien, Missbrauch von Statistiken, falsche Behauptungen bzgl. der Qualtität einer Methode/Ansatz/Algorithmus- Zitations-Kartelle & Cliquen- Ethik in der Forschung, insbesondere self-citations und Formen von Betrügen",
            "Qualifikationsziele_Lernergebnisse": "- Lernen von Methoden für Trend Prediction- Analyse und Diskussion wissenschaftilcher Praxis- generelles Methodenwissen z.B. aus complexity science oder machine learning",
            "Voraussetzung_fuer_die_Teilnahme": "Mathematischer und/oder statistischer Hintegrund/Affinität ist hilfreich.Tiefes Lernen (für Natural Language Processing) kann auch von Vorteil sein.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1086-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Mathematischer und/oder statistischer Hintegrund/Affinität ist hilfreich.Tiefes Lernen (für Natural Language Processing) kann auch von Vorteil sein.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1086-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seitenkanalresistente Kryptographie",
        "Modul Nr.": "20-00-1088",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1088-se Seitenkanalresistente Kryptographie0 Seminar 2",
            "Lerninhalt": "Traditionell sind kryptografische Verfahren sicher gegen sogenannte Black-Box-Angriffe. Bei einem Black-Box Angriff nutzt der Angreifer Schwachstellen des kryptographischen Algorithmus aus, um die Sicherheit des Systems zu brechen. Bei praktischen Implementierung der kryptographischen Verfahren sind sogenannte Seitenkanalangriffe eine weitere kritische Sicherheitsbedrohung. Unzählige Beispiele zeigen, dass fast alle heute verwendeten Geräte von Seitenkanalangriffen betroffen sind. Als Paul C. Kocher Ende der neunziger Jahre zeigte, dass die Sicherheit von Smartcards mithilfe von Timing- oder Power-Analyse-Angriffen gebrochen werden kann, wurden zahlreiche weitere Seitenkanalangriffe entdeckt. Vor kurzem haben Beispiele wie Foreshadow gezeigt, dass selbst komplexe Computersysteme anfällig für Seitenkanalangriffe sind.-Leakage Resilient Cryptography' ist ein Forschungsbereich der Kryptographie, der diese praktischen Angriffe formalisiert, um formale Methoden zum Nachweis der Sicherheit gegen Seitenkanalangriffe zu verwenden. Insbesondere definiert es neue Sicherheitsmodelle, sogenannte Leakage-Modelle, die Seitenkanalangriffe in die klassischen Sicherheitsmodelle einbeziehen, und entwirft kryptografische Verfahren, die in ihnen nachweislich sicher sind.",
            "Qualifikationsziele_Lernergebnisse": "Das Ziel des Seminars ist die Vermittlung der einflussreichsten Paper zu Seitenkanalangriffen und Leakage Resilient Kryptographie. Inhalte sind:- Seitenkanalangriffe (z. B. Power-Analyse-Angriffe, Timing-Angriffe, Foreshadow usw.)- gängige Gegenmaßnahmen gegen Seitenkanalangriffe (z. B. Kryptographie mit konstanter Zeit, zufällige Ausführung, Maskierungsschemata, algorithmische Gegenmaßnahmen usw.)- Sicherheitsmodelle in der Leakage Resilient Kryptographie und formale Sicherheitsanalysen von Gegenmaßnahmen für Seitenkanalangriffe",
            "Voraussetzung_fuer_die_Teilnahme": "Das Seminar richtet sich an Master-Studenten.Grundvorlesung IT-Sicherheit oder Grundkenntnisse in Kryptographie werden empfohlen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1088-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Das Seminar richtet sich an Master-Studenten.Grundvorlesung IT-Sicherheit oder Grundkenntnisse in Kryptographie werden empfohlen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1088-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "New Trends in Secure Software Engineering",
        "Modul Nr.": "20-00-1089",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1089-se New Trends in Secure Software Engineering0 Seminar 2",
            "Lerninhalt": "Mit SDL (Secure Development Lifecycle), das mittlerweile in der Branche weit verbreitet ist, hat Microsoft vor über 20 Jahren einen wichtigen Schritt in Richtung Secure Software Engineering definiert.In den letzten Jahren und insbesondere auch durch die Softwareanwendungen in IoT, Smart Cars und Industrie 4.0, wodurch Technologien wie 5G ermöglicht werden, wird es immer offensichtlicher, dass dies bei weitem nicht ausreicht. In diesem Seminar wollen wir den aktuellen Stand von Secure Software Engineering untersuchen. Wir beginnen hier mit Ross Andersons aktuell umgeschriebenen Buch von Ross \"Security Engineering\" (https://www.cl.cam.ac.uk/~rja14/book.html), 3. Ausgabe und schauen uns ein paar der neuesten Forschungen an, die diese Anforderungen unterstützen.Dieses Seminar soll auch die Anwendbarkeit in der Industrie herausarbeiten und die Grenzen für die jeweiligen Ansätze aus theoretischer und praktischer Dimension beschreiben.",
            "Qualifikationsziele_Lernergebnisse": "Sie lernen, wie Sie in ein wissenschaftliches Thema eintauchen, eine Präsentation vorbereiten, die den Anforderungen einer wissenschaftlichen Konferenz entspricht, und Führen einer wissenschaftlichen Diskussion. Sie lernen auch, wie Sie die Thematik für ein branchenorientiertes Publikum aufbereiten und die Anwendbarkeit für die Industrie dabei zu berücksichtigen.",
            "Voraussetzung_fuer_die_Teilnahme": "-",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1089-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "-",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1089-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Angreifermodelle in der IT-Sicherheit",
        "Modul Nr.": "20-00-1091",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1091-se Angreifermodelle in der IT-Sicherheit0 Seminar 2",
            "Lerninhalt": "Bei der Einschätzung der Sicherheit von IT Systemen ist es notwendig, die Fähigkeiten und Absichten von potenziellen Angreifern zu berücksichtigen. Der Zweck von Angreifermodellen ist es, die Fähigkeiten, Ziele, oder andere Aspekte von Angreifern explizit zu machen. Formal fundierte Angreifermodelle erlauben es, die Präzision zu erhöhen, Unklarheiten zu vermeiden und eine Basis für automatisierte Sicherheitsanalysen zu schaffen. Sprachen für Angreifermodelle gehen oft mit graphischen Notationen zur Veranschaulichung einher, die das Verstehen der Modelle und den Aufbau von Intuition vereinfacht.Angreifermodelle genießen eine weite Verbreitung in der industriellen Praxis und sind der Gegenstand von intensiven Forschungsvorhaben. Sicherheitsanalysen, die auf Angreifermodellen aufbauen, sind nicht auf eine Einschätzung des Sicherheitsgrades von Systemen beschränkt, sondern können auch als Grundlage für wirtschaftliche Entscheidungen herangezogen werden, bspw. um den erwarteten Nutzen von Sicherheitsinvestitionen zu maximieren.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Seminar werden die Studierenden fähig sein, aktuelle Entwicklungen im Bereich Angreifermodelle zu diskutieren. Des Weiteren werden die Studierenden ihre Fähigkeiten im Lesen und Verstehen wissenschaftlicher Artikel und im Präsentieren, Diskutieren und Vergleichen wissenschaftlicher Ergebnisse verbessern.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1091-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiums Informatik, insbesondere die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1091-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Aktuelle Themen aus dem Bereich Concurrency Theory",
        "Modul Nr.": "20-00-1093",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1093-se Aktuelle Themen aus dem Bereich Concurrency Theory0 Seminar 2",
            "Lerninhalt": "Moderne Software-Systeme sind verteilt und Abhängig von Kommunikation. Dies führt zu zusätzlichen Problem bei der Verifikation solcher Systeme, mit denen sich das Forschungsgebiet Concurrency Theory beschäftigt. Hier werden verschiedene Methoden zur Modellierung, Simulation und Analyse verteilter Systeme untersucht. Der Bereich der Modellierungssprachen umfasst graphische Modelle so wie Petrinetze oder Event Structures genauso wie Programiersprachen nahe Modelle wie z.B. Prozesskalküle. Um solche Systeme zu analysieren, wurden verschiedene Techniken so wie Typsysteme, Model Checking und interaktives Theorembeweisen auf die speziellen Ansprüche verteilter Systeme angepasst und vielle neue Techniken wurden entwickelt. In diesem Seminar werden aktuelle Forschungspapier aus dem Bereich Concurrency Theory vorgestellt und diskutiert.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme haben Studierende eine Vorstellung von den aktuell bearbeiteten Themen im Bereich Concurrency Theory. Sie können Resultate aus diesem Bereich präsentieren und die Vorteile der präsentierten Methoden kritisch hinterfragen. Die Vorstellung der vorliegenden Resultate wird ihnen dabei helfen ihre eigenen Arbeiten klar darzustellen und zu verteidigen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere formalen Sprachen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1093-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere formalen Sprachen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1093-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Digitale Souveränität",
        "Modul Nr.": "20-00-1095",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1095-se Digitale Souveränität 0 Seminar 2",
            "Lerninhalt": "Das Seminar beschäftigt sich mit den technologischen Aspekten \"Digitaler Souveränität\". Dazu zählen z.B. die \"Vendor Lock-in\" Problematik, aber auch die Diskussion über die Beteiligung von Huawei beim Aufbau des 5G Netzes.",
            "Qualifikationsziele_Lernergebnisse": "Das Seminar wird in Form einer Konferenz abgehalten. Die Studierenden lernen das Anfertigen eines wissenschaftlichen Textes und üben die Präsentation vor einem Publikum.",
            "Voraussetzung_fuer_die_Teilnahme": "Interesse am wissenschaftlichen Arbeiten.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1095-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Interesse am wissenschaftlichen Arbeiten.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1095-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software-Engineering für Künstliche Intelligenz",
        "Modul Nr.": "20-00-1097",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1097-se Software-Engineering für Künstliche Intelligenz0 Seminar 3",
            "Lerninhalt": "Künstliche Intelligenz (KI) ist mittlerweile Bestandteil vieler datengetriebenen Anwendungen; zum Beispiel in der Finanzindustrie, Medizin, Kognitionswissenschaft oder Biologie. Derartige Ansätze des maschinellen Lernens (ML) erfordern eine genaue Domänen- und Anforderungsanalyse, angemessenes Softwaredesign und -Entwicklung, besonderes Testen und Debugging sowie spezielle Techniken, um Skalierbarkeit und Wartbarkeit sicherzustellen. Während KI-Systeme zunehmend größeren Einfluss in vielen Bereichen besitzen, verwenden Entwickler und Data-Scientists weiterhin Methoden (Scripting, informelle/nicht-verschriftlichte Spezifikationen, trial-and-error Testing), die nicht dem aktuellen Stand der Technik in den Ingenieursdisziplinen entsprechen. Vor diesem Hintergrund ist es von entscheidender Bedeutung die Jahrzehnte lange Entwicklung im Software-Engineering (SE) zur Systematisierung von Entwicklungsprozessen für diesen Bereich zu nutzen.In diesem Kurs wird Studierenden ein Thema im Bereich SE für KI zugewiesen. Ausgehend von vorgegebenen Quellen und persönlicher erweiternder Literaturrecherche bereiten Studierende eine Präsentation mit anschließender Diskussion vor. Diese werden an regelmäßigen Terminen gehalten. Alle Studierenden, die an einem Termin nicht präsentieren, bereiten sich auf die jeweilige Diskussion mit einführendem Lesematerial vor. Die Benotung basiert auf der Vorbereitung und der Präsentation der zugewiesenen Themenschwerpunkte sowie auf der Teilnahme an allen Diskussionen.Beachten Sie bitte die Kursseite für mehr Informationen und Ankündigungen: https://allprojects.github.io/SE4AI/",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten entwickeln ein tieferes Verständnis zu SE für KI. Dies umfasst die Schwerpunkte Requirements Engineering, Qualitätssicherung, Entwicklungsprozesse sowie Softwarearchitektur und -Design für Modularität, Wiederverwendbarkeit, Effizienz, Skalierbarkeit, Fairness und Privatsphäre.Die Studierenden lernen die Vorbereitung und Präsentation von wissenschaftlichen Inhalten für ein Publikum mit unterschiedlichem Hintergrundwissen. Außerdem üben die Studierenden die effiziente Vorbereitung von und aktive Teilnahme an wissenschaftlichen Diskussionen sowie deren Moderation.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Basiswissen zu Software-Engineering. Interesse an Künstlicher Intelligenz.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1097-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Basiswissen zu Software-Engineering. Interesse an Künstlicher Intelligenz.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1097-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "1.1.2. CORONA-CON",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "90 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1099-se CORONA-CON 0 Seminar 2",
            "Lerninhalt": "Das Thema dieses Seminars ist es, einen allgemeinen Überblick über mögliche Einsatzmöglichkeiten digitaler Technologien bei der Bewältigung von Ausnahmesituationen, wie der aktuellen COVID 19-Pandemie zu geben und konkrete Handlungsvorschläge zu entwickeln.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten werden sich am Beispiel der Risikoeinschätzung und Kontrollstrategien die folgenden Fertigkeiten aneignen:- Einarbeitung in komplexe Fragestellungen- Durchführung von Literaturrecherchen- Teamarbeit- Erarbeitung eigener Lösungen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlene Vorkenntnisse: Konzepte der Computersicherheit und des Datenschutzes",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1099-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlene Vorkenntnisse: Konzepte der Computersicherheit und des Datenschutzes",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1099-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "1.1.3. Seminar Informatik, Ethik und Gesellschaft",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1102-seSeminar Informatik, Ethik und Gesellschaft0 Seminar 3",
            "Lerninhalt": "Im Seminar werden fortgeschrittene wissenschaftliche Themen des Fachgebiets -Wissenschaft und Technik für Frieden und Sicherheit' (PEASEC) bearbeitet. Basierend auf einer Einführung/Wiederholung der Methoden wissenschaftlichen Arbeitens und ausgewählter Grundlagen werden fortgeschrittene Themen vergeben, die sich an der aktuellen Forschung des Fachgebiets orientieren, und von Studierenden mit wissenschaftlichen Methoden bearbeitet werden. Im Laufe des Semesters werden wissenschaftliche Artikel (-Paper') erarbeitet und präsentiert. Wie bei wissenschaftlichen Arbeiten üblich werden diese mithilfe eines studentischen Review-Verfahrens gegenseitig konstruktiv begutachtet und anschließend zur Fertigstellung und Abgabe überarbeitet.BEISPIELHAFTE THEMENBEREICHE:- Verantwortung und Ethik in der Informatik (Leitlinien des GI/ACM/VDI, praktische Rolle der Ethik in der Informatik)- Verantwortung im Design (Responsible Research and Innovation, Wertsensitives Design, Technikfolgenabschätzung, Dual-Use-Assessment, ELSI-Design)- Privatsphäre, Datenschutz und Überwachung- Kritische Informatik (Machtstrukturen, Werteauffassungen, politische Dimensionen)- Autonome Systeme, Künstliche Intelligenz und Verantwortung- Frieden, Sicherheit, Militärtechnologie und Dual-Use- Diversität in der Informatik (Barrierefreiheit, Accessibility, Disability, Gender, Aging, Kultur)- Sprache: Propaganda, Fake News, Trolling und Hate Speech- Transparenz, Explainable AI, White Box Algorithmen, Gerechte Algorithmen, Steuerbarkeit",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss des Moduls sind Studierende in der Lage,- ethische und soziale Aspekte der Informatik sowie ihre professionellen ethischen Leitlinien zu beschreiben.- Lösungsansätze zum ethischen und sozialen Umgang mit Informatik zu nennen.- Kriterien für gutes wissenschaftliches Arbeiten zu nennen- wissenschaftliche Forschungsfragen im Kontext ethischer Aspekte der Informatik zu erarbeiten und unter Anwendung einer wissenschaftlichen Methode zu beantworten- ihr wissenschaftliches Vorgehen reflektiert in einer Fachdiskussion zu verteidigen- wissenschaftliche Beiträge Anderer in einem -Peer-Review' konstruktiv zu begutachten",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-Computer-Interaktion oder Friedens- und Konfliktforschung, Grundkenntnisse in den Themengebieten des Fachgebiets PEASEC",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1102-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-Computer-Interaktion oder Friedens- und Konfliktforschung, Grundkenntnisse in den Themengebieten des Fachgebiets PEASEC",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1102-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Kryptographie",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1103-seSeminar Kryptographie 0 Seminar 2",
            "Lerninhalt": "Im Seminar werden aktuelle Forschungsresultate aus dem Gebiet der Kryptographie von den Studierenden vorgestellt.",
            "Qualifikationsziele_Lernergebnisse": "Im Bereich der fachlichen und fachlich methodischen Kompetenzen werden die Studierenden nach der Veranstaltung das Vorwissen aus dem Bereich der Kryptographie auf neue wissenschaftliche Arbeiten anwenden können. Im Bereich der kommunikativen Kompetenzen werden die Studierenden dann wissenschaftliche Arbeiten so analysieren können, dass sie den fachlichen Stoff daraus präsentieren können.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden: Einführung in die Kryptographie,andere weiterführende Veranstaltungen im Bereich Kryptographie",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1103-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden: Einführung in die Kryptographie,andere weiterführende Veranstaltungen im Bereich Kryptographie",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1103-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Verfassen und Beurteilen Wissenschaftlicher Veröffentlichungen in der IT-Sicherheit",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1105-seVerfassen und Beurteilen Wissenschaftlicher Veröffentlichungen in der IT-Sicherheit0 Seminar 2",
            "Lerninhalt": "Die Studierenden verfassen eine kurze wissenschaftliche Arbeit im Bereich IT-Sicherheit und beurteilen die Arbeiten der anderen in einer konferenz-ähnlichen Umgebung.",
            "Qualifikationsziele_Lernergebnisse": "Im Bereich der kommunikativen Kompetenzen werden die Studierenden gelernt haben, wie man wissenschaftliche Resultate darstellt und wie man wissenschaftliche Arbeiten bewertet. Im Bereich der organisatorischen Kompetenzen werden sie die Abläufe von Konferenzen und den Einsatz entsprechender Systeme erlernt haben.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Kenntnisse in IT-Sicherheit, erste Erfahrungen im Verfassen von wissenschaftlichen Arbeiten, z.B. Bachelor-Arbeit",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1105-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Kenntnisse in IT-Sicherheit, erste Erfahrungen im Verfassen von wissenschaftlichen Arbeiten, z.B. Bachelor-Arbeit",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1105-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Sicherheit und Privatheit in vernetzten Systemen",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "60 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1106-seSicherheit und Privatheit in vernetzten Systemen0 Seminar 2",
            "Lerninhalt": "Im Seminar werden fortgeschrittene wissenschaftliche Themen der IT-Sicherheit bearbeitet. Studierende können aus einer Reihe vorgestellter Themen wählen und dieses mit wissenschaftlichen Methoden bearbeiten. Im Laufe des Semesters wird ein eigener wissenschaftlicher Artikel erarbeitet und am Ende präsentiert.BEISPIELHAFTE THEMENBEREICHE:- IoT- und Funkprotokolle (u.a. Bluetooth LE, Bluetooth Mesh, LoRaWAN)- Physical LayerSecurity (u.a. Distance Bounding, Direction Finding)- Eingebettete Systeme- Software Defined Radio",
            "Qualifikationsziele_Lernergebnisse": "Am Ende der Veranstaltung sind die Studierenden in der Lage, sich in ein wissenschaftliches Thema einzuarbeiten, den aktuellen Stand der Forschung zu einer bestimmten Fragestellung zu beantworten sowie die Ergebnisse im Stil einer Publikation festzuhalten und zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Vorwissen im Bereich IT-Sicherheit, beispielsweise durch Besuch entsprechender Lehrveranstaltungen, wird empfohlen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1106-se] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Vorwissen im Bereich IT-Sicherheit, beispielsweise durch Besuch entsprechender Lehrveranstaltungen, wird empfohlen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1106-se] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Multimedia Kommunikation II",
        "Modul Nr.": "18-sm-2090",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "90 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2090-seSeminar Multimedia Kommunikation II4 Seminar 2",
            "Lerninhalt": "Das Seminar befasst sich mit aktuellen und aufkommenden Trends, die als relevant für die zukünftige Entwicklung von Multimedia Kommunikationssystemen eingeschätzt werden. Lernziel ist es, Kenntnisse über zukünftige Forschungstrends im verschiedenen Bereichen zu erarbeiten. Hierzu erfolgt eine ausführliche Literaturarbeit, die Zusammenfassung sowie die Präsentation von ausgewählten, hochwertigen Forschungsarbeiten aus aktuellen Top-Zeitschriften, -Magazinen und -Konferenzen im Themenfeld Multimedia Kommunikation.Mögliche Themen sind:- Knowledge & Educational Technologies- Self organizing Systems & Overlay Communication- Mobile Systems & Sensor Networking- Service-oriented Computing- Multimedia Technologies & Serious Games",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden erarbeiten sich an Hand von aktuellen wissenschaftlichen Artikeln, Standards und Fachbüchern tiefe Kenntnisse über Multimedia Kommunikationssysteme und Anwendungen, welche die Zukunft des Internet bestimmen. Dabei werden Kompetenzen in folgenden Gebieten erworben:- Suchen und Bewerten von relevanter wissenschaftlicher Literatur- Analysieren und Einschätzen von komplexen technischen und wissenschaftlichen Informationen- Schreiben von technischen und wissenschaftlichen Zusammenfassungen- Präsentation von technischer und wissenschaftlicher Information",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Solide Kenntnisse in Computer Kommunikationsnetzen. Die Vorlesungen Kommunikationsnetze I und II werden empfohlen.",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Solide Kenntnisse in Computer Kommunikationsnetzen. Die Vorlesungen Kommunikationsnetze I und II werden empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "CS, Wi-CS, ETiT, Wi-ETiT, MSc CS, MSc ETiT, MSc iST",
            "Literatur": "Entsprechend des gewählten Themenbereichs (ausgewählte Artikel aus Journalen, Magazine und Konferenzen).",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Multimedia Kommunikation I",
        "Modul Nr.": "18-sm-2300",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "75 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2300-seSeminar Multimedia Kommunikation I4 Seminar 3",
            "Lerninhalt": "Das Seminar befasst sich mit aktuellen und aufkommenden Themen im Bereich multimedialer Kommunikationssysteme, welche als relevant für die zukünftige Entwicklung des Internets sowie der Informationstechnologie im Allgemeinen erachtet werden. Hierzu erfolgt nach einer ausführlichen Literaturarbeit die Zusammenfassung sowie die Präsentation von ausgewählten, hochwertigen Arbeiten und Trends aus aktuellen Top-Zeitschriften, -Magazinen und -Konferenzen im Themenfeld Kommunikationsnetze und Multimediaanwendungen. Die Auswahl der Themen korrespondiert dabei mit dem Arbeitsfeld der wissenschaftlichen Mitarbeiter.Mögliche Themen sind:- Knowledge & Educational Technologies- Self organizing Systems & Overlay Communication- Mobile Systems & Sensor Networking- Service-oriented Computing- Multimedia Technologies & Serious Games",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden erarbeiten sich an Hand von aktuellen wissenschaftlichen Artikeln, Standards und Fachbüchern tiefe Kenntnisse über Multimedia Kommunikationssysteme und Anwendungen, welche die Zukunft des Internet bestimmen.Dabei werden Kompetenzen in folgenden Gebieten erworben:- Suchen und Bewerten von relevanter wissenschaftlicher Literatur- Analysieren und Einschätzen von komplexen technischen und wissenschaftlichen Informationen- Schreiben von technischen und wissenschaftlichen Zusammenfassungen und Kurzberichten- Präsentation von technischer und wissenschaftlicher Information",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "CS, WiCS, ETiT, Wi-ETiT, BSc/MSc iST",
            "Literatur": "Entsprechend des gewählten Themenbereichs (ausgewählte Artikel aus Journalen, Magazine und Konferenzen).",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Seminar Softwaresystemtechnologie",
        "Modul Nr.": "18-su-2080",
        "Kreditpunkte": "4 CP",
        "Arbeitsaufwand": "120 h",
        "Selbststudium": "90 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "18-su-2080-se Seminar Softwaresystemtechnologie0 Seminar 2",
            "Lerninhalt": "In diesem Seminar werden von den Studenten wissenschaftliche Ausarbeitungen aus wechselnden Themenbereichen angefertigt. Dies umfasst die Einarbeitung in ein aktuelles Thema der IT-Systementwicklung mit schriftlicher Präsentation in Form einer Ausarbeitung und mündlicher Präsentation in Form eines Vortrages. Die Themen des aktuellen Semesters sind der Webseite der Lehrveranstaltung zu entnehmen www.es.tu-darmstadt.de/lehre/sst.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Absolvierung des Seminars sind die Studenten in der Lage sich in ein unbekanntes Themengebiet einzuarbeiten und dieses nach wissenschaftlichen Aspekten aufzuarbeiten. Die Studenten erlernen die Bearbeitung eines Themas durch Literaturrecherche zu unterstützen und kritisch zu hinterfragen. Weiterhin wird die Fähigkeit erworben, ein klar umrissenes Thema in Form einer schriftlichen Ausarbeitung und in Form eines mündlichen Vortrags unter Anwendung von Präsentationstechniken zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Grundkenntnisse der Softwaretechnik sowie Programmiersprachenkenntnisse",
            "Pruefungsform": "Modulabschlussprüfung:- Modulprüfung (Studienleistung, mündliche Prüfung, Dauer 30 Min, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Grundkenntnisse der Softwaretechnik sowie Programmiersprachenkenntnisse",
            "Benotung": "Modulabschlussprüfung: - Modulprüfung (Studienleistung, mündliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "BSc iST, BSc Informatik, MSc ETiT",
            "Literatur": "www.es.tu-darmstadt.de/lehre/sst",
            "Kommentar": "ModulhandbuchB. Sc./M. Sc. InformatikStudienleistungenPraktikum in der Lehre"
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Funktionale und objektorientierte Programmierkonzepte",
        "Modul Nr.": "20-00-0187",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0187-pr Praktikum in der Lehre -Funktionale und objektorientierteProgrammierkonzepte0 Praktikum in der Lehre3",
            "Lerninhalt": "",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Bachelorprüfung Funktionale und objektorientierte Programmierkonzepte",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0187-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Bachelorprüfung Funktionale und objektorientierte Programmierkonzepte",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0187-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Algorithmen und Datenstrukturen",
        "Modul Nr.": "20-00-0289",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0289-pl Praktikum in der Lehre -Algorithmen und Datenstrukturen0 Praktikum 3",
            "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Algorithmen und Datenstrukturen",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Bachelorprüfung Algorithmen und Datenstrukturen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0289-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Bachelorprüfung Algorithmen und Datenstrukturen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0289-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Allgemeine Informatik II",
        "Modul Nr.": "20-00-0292",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0292-pl Praktikum in der Lehre -Allgemeine Informatik II0 Praktikum in der Lehre3",
            "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Allgemeine Informatikll (Programmieren in Java)",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundstudium Informatik",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0292-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundstudium Informatik",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0292-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Allgemeine Informatik I",
        "Modul Nr.": "20-00-0333",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0333-pl Praktikum in der Lehre -Allgemeine Informatik I0 Praktikum in der Lehre3",
            "Lerninhalt": "Dieser Kurs befasst sich mit damit Lehrinhalte der Veranstaltung Allgemeine Informatik 1 didaktisch aufzubereiten und durch begleitende praktische Übungen besser verständlich zu machen.Dies umfasst unter anderem: Die Mitwirkung bei der Erstellung des Programmierprojektes; die Überarbeitung von Übungsmaterialien; die Erstellung von Minitests zur Leistungskontrolle; die Konzeption von Materialien für leistungsschwache wie leistungsstarke Studenten um Inhalte der Vorlesung zu vertiefen; das Erstellen von anspruchsvollen Bonussystemen.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung:- Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten- Praxisnahe Übungsformen konzipieren und erstellen- Übungen mit Studentengruppen aller Leistungsniveaus konzipieren und durchführen- Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln- Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Erfolgreiche Teilnahme am Kurs Allgemeine Informatik I bzw. Grundlagen der Informatik I.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0333-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Erfolgreiche Teilnahme am Kurs Allgemeine Informatik I bzw. Grundlagen der Informatik I.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0333-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. Informatik",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Softwaretechnik",
        "Modul Nr.": "20-00-0443",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0443-pl Praktikum in der Lehre -Softwaretechnik0 Praktikum in der Lehre3",
            "Lerninhalt": "Vorbereitung und Korrektur von Übungen, Abhalten von Übungsstunden, Betreuung von Praktischen Übungen.",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Vordiplom / Grundstudium",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0443-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Vordiplom / Grundstudium",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0443-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Visual Computing",
        "Modul Nr.": "20-00-0519",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0519-pl Praktikum in der Lehre - Visual Computing0 Praktikum in der Lehre3",
            "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Einführung in Human Computer Systems (Übungskonzeption, Korrektur, Begleitung des Lernenden)",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Visual Computing",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0519-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Visual Computing",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0519-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Formale Methoden im Softwareentwurf",
        "Modul Nr.": "20-00-0531",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0531-pl Praktikum in der Lehre -Formale Methoden im Softwareentwurf0 Praktikum in der Lehre3",
            "Lerninhalt": "Vorbereitung und Korrektur von Übungsaufgaben, Betreuung von Übungsgruppen",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Formale Methoden im Softwareentwurf",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0531-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Formale Methoden im Softwareentwurf",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0531-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Mentorensystem",
        "Modul Nr.": "20-00-0533",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0533-pl Praktikum in der Lehre -Mentorensystem0 Praktikum in der Lehre3",
            "Lerninhalt": "",
            "Qualifikationsziele_Lernergebnisse": "Problemlösungskompetenz für anspruchsvolle Aufgaben, d.h. es sind * fundierte Fachkenntnisse erforderlich * fundierte Analyse erforderlich * es gibt keinen schematischen Lösungsweg Zusätzlich stehen die projekttypischen Kompetenzen im Vordergrund der Arbeit in Viererteams: * Durchführung von Projekten und ihrer Phasenstruktur, * Planung von Projekt-und Teamarbeit. Zu den zu trainierenden Softskills zählen damit insbesondere Teamfähigkeit, Aneignung von Präsentationstechniken sowie eigenverantwortliches Arbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0533-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0533-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. Informatik",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Betriebssysteme",
        "Modul Nr.": "20-00-0550",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0550-pl Praktikum in der Lehre -Betriebssysteme0 Praktikum in der Lehre3",
            "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Grundlagen der Informatik III",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Vordiplom Informatik A oder Bachelorprüfung Betriebssysteme",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0550-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Vordiplom Informatik A oder Bachelorprüfung Betriebssysteme",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0550-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Siehe Literatur zu Betriebssysteme",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Digitaltechnik",
        "Modul Nr.": "20-00-0597",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0597-pr Praktikum in der Lehre -Digitaltechnik0 Praktikum in der Lehre3",
            "Lerninhalt": "",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und/oder dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Kenntnisse aus Technische Grundlagen der Informatik (TGDI) oder vergleichbarer Vorlesung.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0597-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Kenntnisse aus Technische Grundlagen der Informatik (TGDI) oder vergleichbarer Vorlesung.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0597-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - TK1",
        "Modul Nr.": "20-00-0683",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0683-pr Praktikum in der Lehre - TK1 0 Praktikum in der Lehre3",
            "Lerninhalt": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Qualifikationsziele_Lernergebnisse": "Kenntnisse der Thematik in TK1",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: TK1",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0683-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: TK1",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0683-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Informationsvisualisierung und Visual Analytics",
        "Modul Nr.": "20-00-0767",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0767-plPraktikum in der Lehre -Informationsvisualisierung und Visual Analytics5 Praktikum in der Lehre3",
            "Lerninhalt": "Dieser Kurs ermöglicht es Studierenden, die Haus- und Präsenzübungen für die Vorlesung 'Informationsvisualisierung und Visual Analytics' unter Anleitung durch die Lehrenden zu konzipieren, durchzuführen und die Lernergebnisse der Vorlesungsteilnehmer zu evaluieren.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung:-Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten-Übungen mit Studentengruppen konzipieren und durchführen-Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln-Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informationsvisualisierung und Visual Analytics",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informationsvisualisierung und Visual Analytics",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Graphische Datenverarbeitung II",
        "Modul Nr.": "20-00-0954",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0954-pl Praktikum in der Lehre -Graphische Datenverarbeitung II0 Praktikum in der Lehre3",
            "Lerninhalt": "Das Erstellen von Lehrmaterial, die Beurteilung und Betreuung von Übungen.",
            "Qualifikationsziele_Lernergebnisse": "Aufbereitung und Vermittlung des Vorlesungsinhaltes.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Der Vorlesungsinhalt von -Graphische Datenverarbeitung II'",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0954-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Der Vorlesungsinhalt von -Graphische Datenverarbeitung II'",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0954-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Internetsicherheit und Sicherheit in Mobilen Netzen",
        "Modul Nr.": "20-00-0957",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0957-pl Praktikum in der Lehre -Internetsicherheit und Sicherheit in Mobilen Netzen0 Praktikum in der Lehre3",
            "Lerninhalt": "Dieser Kurs befasst sich mit damit Lehrinhalte der Themenschwerpunkte Internetsicherheit und Sicherheit in Mobilen Netzen didaktisch aufzubereiten und durch begleitende praktische Übungen besser verständlich zu machen.Dies umfasst unter anderem: Die Implementierung von Systemen die in der Vorlesung behandelte Schwachstellen aufweisen und den Studierenden für praktische Übungen verfügbar gemacht werden; die Erstellung von Minitests zur Leistungskontrolle; die Konzeption von Materialien für leistungsschwache wie leistungsstarke Studenten um Inhalte der Vorlesung zu vertiefen; das Erstellen von anspruchsvollen Bonussystemen.",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung:- Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten- Praxisnahe Übungsformen konzipieren und erstellen- Übungen mit Studentengruppen aller Leistungsniveaus konzipieren und durchführen- Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln- Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Erfolgreicher Besuch der SEEMOO Veranstaltung für die das PIDL durchgeführt wird.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0957-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Erfolgreicher Besuch der SEEMOO Veranstaltung für die das PIDL durchgeführt wird.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0957-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Computernetzwerke und verteilte Systeme",
        "Modul Nr.": "20-00-0962",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0962-pl Praktikum in der Lehre -Computernetzwerke und verteilte Systeme0 Praktikum in der Lehre3",
            "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Computernetzwerke und verteilte Systeme (Übungskonzeption, Korrektur, Begleitung des Lernenden)",
            "Qualifikationsziele_Lernergebnisse": "",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Computernetzwerke und verteilte Systeme (ehemals NCS)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0962-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Computernetzwerke und verteilte Systeme (ehemals NCS)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0962-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Rechnerorganisation",
        "Modul Nr.": "20-00-0965",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0965-pl Praktikum in der Lehre -Rechnerorganisation0 Praktikum in der Lehre3",
            "Lerninhalt": "- Erstellen von Übungs- und Lehrmaterial zu Rechnerorganisation- Betreuung von Studierenden zu Themen der Rechnerorganisation, insbesondere unter Verwendung des neuen Lehrmaterials",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und&#47;oder dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Kenntnisse aus Technische Grundlagen der Informatik (TGDI), Rechnerorganisation oder vergleichbarer Vorlesung.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0965-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Kenntnisse aus Technische Grundlagen der Informatik (TGDI), Rechnerorganisation oder vergleichbarer Vorlesung.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0965-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - IT in der Grundlehre",
        "Modul Nr.": "20-00-0970",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0970-pl Praktikum in der Lehre - IT in der Grundlehre0 Praktikum in der Lehre3",
            "Lerninhalt": "Entwicklung von IT-basierten Konzepten für Vorlesung sowie Übungs-und Prüfungsbetrieb in Lehrveranstaltungen mit großen, heterogenen Teilnehmergruppen.",
            "Qualifikationsziele_Lernergebnisse": "Nach Besuch der Veranstaltung haben die Studierenden praktische Erfahrungen darin gesammelt, geeignete IT-basierte Konzepte für Vorlesung sowie Übungs-und Prüfungsbetrieb in Lehrveranstaltungen mit großen, heterogenen Teilnehmergruppen zu entwickeln und softwareseitig umzusetzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:FOP",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0970-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:FOP",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0970-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Computational Engineering und Robotik",
        "Modul Nr.": "20-00-0971",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0971-pl Praktikum in der Lehre -Computational Engineering und Robotik0 Praktikum in der Lehre3",
            "Lerninhalt": "- Ausarbeitung neuer Übungs- und Programmieraufgaben- Konzeption von Übungsblättern",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie Lerninhalte als Übungs-und Programmieraufgaben aufbereiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Voraussetzung: erfolgreiche Teilnahme an der Lehrveranstaltung \"Einführung in Computational Engineering (und Robotik)\"Empfohlen: erfolgreiche Teilnahme an \"Grundlagen der Robotik\"",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0971-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Voraussetzung: erfolgreiche Teilnahme an der Lehrveranstaltung \"Einführung in Computational Engineering (und Robotik)\"Empfohlen: erfolgreiche Teilnahme an \"Grundlagen der Robotik\"",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0971-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Software Engineering",
        "Modul Nr.": "20-00-0972",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0972-pl Praktikum in der Lehre -Software Engineering0 Praktikum in der Lehre3",
            "Lerninhalt": "Vorbereitung und Korrektur von Übungen, Abhalten von Übungsstunden, Betreuung von Praktischen Übungen",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können Sie - Lerninhalte in Form von Übungsaufgaben auf angemessener Abstraktionsebene aufbereiten- fachliche Inhalte aufbereiten und erklären (für die Zielgruppe der Studierenden) - Übungsgruppen betreuen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Sehr gute Kenntnisse in Software Engineering",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0972-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Sehr gute Kenntnisse in Software Engineering",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0972-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Computersystemsicherheit",
        "Modul Nr.": "20-00-0986",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0986-pl Praktikum in der Lehre -Computersystemsicherheit0 Praktikum in der Lehre3",
            "Lerninhalt": "- Ausarbeitung neuer Übungs- und Programmieraufgaben- Konzeption von Übungsblättern",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie Lerninhalte als Übungs-und Programmieraufgaben aufbereiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: erfolgreiche Teilnahme an der Lehrveranstaltung \"Computersystemsicherheit\"",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0986-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: erfolgreiche Teilnahme an der Lehrveranstaltung \"Computersystemsicherheit\"",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0986-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Einführung in den Compilerbau",
        "Modul Nr.": "20-00-0988",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0988-pl Praktikum in der Lehre -Einführung in den Compilerbau0 Praktikum in der Lehre3",
            "Lerninhalt": "- Erstellen von Übungs- und Lehrmaterial zu Einführung in den Compilerbau- Betreuung von Studierenden zu Themen der Einführung in den Compilerbau, insbesondere unter Verwendung des neuen Lehrmaterials",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung sind die Studierenden in der Lage, selbständig Lehrmaterialien zu Informatikthemen zu erstellen. Sie können das Material in Schulungen erfolgreich einsetzen und seine didaktische Wirksamkeit kritisch beurteilen. Sie können Studierende in direktem persönlichen Kontakt, aber auch über elektronische Kommunikationsmedien anleiten und betreuen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Kenntnisse aus Funktionale und Objektorientierte Programmierkonzepte, Algorithmen und Datenstrukturen, Einführung in den Compilerbau sowie Rechnerorganisation (oder vergleichbaren Veranstaltungen)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0988-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Kenntnisse aus Funktionale und Objektorientierte Programmierkonzepte, Algorithmen und Datenstrukturen, Einführung in den Compilerbau sowie Rechnerorganisation (oder vergleichbaren Veranstaltungen)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0988-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Ubiquitous / Mobile Computing",
        "Modul Nr.": "20-00-0996",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0996-pl Praktikum in der Lehre -Ubiquitous / Mobile Computing0 Praktikum in der Lehre3",
            "Lerninhalt": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Qualifikationsziele_Lernergebnisse": "Aufbereitung und Vermittlung des Vorlesungsinhaltes.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0996-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0996-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Public Key Infrastrukturen",
        "Modul Nr.": "20-00-1000",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1000-pl Praktikum in der Lehre - Public Key Infrastrukturen0 Praktikum 3",
            "Lerninhalt": "Vorbereitung und Korrektur von Übungen, Abhalten von Übungsstunden, Betreuung von Praktischen Übungen",
            "Qualifikationsziele_Lernergebnisse": "In einem Praktikum in der Lehre bearbeiten die Studierenden Probleme, die sowohl fachliche als auch didaktische Aspekte haben und wirken an der Umsetzung der vonihnen erarbeiteten Resultate mit.",
            "Voraussetzung_fuer_die_Teilnahme": "Public Key Infrastrukturen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1000-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Public Key Infrastrukturen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1000-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. Informatik",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Algorithmenvisualisierung",
        "Modul Nr.": "20-00-1036",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1036-pl Praktikum in der Lehre -Algorithmenvisualisierung0 Praktikum in der Lehre3",
            "Lerninhalt": "Im Rahmen des Praktikums in der Lehre Algorithmenvisualisierung werden ein Animationssystem weiterentwickelt, die Aufgabenstellungen des assoziierten Praktikums überarbeitet und die studentischen Abgaben im Rahmen des Praktikums betreut.",
            "Qualifikationsziele_Lernergebnisse": "Die Teilnehmer am Praktikum in der Lehre Algorithmenvisualisierung vertiefen ihre Kenntnisse im Bereich der Visualisierung sowie der Algorithmen und Datenstrukturen. Gleichzeitig erhalten sie Einblicke in die Lehrtätigkeit durch Betreuung von Studierenden, Bewertung von Aufgaben und Überarbeitung von Aufgaben.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Das Praktikum \"Visualisierung und Animation von Algorithmen und Datenstrukturen\" (LV-Nr. 20-00-0344-pr) oder eine äquivalente Leistung muss vor Belegung des Praktikums erfolgreich absolviert worden sein, um adäquate Grundkenntnisse nachweisen zu können.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1036-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Das Praktikum \"Visualisierung und Animation von Algorithmen und Datenstrukturen\" (LV-Nr. 20-00-0344-pr) oder eine äquivalente Leistung muss vor Belegung des Praktikums erfolgreich absolviert worden sein, um adäquate Grundkenntnisse nachweisen zu können.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1036-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Data Management",
        "Modul Nr.": "20-00-1040",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1040-pl Praktikum in der Lehre - Data Management0 Praktikum in der Lehre3",
            "Lerninhalt": "Erstellung von Übungs- und Vorlesungsmaterial",
            "Qualifikationsziele_Lernergebnisse": "Erfahrung in der Betreuung von Studierenden im Themenbereich Datenmanagement, mit dem Fokus auf das neu erstelle Übungs- und Vorlesungsmaterial",
            "Voraussetzung_fuer_die_Teilnahme": "Informationsmanagement (20-00-0015-iv)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1040-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Informationsmanagement (20-00-0015-iv)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1040-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. Informatik",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Deep Learning for Natural Language Processing",
        "Modul Nr.": "20-00-1044",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1044-pl Praktikum in der Lehre - Deep Learning for Natural Language Processing0 Praktikum in der Lehre3",
            "Lerninhalt": "Vorbereitung, Abhalten und Korrektur eines Shared Tasks. Bei einem Shared Task erhalten die Studenten ein aktuelles Forschungsproblem und müssen für dieses die Methoden aus der Vorlesung nutzen um innovative Lösungen zu entwickeln. Die Lösungen können quantitativ miteinander verglichen werden, um die beste Lösung zu identifizieren. Deine Aufgabe ist es einen entsprechenden Datensatz auszuwählen und vorzubereiten, die Studenten in die Aufgabe einzuführen sowie die abschließende quantitative und qualitative Bewertung der entwickelten Systeme. Während des Shared Tasks müssen Rückfragen beantwortet werden und falls nötig individuelle Hilfe angeboten werden. Neben dem Shared Task erfolgt eine Unterstützung bei den wöchentlichen Übungen, beispielsweise für die Beantwortung von Fragen zu den Hausübungen oder Unterstützung bei der Korrektur von Übungen.",
            "Qualifikationsziele_Lernergebnisse": "In einem Praktikum der Lehre bearbeiten die Studierenden Probleme, die sowohl fachliche als auch didaktische Aspekte haben und wirken an der Umsetzung der von ihnen erarbeitet Resultate mit.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Deep Learning for Natural Language Processing",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1044-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Deep Learning for Natural Language Processing",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1044-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. Informatik",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - SIT",
        "Modul Nr.": "20-00-1045",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1045-pl Praktikum in der Lehre - SIT 0 Praktikum in der Lehre3",
            "Lerninhalt": "Unterstützung der Lehre wie z.B., Betreuung von Übungsgruppen, Sprechstunden, o.ä.",
            "Qualifikationsziele_Lernergebnisse": "Die Teilnehmer am Praktikum in der Lehre vertiefen ihre Kenntnisse in verschiedenen Bereiche der IT Sicherheit. Zusätzlich erhalten sie Einblicke in die Lehrtätigkeit durch Betreuung von Studierenden und Überarbeitung von Aufgaben.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Erfolgreiche Absolvierung der \"zugehörigen SIT\" Veranstaltung (z.B. Einführung in die IT-Sicherheit beim PidL für die Veranstaltung IT-Sicherheit) oder entsprechende Kenntnisse.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1045-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Erfolgreiche Absolvierung der \"zugehörigen SIT\" Veranstaltung (z.B. Einführung in die IT-Sicherheit beim PidL für die Veranstaltung IT-Sicherheit) oder entsprechende Kenntnisse.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1045-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Systemnahe und Parallele Programmierung",
        "Modul Nr.": "20-00-1049",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1049-pl Praktikum in der Lehre -Systemnahe und Parallele Programmierung0 Praktikum in der Lehre3",
            "Lerninhalt": "Betreuung und Durchführung von Übungen sowie vorlesungsbegleitenden Praktika der Vorlesung -Systemnnahe und Parallele Programmierung'.",
            "Qualifikationsziele_Lernergebnisse": "Studenten sind in der Lage:- Lehrinhalte in Übungen zu präsentieren und zu erklären- Praktikumsgruppen zu betreuen- Methoden zur Kontrolle des Lernerfolgs systematisch anzuwenden",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Kenntnisse in C/C++ und paralleler Programmierung- Deutsch",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1049-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Kenntnisse in C/C++ und paralleler Programmierung- Deutsch",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1049-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. Informatik",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Einführung in die Kryptographie",
        "Modul Nr.": "20-00-1059",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1059-pl Praktikum in der Lehre -Einführung in die Kryptographie0 Praktikum in der Lehre3",
            "Lerninhalt": "Betreuung und Durchführung von Übungen sowie vorlesungsbegleitende Praktika der Vorlesung -Einführung in die Kryptographie'",
            "Qualifikationsziele_Lernergebnisse": "Studenten sind in der Lage:- Lehrinhalte in Übungen zu präsentieren und zu erklären- Praktikumsgruppen zu betreuuen- Methoden zur Kontrolle des Lernerfolges systematisch anzuwenden",
            "Voraussetzung_fuer_die_Teilnahme": "- Studenten im Master- Interesse an Kryptographie- Bestehen der Vorlesung -Einführung in die Kryptographie'- Deutsch",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1059-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "- Studenten im Master- Interesse an Kryptographie- Bestehen der Vorlesung -Einführung in die Kryptographie'- Deutsch",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1059-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Echtzeitsysteme",
        "Modul Nr.": "20-00-1060",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1060-pl Praktikum in der Lehre -Echtzeitsysteme0 Praktikum in der Lehre3",
            "Lerninhalt": "Konzeption, Betreuung und Durchführung von Übungen sowie vorlesungsbegleitenden Praktika der Vorlesung -Echtzeitsysteme'.",
            "Qualifikationsziele_Lernergebnisse": "Studenten sind in der Lage:- Lehrinhalte in Übungen zu präsentieren und zu erklären- Praktikumsgruppen zu betreuen- Methoden zur Kontrolle des Lernerfolgs systematisch anzuwenden",
            "Voraussetzung_fuer_die_Teilnahme": "Erfolgreiche Absolvierung der Echtzeitsysteme-Veranstaltung oder entsprechende Kenntnisse.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1060-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Erfolgreiche Absolvierung der Echtzeitsysteme-Veranstaltung oder entsprechende Kenntnisse.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1060-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Statistisches Maschinelles Lernen",
        "Modul Nr.": "20-00-1070",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1070-pl Praktikum in der Lehre -Statistisches Maschinelles Lernen0 Praktikum in der Lehre3",
            "Lerninhalt": "Unterstützung der Lehre wie z.B., Betreuung von Übungsgruppen, Sprechstunden, o.ä.",
            "Qualifikationsziele_Lernergebnisse": "Vorbereitung auf eigenständige Lehrtätigkeit.",
            "Voraussetzung_fuer_die_Teilnahme": "Erfolgreiche Absolvierung der Veranstaltung Statistisches Maschinelles Lernen oder entsprechende Kenntnisse.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1070-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Erfolgreiche Absolvierung der Veranstaltung Statistisches Maschinelles Lernen oder entsprechende Kenntnisse.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1070-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Modellierung, Spezifikation und Semantik",
        "Modul Nr.": "20-00-1071",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1071-pl Praktikum in der Lehre -Modellierung, Spezifikation und Semantik0 Praktikum in der Lehre3",
            "Lerninhalt": "Mitarbeit in der Ausrichtung der Lehrveranstaltung Modellierung, Spezifikation und Semantik (Übungskonzeption, Korrektur, Begleitung des Lernenden)",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten können nach erfolgreicher Durchführung der Veranstaltung:- Lehrinhalte aus der Vorlesung für Haus- und Präsenzübungen aufbereiten- Praxisnahe Übungsformen konzipieren und erstellen- Übungen mit Studentengruppen aller Leistungsniveaus konzipieren und durchführen- Ein Konzept für aufeinander aufbauende praktische Übungen entwickeln- Methoden der Lernkontrolle für die Lerninhalte der Vorlesung anwenden",
            "Voraussetzung_fuer_die_Teilnahme": "Kenntnisse aus Modellierung, Spezifikation und Semantik oder vergleichbarer Vorlesung",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1071-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Kenntnisse aus Modellierung, Spezifikation und Semantik oder vergleichbarer Vorlesung",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1071-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "2.1.1. Praktikum in der Lehre - Graphische Datenverarbeitung",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1101-plPraktikum in der Lehre -Graphische Datenverarbeitung I0 Praktikum in der Lehre3",
            "Lerninhalt": "Das Erstellen von Lehrmaterial, die Beurteilung und Betreuung von Übungen.",
            "Qualifikationsziele_Lernergebnisse": "Es sollen Fähigkeiten erlernt werden, geeignete Lernmaterialien für Schulungen in Informatikthemen selbst zu erstellen, ihren Einsatz kritisch zu begleiten und dabei auch die Lernenden zu betreuen und anzuleiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen wird: - Besuch der Veranstaltung \"Graphische Datenverarbeitung I\" mit sehr guter Abschlussnote- Programmierkenntnisse in C++ und OpenGL",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1101-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen wird: - Besuch der Veranstaltung \"Graphische Datenverarbeitung I\" mit sehr guter Abschlussnote- Programmierkenntnisse in C++ und OpenGL",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1101-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Foundations of Language Technology (FOLT)",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1110-plPraktikum in der Lehre -Foundations of Language Technology (FOLT0 Praktikum in der Lehre3",
            "Lerninhalt": "Vorbereitung, Abhalten und Korrektur eines Shared Tasks, Anbieten von Sprechstunden für die Lerninhalte, Halten von Tutorien, und vergleichbare Aufgaben für die Lehre",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss der Veranstaltung sind die Studierenden in der Lage, eigenständig ein Tutorium zu veranstalten, eine Shared Task vorzubereiten, und vergleichbare Aufgaben der Lehre zu übernehmen etc.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen wird das vorherige Belegen von Foundations of Language Technology (FOLT) oder vergleichbarer Kurse (z.B. Deep Learning for Natural Language Processing (DL4NLP))",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1110-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen wird das vorherige Belegen von Foundations of Language Technology (FOLT) oder vergleichbarer Kurse (z.B. Deep Learning for Natural Language Processing (DL4NLP))",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1110-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum in der Lehre - Technische Informatik",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "5 CP",
        "Arbeitsaufwand": "150 h",
        "Selbststudium": "105 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1111-plPraktikum in der Lehre -Technische Informatik0 Praktikum in der Lehre3",
            "Lerninhalt": "- Erstellen von Übungs- und Lehrmaterial zu Veranstaltungen der Technischen Informatik- Betreuung von Studierenden zu Themen der Technischen Informatik, insbesondere unter Verwendung des neuen Lehrmaterials",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung sind die Studierenden in der Lage, selbständig Lehrmaterialien zu Informatikthemen zu erstellen. Sie können das Material in Schulungen erfolgreich einsetzen und seine didaktische Wirksamkeit kritisch beurteilen. Sie können Studierende in direktem persönlichen Kontakt, aber auch über elektronische Kommunikationsmedien anleiten und betreuen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Kenntnisse aus Digitaltechnik, Rechnerorganisation, Architekturen und Entwurf von Rechnersystemen etc. (oder vergleichbaren Veranstaltungen)",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1111-pl] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Kenntnisse aus Digitaltechnik, Rechnerorganisation, Architekturen und Entwurf von Rechnersystemen etc. (oder vergleichbaren Veranstaltungen)",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1111-pl] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": "ModulhandbuchB. Sc./M. Sc. InformatikStudienleistungenPraktika, Projektpraktika und ähnliche Veranstaltungen"
        }
    },
    {
        "Modulname": "Hacker Contest",
        "Modul Nr.": "20-00-0114",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0114-pr Hacker Contest 0 Praktikum 4",
            "Lerninhalt": "Das Praktikum wird jedes mal an einem neuen Szenario ausgerichtet. Dieses Szenario (z.B. Internet Service Provider) gibt den Rahmen vor, welche Systeme aufgebaut undwelche Arten von Attacken untersucht werden sollen.Allgemein verläuft das Praktikum in mehreren Runden:- Aufbau der Systeme- Angriffe- Dokumentation der Angriffe und mögliche Gegenmaßnahmen- Härten der Systeme",
            "Qualifikationsziele_Lernergebnisse": "- Arbeit im Team - Systematisches und sicheres Planen und Warten von IT-Systemen - Erkennen von Angriffen auf IT-Systeme - Analyse und Behebung von Schwachstellen - Verständnis für praktische Sicherheitsprobleme - Anwendung und Weiterentwicklung von Sicherheitstools ",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundkenntnisse in IT-Sicherheit, Administration von Netzen und Rechnern",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0114-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundkenntnisse in IT-Sicherheit, Administration von Netzen und Rechnern",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0114-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Internet - Praktikum Telekooperation",
        "Modul Nr.": "20-00-0131",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0131 -prInternet - Praktikum Telekooperation6 Praktikum 4",
            "Lerninhalt": "Das Praktikum selbst ist in drei Teile unterteilt. In jedem Teil wird es eine Vorlesung geben, um das Thema einzuführen und neue Arbeitswerkzeuge vorzustellen. Wichtige Themen sind:- Einführung in Java Netzwerk Programmierung und HTTP- Peer-to-peer technologies- Web caching- Internet Standards",
            "Qualifikationsziele_Lernergebnisse": "Studierende haben nach Besuch dieser Veranstaltung Wissen über zur Zeit aktuell aufkommende Technologien erworben. Ebenso haben Studierende diese Technologien (Bausteine der zukünftigen Generation von Internetdiensten) praktisch eingesetzt und Erfahrungen bei der Nutzung, Entwicklung und Integration dieser Technologien gesammelt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: -Computer-Netzwerke und verteilte Systeme'",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: -Computer-Netzwerke und verteilte Systeme'",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Handbook of Research: Ubiquitous Computing Technology for Real Time Enterprises edited by Prof. Dr. Max Mühlhäuser, Dr. Iryna Gurevych, 2008, Information Science Reference, ISBN-10: 1599048329",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Algorithmen",
        "Modul Nr.": "20-00-0189",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0189-prPraktikum Algorithmen 6 Praktikum 4",
            "Lerninhalt": "Lösung eines algorithmischen Problems aus der Praxis und Umsetzung der Lösung in Software. Konkrete Themenstellung nach Absprache in der Vorbesprechung.",
            "Qualifikationsziele_Lernergebnisse": "In dieser Veranstaltung erwerben Studierende die Kompetenz zur Lösung algorithmischer Problemstellungen aus der Praxis und die Fähigkeit, Algorithmen in praktisch effiziente Implementationen umzusetzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - Kenntnis einer geeigneten Programmiersprache (z.B. Java / C++)- Vorwissen über grundlegende Algorithmen und Datenstrukturen",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - Kenntnis einer geeigneten Programmiersprache (z.B. Java / C++)- Vorwissen über grundlegende Algorithmen und Datenstrukturen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Serious Games Praktikum",
        "Modul Nr.": "20-00-0236",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0236-prSerious Games Praktikum 6 Praktikum 4",
            "Lerninhalt": "In dem Praktikum werden für aktuelle Themen aus dem Bereich Serious Games (beispielsweise für Bildung, Gesundheit und Sport) Konzepte entwickelt und prototypisch realisiert.Die Themen haben jeweils Bezug zur aktuell laufenden Forschung des Fachgebiets, teilweise in Kooperation mit Partnern aus der Games Industrie und/oder Serious Games Anwendern.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eine praktische Aufgabenstellung aus dem -Serious Games'-Umfeld eigenständig bearbeiten sowie die dafür nötige Software konzipieren und prototypisch umsetzen. Außerdem können sie die von ihnen erzielten Ergebnisse einem Publikum unter Anwendung von verschiedenen Präsentationstechniken vorstellen sowie eine dazugehörige Fachdiskussion aktiv bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Programmierkenntnisse (die Programmiersprache ist jeweils abhängig von Thema und kann teilweise frei gewählt werden).",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Programmierkenntnisse (die Programmiersprache ist jeweils abhängig von Thema und kann teilweise frei gewählt werden).",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Keine",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Algorithmen II (Vertiefung)",
        "Modul Nr.": "20-00-0276",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0276-prPraktikum Algorithmen II (Vertiefung)6 Praktikum 4",
            "Lerninhalt": "Lösung eines fortgeschrittenen algorithmischen Problems aus der Praxis und Umsetzung der Lösung in Software.Konkrete Themenstellung nach Absprache in der Vorbesprechung.",
            "Qualifikationsziele_Lernergebnisse": "In dieser Veranstaltung vertiefen Studierende die Kompetenz zur Lösung algorithmischer Problemstellungen aus der Praxis und die Fähigkeit, Algorithmen in praktisch effiziente Implementationen umzusetzen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Baut auf Praktikum Algorithmen auf",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Baut auf Praktikum Algorithmen auf",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Implementierung von Programmiersprachen",
        "Modul Nr.": "20-00-0306",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0306-pr Implementierung von Programmiersprachen0 Praktikum 4",
            "Lerninhalt": "Es werden Konzepte der Implementierung von Programmiersprachen vermittelt. Ferner werden diese Konzepte angewendet, um Erweiterungen für Programmiersprachen zu implementieren.",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit, eine professionelle Aufgabe aus der Informatik selbstständig und erfolgreich nach den anerkannten Grundsätzen der Profession zu bearbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Es wird kein Vorwissen vorausgesetzt. Jedoch sind gute Programmiererfahrungen sowie Kenntnisse über Kompilerbau und virtuelle Maschinen von Vorteil.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0306-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Es wird kein Vorwissen vorausgesetzt. Jedoch sind gute Programmiererfahrungen sowie Kenntnisse über Kompilerbau und virtuelle Maschinen von Vorteil.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0306-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Integriertes Robotik-Projekt 1",
        "Modul Nr.": "20-00-0324",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0324-prIntegriertes Robotik-Projekt 1 6 Praktikum 4",
            "Lerninhalt": "- selbständige Bearbeitung einer konkreten Aufgabenstellung aus der Entwicklung und Anwendung moderner Robotersysteme unter Anleitung und (nach Möglichkeit) in einem Team von Entwicklern- Einarbeitung in den relevanten Stand der Forschung und Technik- Erarbeitung eines Lösungsvorschlags und dessen Umsetzung und Implementierung- Anwendung und Evaluierung anhand von Roboterexperimenten oder -simulationen- Dokumentation von Aufgabenstellung, Vorgehensweise, Implementierung und Ergebnissen in einem Abschlussbericht und Durchführung einer Abschlusspräsentation",
            "Qualifikationsziele_Lernergebnisse": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten Bereichen, Teilsystemen und Methoden moderner Robotersysteme sowie vertiefte Fähigkeiten zu deren Entwicklung, Implementierung und experimentellen Evaluation. Sie trainieren Präsentationsfähigkeiten und (nach Möglichkeit) Fähigkeit zur Arbeit in einem Team.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese durch die Lehrveranstaltung 'Grundlagen der Robotik' vermittelt werden- spezifische Programmierkenntnisse je nach Aufgabenstellung",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese durch die Lehrveranstaltung 'Grundlagen der Robotik' vermittelt werden- spezifische Programmierkenntnisse je nach Aufgabenstellung",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Aktuelle Literaturhinweise werden in der Veranstaltung gegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Visualisierung und Animation von Algorithmen und Datenstrukturen",
        "Modul Nr.": "20-00-0344",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0344-pr Visualisierung und Animation von Algorithmen und Datenstrukturen0 Praktikum 4",
            "Lerninhalt": "Im Rahmen des Praktikums beschäften wir uns mit der Frage, wie die Dynamik von Algorithmen und Datenstrukturen sinnvoll dargestellt werden kann. Dazu wird die Erstellung solcher Animation praktisch an einem System erprobt.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Besuch der Veranstaltung sind Studierende in der Lage,- die zur Verfügung gestellte API zur Animation von Algorithmen anzuwenden.- einen gegebenen Algorithmus auf seine zentralen Elemente zu untersuchen.- jeweils eine Visualisierung für die zentralen Elemente von zwei ausgewählten Algorithmus zu konstruieren.- die erstellten Visualisierungen durch die geeignete Wahl von Parametern zu generalisieren.- kritisch zu beurteilen, ob die gewählte Visualisierung den Lernprozess beim Betrachter unterstützt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Die Teilnehmer benötigen neben guten Java-Kenntnissen Verständnis für die Algorithmen und Datenstruktur, die meist in GdI 2 gelehrt werden.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0344-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Die Teilnehmer benötigen neben guten Java-Kenntnissen Verständnis für die Algorithmen und Datenstruktur, die meist in GdI 2 gelehrt werden.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0344-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Integriertes Robotik-Projekt 2",
        "Modul Nr.": "20-00-0357",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0357-prIntegriertes Robotik-Projekt 2 6 Praktikum 4",
            "Lerninhalt": "- selbständige Bearbeitung einer konkreten Aufgabenstellung aus der Entwicklung und Anwendung moderner Robotersysteme unter Anleitung und (nach Möglichkeit) in einem Team von Entwicklern- Einarbeitung in den relevanten Stand der Forschung und Technik- Erarbeitung eines Lösungsvorschlags und dessen Umsetzung und Implementierung- Anwendung und Evaluierung anhand von Roboterexperimenten oder -simulationen- Dokumentation von Aufgabenstellung, Vorgehensweise, Implementierung und Ergebnissen in einem Abschlussbericht und Durchführung einer Abschlusspräsentation",
            "Qualifikationsziele_Lernergebnisse": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in ausgewählten Bereichen, Teilsystemen und Methoden moderner Robotersysteme sowie vertiefte Fähigkeiten zu deren Entwicklung, Implementierung und experimentellen Evaluation. Sie trainieren Präsentationsfähigkeiten und (nach Möglichkeit) Fähigkeit zur Arbeit in einem Team.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese durch die Lehrveranstaltung 'Grundlagen der Robotik' vermittelt werden- spezifische Programmierkenntnisse je nach Aufgabenstellung- Teilnahme am ersten Teil 'Integrierte",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - grundlegende Fachkenntnisse und methodische Fähigkeiten in der Robotik, wie diese durch die Lehrveranstaltung 'Grundlagen der Robotik' vermittelt werden- spezifische Programmierkenntnisse je nach Aufgabenstellung- Teilnahme am ersten Teil 'Integrierte",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Aktuelle Literaturhinweise werden in der Veranstaltung gegeben.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum aus Künstlicher Intelligenz",
        "Modul Nr.": "20-00-0412",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0412-prPraktikum aus Künstlicher Intelligenz6 Praktikum 4",
            "Lerninhalt": "Studierende müssen alleine oder in Gruppen ein konkretes praktisches Problem aus dem Bereich der Künstlichen Intelligenz bearbeiten und mit Hilfe von selbst zu entwickelnden oder dem Einsatz von bestehenden Software-Werkzeugen lösen. Beachten Sie bitte die Informationen auf der Homepage des Fachgebiets (http://www.ke.informatik.tu-darmstadt.de/lehre/)!In Semestern, in denen die Veranstaltung nicht auf diesen Seiten angekündigt wird, besteht oftmals dennoch die Möglichkeit zur Bearbeitung individueller Themen (auf Nachfrage).",
            "Qualifikationsziele_Lernergebnisse": "Nach Bearbeitung dieses Praktikums sollten die Studierenden in der Lage sein- Einsatzmöglichkeiten von Werkzeugen der künstlichen Intelligenz zu erkennen- für gegebene Aufgaben passende Werkzeuge auszuwählen und selbständig einzusetzen- den Erfolg des Einsatzes solcher Techniken evaluieren und messen zu können",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Basic knowledge in artificial intelligence",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Basic knowledge in artificial intelligence",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Visual Computing",
        "Modul Nr.": "20-00-0418",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0418-prPraktikum Visual Computing 6 Praktikum 4",
            "Lerninhalt": "Im Rahmen dieses Praktikums werden ausgewählte Themen aus dem Bereich Visual Computing von den Studierenden bearbeitet und am Ende des Praktikums in einem Vortrag vorgestellt. Die konkreten Themen wechseln von Semester zu Semester und sollten direkt mit einem der Lehrenden angesprochen werden.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Abschluss des Praktikums sind die Studenten dazu in der Lage, selbständig ein Problem aus dem Bereich des Visual Computings zu analysieren, zu lösen und die Ergebnisse zu bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: praktische Programmierkenntnisse, z. B. in Java, C++Grundkenntnisse oder Interesse, sich mit Fragestellungen des Visual Computing zu befassenempfohlen wird der Besuch mindestens einer der Einführungsvorlesungen im Bereich Visual Computing",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: praktische Programmierkenntnisse, z. B. in Java, C++Grundkenntnisse oder Interesse, sich mit Fragestellungen des Visual Computing zu befassenempfohlen wird der Besuch mindestens einer der Einführungsvorlesungen im Bereich Visual Computing",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikB. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Forschungsprojekt Telekooperation",
        "Modul Nr.": "20-00-0485",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0485-prForschungsprojekt Telekooperation9 Projektpraktikum 6",
            "Lerninhalt": "Forschungsrelevante Projektarbeit.An einem individuellen Projekt soll das eigenständige Forschen unter Anleitung erlernt werden. Dabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer definiert. Mögliche Themenfelder:* Multimodale Interaction * Multitouch* Assistenzsysteme* Sensor Fusion",
            "Qualifikationsziele_Lernergebnisse": "Studierende kennen nach erfolgreichem Besuch der Veranstaltung die grundlegenden Methoden der Forschungsarbeit von der Idee bis zur fertigen Publikation. Sie verstehen wie sie komplexe Forschungsfragen in Teilprobleme zerlegen und umfassend beantworten können. Sie können die Qualität der Ergebnisse durch umfassende Evaluation bewerten und angemessen darüber berichten.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "variierend",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Java Spiele-Framework",
        "Modul Nr.": "20-00-0522",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0522-pr Java Spiele-Framework 0 Praktikum 4",
            "Lerninhalt": "Grundlagen von Frameworks Framework-Entwicklung mittels Eclipse Model-View-Controller Pattern Teamorientiertes Arbeiten Entwurf für gute Nutzbarkeit",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Besuch der Veranstaltung sind Studierende in der Lage,- das zur Verfügung gestellte Framework zur Programmierung von Computerspielen anzuwenden.- ein lauffähiges Computerspiel in einer Kleingruppe zu entwickeln.- die funktionalen Anforderungen an ein Computerspiel zu bestimmen, diese in zusammenhängende Teilbereiche zu klassifizieren und sie im Anspruch der Realisierung realistisch zu kategorisieren.- eine Musteraufgabenstellung auf eine für Studierende des ersten Semesters geeignete Aufgabenstellung zur Implementierung des gleichen Computerspiels zu übertragen.- öffentliche und private Tests für das eigene Computerspiele zu entwickeln, um damit die Funktionalität und Korrektheit der studentischen Lösung zu bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Solide Kenntnisse in Java",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0522-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Solide Kenntnisse in Java",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0522-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittenes Praktikum Visual Computing",
        "Modul Nr.": "20-00-0537",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0537-prFortgeschrittenes Praktikum Visual Computing6 Praktikum 4",
            "Lerninhalt": "Im Rahmen dieses Praktikums werden ausgewählte fortgeschrittene Themen aus dem Bereich Visual Computing von den Studierenden bearbeitet und am Ende des Praktikums in einem Vortrag vorgestellt. Die konkreten Themen wechseln von Semester zu Semester und sollten direkt mit einem der Lehrenden angesprochen werden.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Abschluss des Praktikums sind die Studenten dazu in der Lage, selbständig ein fortgeschrittenes Problem aus dem Bereich des Visual Computings zu analysieren, zu lösen und die Ergebnisse zu bewerten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: praktische Programmierkenntnisse, z. B. in Java, C++Grundkenntnisse in Visual Computing zu befassenempfohlen wird der Besuch mindestens einer der Einführungsvorlesungen im Bereich Visual Computing sowie des Praktikums Visual Computing",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: praktische Programmierkenntnisse, z. B. in Java, C++Grundkenntnisse in Visual Computing zu befassenempfohlen wird der Besuch mindestens einer der Einführungsvorlesungen im Bereich Visual Computing sowie des Praktikums Visual Computing",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Teamleitung im Bachelorpraktikum",
        "Modul Nr.": "20-00-0541",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0541-pr Teamleitung im Bachelorpraktikum0 Praktikum 4",
            "Lerninhalt": "Die Hauptaufgabe und Verantwortung eines Teamleiters ist die Koordination von zwei bis drei Bachelorpraktikumsgruppen, um die Erreichung der Projektziele der Gruppen sicher zu stellen. Die Verantwortung, Aufgaben und Befugnisse der Teamleiter sind im Einzelnen: - Maßgeblich verantwortlich für die Erreichung des Projektziels. - Verantwortung für die Planung, Einhaltung und Protokollierung des Projektverlaufs. - Beurteilung der Machbarkeit der Aufgabenstellung und Sicherstellung, dass die Aufgabenstellung hinreichend präzise ist. - Beratung des Teams während des Projektes. - Qualitätssicherung aller erstellten Dokumente und Präsentationen. -Leitung von Teamsitzungen.",
            "Qualifikationsziele_Lernergebnisse": "Leitung eines Projektteams",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:vertiefte Kenntnisse im Bereiche Software Engineering",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0541-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:vertiefte Kenntnisse im Bereiche Software Engineering",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0541-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Sichere Mobile Netze",
        "Modul Nr.": "20-00-0552",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0552-prPraktikum Sichere Mobile Netze 6 Praktikum 4",
            "Lerninhalt": "Das Praktikum Sichere Mobile Netze behandelt die angewandte Softwareentwicklung und Hardware-Software Entwicklung in den Themenbereichen Kommunikationsnetze, Sicherheit, Mobile Netze und Drahtloser Kommunikation bzw. der Kombination dieser Bereiche. Ziel ist das Lösen einer Problemstellung im Team aus den genannten Bereichen durch Implementierung in Software bzw. Hardware/Software.Lerninhalte:- Lösen einer Fragestellung im Bereich Kommunikationsnetze, Sicherheit, Mobile Netze und Drahtloser Kommunikation- Rechereche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen- Konzipieren einer Softwarearchitektur bzw. kombinierten Hardware-Software Architektur- Entwerfen eines auf die Zielplattform angepassten Hardware-/Softwaredesigns- Prototypische Umsetzung auf der ausgewählten Zielplattform- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße- Dokumentation der erstellten Lösung",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit Problemstellungen im Bereich Sichere Mobile Netze softwaretechnisch zu lösen. Die Studierenden haben hierzu Kenntnisse im Entwurf/der Umsetzung komplexer Protokolle bzw. Anwendungen in einem/mehreren der Bereiche Kommunikationsnetze, Sicherheit, Mobile Netze und Drahtloser Kommunikation erlangt. Die Studierenden sind in der Lage die gewählten Protokolle und Anwendungen zu implementieren, zu testen und deren Funktionsfähigkeit und Leistungsfähigkeit zu evaluieren. Sie sind in der Lage die erstellten Softwareartefakte verständlich zu dokumentieren und die erzielten Projektfortschritten und -ergebnissen verständlich zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets SEEMOO",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des Fachgebiets SEEMOO",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Sichere Mobile Netze",
        "Modul Nr.": "20-00-0553",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0553-ppProjektpraktikum Sichere Mobile Netze9 Projektpraktikum 6",
            "Lerninhalt": "Das Projektpraktikum Sichere Mobile Netze behandelt die angewandte Softwareentwicklung und Hardware-Software Entwicklung in den Themenbereichen Kommunikationsnetze, Sicherheit, Mobile Netze und Drahtloser Kommunikation bzw. der Kombination dieser Bereiche. Ziel ist das eigenständige Bearbeiten eines Entwicklungsprojektes im Team.Lerninhalte:- Eigenständiges Bearbeiten eines Entwicklungsprojektes im Bereich Kommunikationsnetze, Sicherheit, Mobile Netze und Drahtloser Kommunikation- Projektplanung und Projektmanagement- Rechereche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen- Konzipieren einer Softwarearchitektur bzw. kombinierten Hardware-Software Architektur- Entwerfen eines auf die Zielplattform angepassten Hardware-/Softwaredesigns- Prototypische Umsetzung auf der ausgewählten Zielplattform- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße- Dokumentation der erstellten Lösung sowie ausführliche Dokumentation des Projektmanagements",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit komplexe Problemstellungen im Bereich Sichere Mobile Netze softwaretechnisch zu lösen. Die Studierenden können hierzu eigenständig ein Projekt definieren, verwalten und durchführen. Die Studierenden haben Kenntnisse im Entwurf/der Umsetzung komplexer Protokolle bzw. Anwendungen in einem/mehreren der Bereiche Kommunikationsnetze, Sicherheit, Mobile Netze und Drahtloser Kommunikation erlangt. Die Studierenden sind in der Lage die gewählten Protokolle und Anwendungen zu implementieren, zu testen und deren Funktionsfähigkeit und Leistungsfähigkeit zu evaluieren. Sie sind in der Lage die Projektplanung und -verwaltung sowie die erstellten Softwareartefakte verständlich zu dokumentieren und die erzielten Projektfortschritten und -ergebnissen verständlich zu präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des FachgebietsSEEMOO",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreiche Teilnahme an einer Integrierten Veranstaltung des FachgebietsSEEMOO",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Internet- und Web-basierte SystemeM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Themenspezifisch ausgewählte, aktuelle wissenschaftliche Veröffentlichungen",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Advanced User Interfaces",
        "Modul Nr.": "20-00-0570",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0570-prAdvanced User Interfaces 6 Praktikum 4",
            "Lerninhalt": "- Analyse von Requirements für eine gegebene Problemstellung- Ausarbeitung und Präsentation eines User Interface Konzepts- Prototypische Implementierung des Konzepts",
            "Qualifikationsziele_Lernergebnisse": "Studierende haben einen Einblick in die Prinzipien und Methoden zum Entwurf und zur Entwicklung multimedialer, kollaborativer und adaptiver Bernutzungsschnittstellen an Hand einer praktischen Anwendung unter Berücksichtigung verschiedener Kontextbedingungen bekommen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - Interesse an neuen, innovativen Benutzungsschnittstellen- Wünschenswert sind Grundkenntnisse der Human Computer Interaction- gute Programmierkenntnisse (C#/WPF und/oder Java)",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - Interesse an neuen, innovativen Benutzungsschnittstellen- Wünschenswert sind Grundkenntnisse der Human Computer Interaction- gute Programmierkenntnisse (C#/WPF und/oder Java)",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Abhängig von der Aufgabenstellung",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum zu Algorithmen für Hardware-Entwurfswerkzeuge",
        "Modul Nr.": "20-00-0571",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0571-prPraktikum zu Algorithmen für Hardware-Entwurfswerkzeuge6 Praktikum 4",
            "Lerninhalt": "- Realisieren von Hardware-Entwurfswerkzeugen aus dem Bereich Layout-Synthese, speziell zu Themen wie Timing Analyse, Platzierung und Verdrahtung- Evaluieren der Ergebnisqualität und Rechenzeit- und Speicheranforderungen der eigenen Werkzeuge im Vergleich zu existierenden Implementierungen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eigenständig Hardware-Entwurfswerkzeuge für eine vorgegebene Zieltechnologie von integrierten Schaltungen erstellen. Sie können ihre Werkzeuge bezüglich verschiedener Gütemaße evaluieren und mit anderen existierenden Implementierungen vergleichen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Der erfolgreiche Besuch bzw. die aktive parallele Teilnahme an der Veranstaltung 'Algorithmen für Hardware-Entwurfswerkzeuge' ist dringend empfohlen.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Der erfolgreiche Besuch bzw. die aktive parallele Teilnahme an der Veranstaltung 'Algorithmen für Hardware-Entwurfswerkzeuge' ist dringend empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Bereitgestellte wissenschaftliche Arbeiten zu den vorgeschlagenen Basisverfahren.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Implementierung und Forensik und Mediensicherheit",
        "Modul Nr.": "20-00-0603",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0603-prImplementierung und Forensik und Mediensicherheit6 Praktikum 4",
            "Lerninhalt": "Praktische Anwendung von Algorithmen in den Bereichen Robuste Hashverfahren, Image Registration, File Forensik, Multimedia Kryptographie, Web Content Retrieval",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten implementieren ausgewählte Methoden aus der Multimedia Sicherheit und der IT Forensik in verschiedenen aktuellen Hochsprachen abhängig von der konkreten Aufgabenstellung. Ziel ist es, abstrakte Algorithmen und Problemstellungen praxisnah umsetzen und lösen zu lernen. Ziel ist hierbei insbesondere, eine effiziente Lösung zu finden, die das gegebene Problem zuverlässig löst. Die Studenten werden vertraut mit dem Prozess der softwaretechnischen Problemlösung praxisnaher Fragenstellungen der IT Forensik und Multimedia Sicherheit.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "WatermarkingPetticolas, Katzenbeisser; Information Hiding Techniques for Steganography and Digital Watermarking, Artech House Computer Security Series, ISBN: 1580530354, 2000Cox I, Miller M, Bloom J, Fridrich J, Kalker T.; Digital watermarking and steganography. Morgan Kaufmann, USA, 2007ForensikAlexander Geschonneck: \"Computer-Forensik\". 6., aktualisierte und erweiterte Auflage, dpunkt.verlag GmbH, 2014. ISBN: 978-3864901331Brian Carrier, File System Forensic Analysis, Addison Wesley,2005",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Smartphone Security",
        "Modul Nr.": "20-00-0615",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0615-prPraktikum Smartphone Security 6 Praktikum 4",
            "Lerninhalt": "Dieses Praktikum bietet verschiedene Programmierprojekte auf dem aktuellen Smartphone Betriebssystem Android:- Entwicklung/Implementierung von ausgewählten Software Angriffen- Entwicklung von sicheren Benutzerapplikationen- Einspielen von Kernelerweiterungen- Systemprogrammierung",
            "Qualifikationsziele_Lernergebnisse": "Durch die erfolgreiche Teilnahme an dieser Veranstaltung erlangen Studenten Kenntnissen und praktischer Erfahrungen mit Sicherheitsmechanismen in moderne Smartphone Betriebssystemen. Außerdem erwerben sie generelle Erfahrung in Systemprogrammierung.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: - Grundlagen Betriebssysteme- Programmierkenntnisse in C++ und Java",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: - Grundlagen Betriebssysteme- Programmierkenntnisse in C++ und Java",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird in der Veranstaltung bekannt gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum: Zuverlässige Softwaresicherheit für mobile Endgeräte",
        "Modul Nr.": "20-00-0640",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0640-prPraktikum: Zuverlässige Softwaresicherheit für mobile Endgeräte6 Praktikum 4",
            "Lerninhalt": "- Einführung in Android und in die Programmierung von Apps- mögliche Bedrohungen der Privatheit durch die Ausführung von Apps- Entdecken möglicher Informationslecks durch Informationsflussanalysen- statische und dynamische Sicherheitsanalysen- Proof-Carrying-Code- eigenständige Entwicklung von Apps und Sicherheitsanalyse dieser Apps - eigenständige Erweiterung einer bestehenden Infrastruktur zur formal fundierten Sicherheitsanalyse von Android Apps ",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende Konzepte von Android wie das Berechtigungssystem. Sie verstehen Sicherheitsprobleme, die durch die Ausführung von Apps entstehen können und verstehen wie diese durch Informationsflussanalysen verhindert werden. Sie verstehen die Vorteile der Verwendung von Proof-Carrying Code. Sie können Apps eigenständig entwickeln und die durch ihre Ausführung entstehenden Informationsflüsse bezüglich Privatheitsanforderungen evaluieren. Sie können Erweiterungen für eine existierende Sicherheitsinfrastruktur entwickeln und funktionsfähig integrieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die Fähigkeit, mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. IT SicherheitM. Sc. Distributed Software SystemsM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "ausgewählte Konferenz- und Zeitschriftenartikel",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum zur Technischen Informatik",
        "Modul Nr.": "20-00-0647",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "unregelmäßig",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0647-prPraktikum zur Technischen Informatik6 Praktikum 4",
            "Lerninhalt": "Teilnehmerinnen und Teilnehmer bearbeiten alleine oder in einer Kleingruppe eigenständig eine individuell gestellte praktische Aufgabe aus dem Bereich der technischen Informatik. Die Aufgaben sind dabei in der Regel Programmier- und/oder Hardware-Entwicklungsarbeiten angelehnt an die aktuellen Forschungen am Fachgebiet für Eingebettete Systeme und ihre Anwendungen.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eigenständig ein komplexeres Problem aus dem Bereich der Technischen Informatik lösen. Sie können die Qualität ihrer Lösung evaluieren und mit anderen bestehenden Lösungen vergleichen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Hängt von der konkreten Aufgabe ab. Typische empfohlene Veranstaltungen sind 'Digitaltechnik', 'Rechnerorganisation', 'Architekturen und Entwurf von Rechnersystemen' und/oder 'Einführung in Compilerbau' und 'Fortgeschrittener Compilerbau'",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Hängt von der konkreten Aufgabe ab. Typische empfohlene Veranstaltungen sind 'Digitaltechnik', 'Rechnerorganisation', 'Architekturen und Entwurf von Rechnersystemen' und/oder 'Einführung in Compilerbau' und 'Fortgeschrittener Compilerbau'",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird spezifisch für die gestellte Aufgabe ausgewählt.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Serious Games Projektpraktikum",
        "Modul Nr.": "20-00-0649",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0649-ppSerious Games Projektpraktikum 9 Projektpraktikum 6",
            "Lerninhalt": "In dem Projektpraktikum werden für aktuelle Themen aus dem Bereich Serious Games (beispielsweise für Bildung, Gesundheit und Sport) Konzepte entwickelt und prototypisch realisiert.Die Themen haben jeweils Bezug zur aktuell laufenden Forschung des Fachgebiets, teilweise in Kooperation mit Partnern aus der Games Industrie und/oder Serious Games Anwendern.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden eine praktische Aufgabenstellung aus dem -Serious Games'-Umfeld eigenständig bearbeiten sowie die dafür nötige Software konzipieren und prototypisch umsetzen. Zusätzlich erwerben sie praktisches Wissen im Bereich des Projektmanagements, dass sie nicht nur auf ihr eigenes Thema anwenden, sondern auch auf zukünftige Projekte transferieren können. Außerdem können sie die von ihnen erzielten Ergebnisse einem Publikum unter Anwendung von verschiedenen Präsentationstechniken vorstellen sowie eine dazugehörige Fachdiskussion aktiv bestreiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Programmierkenntnisse (die Programmiersprache ist jeweils abhängig von Thema und kann teilweise frei gewählt werden).",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Programmierkenntnisse (die Programmiersprache ist jeweils abhängig von Thema und kann teilweise frei gewählt werden).",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Keine",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Software Development Tools",
        "Modul Nr.": "20-00-0673",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0673-pr Software Development Tools 0 Praktikum 4",
            "Lerninhalt": "Die Entwicklung von Werkzeugen zur Unterstützung der Entwicklung von Software.",
            "Qualifikationsziele_Lernergebnisse": "Gewinnen von praktischer Erfahrung in der Entwicklung von Softwareentwicklungswerkzeugen.Verstehen der Grenzen von Softwareentwicklungswerkzeugen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Software Engineering",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0673-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Software Engineering",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0673-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Softwaresecurity durch Laufzeitüberwachung",
        "Modul Nr.": "20-00-0719",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0719-pr Softwaresecurity durch Laufzeitüberwachung0 Praktikum 4",
            "Lerninhalt": "Benutzer vertrauen Computeranwendungen in zunehmendem Maße sensible Daten wie z.B. Kontakt- und Kontodaten oder Bilder an. Bösartige oder fehlerhafte Anwendungen können durch Missbrauch solcher Daten großen Schaden verursachen. Es ist somit wünschenswert, Nutzeranforderungen an Informationssicherheit und Privacy durch geeignete Mechanismen sicherzustellen. Mit Laufzeitüberwachung existiert eine Technik für Mechanismen, die zur Laufzeit einer Anwendung deren Verhalten überwachen und geeignete Gegenmaßnahmen ergreifen sobald nötig. Besondere Bedeutung für die Informationssicherheit kommt zunehmend den verteilten Systemen wie sozialen Netzen und Cloud-Speichernlösungen zu. Laufzeitüberwachung für derartige verteilte Systeme ist der Fokus dieses Praktikums.Dieses Praktikum bietet Studenten die Möglichkeit, praktische Erfahrung beim Implementieren, Einsetzen und Evaluieren von Mechanismen zur Laufzeitüberwachung zu erlangen.",
            "Qualifikationsziele_Lernergebnisse": "Praktische Erfahrung mit Laufzeitüberwachung zur Anwendungssicherheit, insbesondere zu: Inlining von Mechanismen zur Laufzeitüberwachung; formale Spezifikation von Sicherheitsanforderungen; Laufzeitüberwachung von Sicherheit in verteilten Systemen; Schwachstellenanalyse von Laufzeitmechanismen; Testen und Evaluation von Laufzeitmechanismen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Programmiererfahrung in Java; Informatikkenntnisse entsprechend dem 4. Semester des Bachelorstudiengangs",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0719-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Programmiererfahrung in Java; Informatikkenntnisse entsprechend dem 4. Semester des Bachelorstudiengangs",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0719-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Forschungsprojekt Knowledge Engineering und Maschinelles Lernen",
        "Modul Nr.": "20-00-0751",
        "Kreditpunkte": "12 CP",
        "Arbeitsaufwand": "360 h",
        "Selbststudium": "240 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0751-pjForschungsprojekt Knowledge Engineering und Maschinelles Lernen12 Projekt 8",
            "Lerninhalt": "An einem individuellen Projekt soll das eigenständige Forschen in den Gebieten Knowledge Engineering, Künstliche Intelligenz, maschinelles Lernen und Data Mining unter Anleitung erlernt werden. Dabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer definiert. Mögliche Themenfelder: - Maschinelles Lernen und Data Mining - Induktives Regel-Lernen - Learning from Preferences - Multilabel Classification - Information Extraction - Web Mining - Semantic Web - Game Playing Konkrete Aufgabenstellungen werden individuell vereinbart, und das Projekt kann jederzeit begonnen werden. Studenten, die an einem derartigen Projekt interessiert sind, wenden sich bitte an einen Mitarbeiter des Fachgebiets Knowledge Engineering (http://www.ke.tu-darmstadt.de).",
            "Qualifikationsziele_Lernergebnisse": "Nach Bearbeitung dieses Projekts sollten die Studierenden in der Lage sein- selbständig kleinere Forschungsarbeiten in den Bereichen Knowledge Engineering, Künstliche Intelligenz, maschinelles Lernen und Data Mining durchzuführen- diese Ergebnisse in einem Abschlußreport zu dokumentieren- in einem wissenschaftlichen Vortrag zu präsentieren- in einer kritischen Diskussion zu verteidigen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Kenntnisse in den Bereichen Knowledge Engineering, Künstliche Intelligenz, Data Mining und maschinelles Lernen sind hilfreich. Es werden außerdem grundlegende Kenntnisse in einer Programmiersprache (z.B. Java o.ä.) vorausgesetzt. Darüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen Forschungsfragen relevant.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Kenntnisse in den Bereichen Knowledge Engineering, Künstliche Intelligenz, Data Mining und maschinelles Lernen sind hilfreich. Es werden außerdem grundlegende Kenntnisse in einer Programmiersprache (z.B. Java o.ä.) vorausgesetzt. Darüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen Forschungsfragen relevant.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Internet- und Web-basierte SystemeM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Lernende Roboter: Integriertes Projekt, Teil 1",
        "Modul Nr.": "20-00-0753",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0753-pjLernende Roboter: Integriertes Projekt, Teil 16 Praktikum 4",
            "Lerninhalt": "In \"Lernende Roboter: Integriertes Projekt, Teil 1\" wird zunächst von Studierenden unter Anleitung eine aktuelle Problemstellung des Roboter-Lernens erarbeitet, welche den Forschungsinteressen der Studierenden entspricht, und eine Literaturstudie durchgeführt. Basierend auf diesen Vorarbeiten werden ein Projektplan ausgearbeitet, die notwendigen Algorithmen erprobt und eine prototypische Realisierung in Simulation erstellt.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichen Abschluss der Lehrveranstaltung, können Studierende unabhängig kleine Forschungsprojekte im Bereich Robot Learning aufbauen und in Simulation erproben.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Gleichzeitiger oder vorheriger Besuch der Vorlesung Robot Learning.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Gleichzeitiger oder vorheriger Besuch der Vorlesung Robot Learning.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Lernende Roboter: Integriertes Projekt, Teil 2",
        "Modul Nr.": "20-00-0754",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0754-pjLernende Roboter: Integriertes Projekt, Teil 26 Praktikum 4",
            "Lerninhalt": "In \"Lernende Roboter: Integriertes Projekt, Teil 2\" werden die Lösungen aus dem \"Teil 1\" vervollständigt und auf einen realen Roboter angewandt. Ein wissenschaftlicher Artikel wird über die Fragestellung, Methoden und Ergebnisse geschrieben sowie ggf. eingereicht.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Abschluss der Lehrveranstaltung können Studierende unabhängig kleine Forschungsprojekte im Bereich Robot Learning aufbauen und in Simulation erproben.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Gleichzeitiger oder vorheriger Besuch der Vorlesung Robot Learning.",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Gleichzeitiger oder vorheriger Besuch der Vorlesung Robot Learning.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Autonome SystemeB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Programmierung Massiv Paralleler Systeme",
        "Modul Nr.": "20-00-0763",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0763-ppProjektpraktikum Programmierung Massiv Paralleler Systeme9 Projektpraktikum 6",
            "Lerninhalt": "Im Rahmen dieses Projektpraktikums werden größere ausgewählte Themen aus dem Bereich der Programmierung massiv-paralleler Systeme (wie z.B. GPUs) von den Studierenden in Gruppen bearbeitet und am Ende des Projektpraktikums in einem Vortrag vorgestellt. Die konkreten Themen wechseln von Semester zu Semester.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem erfolgreichen Abschluss des Projektpraktikums sind die Studenten in der Lage große massiv-parallele Projekte zu bearbeiten, welche den Umfang der meisten anderen Projekte während des Studiums weit übersteigen. Hierzu können sie aktuelle Techniken analysieren, modifizieren und anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: gute C/C++ Programmierkenntnisse, Grundlagen der massiv-parallelen Programmierung (z.B. aus der Veranstaltung Programmierung Massiv-Paralleler Prozessoren)",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: gute C/C++ Programmierkenntnisse, Grundlagen der massiv-parallelen Programmierung (z.B. aus der Veranstaltung Programmierung Massiv-Paralleler Prozessoren)",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Capturing Reality",
        "Modul Nr.": "20-00-0764",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0764-ppProjektpraktikum Capturing Reality9 Projektpraktikum 6",
            "Lerninhalt": "Im Rahmen dieses Projektpraktikums werden größere ausgewählte Themen aus dem Bereich Capturing Reality - also an der Schnittstelle von Computer Vision und Computergraphik - von den Studierenden in Gruppen bearbeitet und am Ende des Projektpraktikums in einem Vortrag vorgestellt. Die konkreten Themen wechseln von Semester zu Semester.",
            "Qualifikationsziele_Lernergebnisse": "Im Rahmen des Projektpraktikums lernen Studierende, eine umfangreiches Problem an der Schnittstelle von Computergraphik und Computer Vision im Team zu lösen. Hierzu können sie aktuelle Techniken analysieren, modifizieren und anwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: empfohlen wird der Besuch der Veranstaltung Capturing Reality sowie grundlegende Programmierkenntnisse in C/C++",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: empfohlen wird der Besuch der Veranstaltung Capturing Reality sowie grundlegende Programmierkenntnisse in C/C++",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Visual ComputingB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "wird in der Veranstaltung bekanntgegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum: Formale Spezifikation und Verifikation in Isabelle/HOL",
        "Modul Nr.": "20-00-0778",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0778-prPraktikum: Formale Spezifikation und Verifikation in Isabelle/HOL6 Praktikum 4",
            "Lerninhalt": "- Logik höherer Stufe (HOL)- Einführung in das Werkzeug Isabelle/HOL- Definition von Typen, Funktionen, Mengen und anderen grundlegenden Konzepten in der Spezifikationssprache von Isabelle/HOL- Führen von Beweisen für einfache Aussagen in Isabelle/HOL- Modellierung von Systemen und Eigenschaften sowie Beweis von Aussagen von schrittweise wachsender konzeptioneller Komplexität- Diskussion und Bewertung von formalen Modellen und Beweisen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende die Formalismen auf denen Isabelle/HOL basiert, und sie könnnen dieses moderne Verifikationswerkzeug verwenden. Sie können in Isabelle/HOL sowohl eigenständig als auch im Team formale Modelle von Systemen und Eigenschaften konstruieren und Aussagen beweisen. Sie können erstellte formale Modelle und Beweise beurteilen, anderen präsentieren und im Team fundiert diskutieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Pruefungsform": "Studienleistung schriftlich/mündlich (Präsentation, Dokumentation, technische Umsetzung oder vergleichbare Leistungen)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere grundlegende Logikkenntnisse und Fähigkeit mit formalen Sprachen und Kalkülen umzugehen",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. Distributed Software SystemsB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "- T. Nipkow, L. C. Paulson, M. Wenzel: Isabelle/HOL: A Proof Assistant for Higher-Order Logic; Springer- online documentation material on Isabelle and Higher-Order Logic (HOL)Die Literaturempfehlungen werden kontinuierlich aktualisiert.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Dynamische Kontrolle von Systemanforderungen",
        "Modul Nr.": "20-00-0797",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0797-ppDynamische Kontrolle von Systemanforderungen0 Praktikum 6",
            "Lerninhalt": "- grundlegende Konzepte der dynamischen Kontrolle in verteilten Systemen- Einführung in Werkzeuge zur Laufzeitkontrolle wie CliSeAu, JavaMOP und Polymer- Spezifikation von Systemanforderungen in unterschiedlichen Formalismen- Kombination von dynamischen Kontrollmechanismen mit Zielprogrammen- zentrale vs dezentrale Kontrolle in verteilten Systemen- Protokolle zur Koordination zwischen dezentralen Kontrollmechanismen in verteilten Systemen- eigenständige Adaption von dynamischen Kontrollmechanismen für Zielprogramme- eigenständige Erweiterung einer bestehenden Infrastruktur zur dynamischen Kontrolle von Anforderungen in verteilten Systemen und Evaluation von Erweiterungen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierendegrundlegende Konzepte der dynamischen Kontrolle in verteilten Systemen.Sie verstehen wie Schwachstellen in verteilten Softwaresystemen, wie z.B. Sicherheitslücken, mit Hilfe von dynamischen Kontrollen beseitigt werden können. Sie verstehen, wie Anforderungen als Politiken formalisiert werden können und können solche Formalisierungen von Anforderungen in verschiedenen Sprachen durchführen. Sie können Mechanismen zur dynamischen Kontrolle für konkrete Systeme und Anforderungen einsetzen und adaptieren. Sie können Mechanismen zur dynamischen Kontrolle entwickeln, evaluieren und mit anderen Mechanismen integrieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die Fähigkeit, mit formalen Sprachen umzugehen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0797-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die Fähigkeit, mit formalen Sprachen umzugehen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0797-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Zuverlässige Softwaresicherheit für mobile Endgeräte",
        "Modul Nr.": "20-00-0799",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0799-pr Zuverlässige Softwaresicherheit für mobile Endgeräte0 Praktikum 4",
            "Lerninhalt": "- Einführung in Android und in die Programmierung von Apps- mögliche Bedrohungen der Privatheit durch die Ausführung von Apps- Entdecken möglicher Informationslecks durch Informationsflussanalysen- statische und dynamische Sicherheitsanalysen- Proof-Carrying-Code- eigenständige Entwicklung von Apps und Sicherheitsanalyse dieser Apps- eigenständige Erweiterung einer bestehenden Infrastruktur zur formal fundierten Sicherheitsanalyse von Android Apps",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung kennen Studierende grundlegende Konzepte von Android wie das Berechtigungssystem. Sie verstehen Sicherheitsprobleme, die durch die Ausführung von apps entstehen können und verstehen wie diese durch Informationsflussanalysen verhindert werden. Sie verstehen die Vorteile der Verwendung von Proof-Carrying-Code. Sie können apps eigenständig entwickeln und die durch ihre Ausführung entstehenden Informationsflüsse bezüglich Privatheitsanforderungen evaluieren.Sie können Erweiterungen für eine existierende Sicherheitsinfrastruktur entwickeln und funktionsfähig integrieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die Fähigkeit mit formalen Sprachen und Kalkülen umzugehen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0799-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Informatik- und Mathematikkenntnisse entsprechend den ersten 4 Semestern des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse in Java und die Fähigkeit mit formalen Sprachen und Kalkülen umzugehen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0799-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITM. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Compilerbau",
        "Modul Nr.": "20-00-0911",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0911-pr Praktikum Compilerbau 0 Praktikum 4",
            "Lerninhalt": "Eigenständiges Implementieren eines Compilers bzw. von wesentlichen Teilen davon (z.B. einzelne Optimierungspasses oder Back-Ends).",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Absolvieren der Veranstaltung können die Studierenden wesentliche Teile von modernen Compilern selbständig implementieren und ggf. in existierende Compiler-Frameworks integrieren. Dabei können sie ihre Kenntnisse sowohl von compiler-spezifischem Wissen (beispielsweise über verschiedene Zwischendarstellungen) als auch allgemeinen Programmiertechnik (z.B. Design Patterns) anwenden und vertiefen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Rechnerorganisation', -Einführung in den Compilerbau' und -Fortgeschrittener Compilerbau' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0911-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Rechnerorganisation', -Einführung in den Compilerbau' und -Fortgeschrittener Compilerbau' bzw. entsprechende Kenntnisse aus anderen Studiengängen",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0911-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikB. Sc. Computational EngineeringM. Sc. Computational EngineeringM. Sc. WirtschaftsinformatikB. Sc. Psychologie in ITJoint B.A. InformatikB. Sc. Sportwissenschaft und InformatikM. Sc. Sportwissenschaft und InformatikM. Sc. InformationssystemtechnikKann im Rahmen fachübergreifender Angebote auch in anderen Studiengängen verwendet werden.",
            "Literatur": "Wird jeweils passend für die aktuelle Aufgabenstellung bekanntgegeben (z.B. wissenschaftliche Arbeiten zu Optimierungsverfahren, Beschreibung eines Zielprozessors)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projekt-Praktikum Knowledge Engineering und Maschinelles Lernen",
        "Modul Nr.": "20-00-0919",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0919-ppProjekt-Praktikum Knowledge Engineering und Maschinelles Lernen0 Projekt 6",
            "Lerninhalt": "Im Rahmen des Projektpratikums implementieren Studierende eine vordefinierte, größere Aufgabe aus den Gebieten Knowledge Engineering, Künstliche Intelligenz, maschinelles Lernen und Data Mining. Dabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer definiert.Mögliche Themenfelder:- Maschinelles Lernen und Data Mining- Induktives Regel-Lernen- Learning from Preferences- Multilabel Classification- Information Extraction- Web Mining- Semantic Web- Game PlayingKonkrete Aufgabenstellungen werden individuell vereinbart, und das Praktikum kann jederzeit begonnen werden.",
            "Qualifikationsziele_Lernergebnisse": "Nach Bearbeitung dieses Projekts sollten die Studierenden in der Lage sein- selbständig größere Programmieraufgaben in den Bereichen Knowledge Engineering, Künstliche Intelligenz, maschinelles Lernen und Data Mining durchzuführen- mit Hilfe der implementierte Instrumente wissenschaftliche Experimente und Evaluierungen durchzuführen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlegende Kenntnisse in den Bereichen Knowledge Engineering, Künstliche Intelligenz, Data Mining und maschinelles Lernen sind hilfreich. Es werden außerdem grundlegende Kenntnisse in einer Programmiersprache (z.B. Java o.ä.) vorausgesetzt.Darüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen Forschungsfragen relevant.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0919-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlegende Kenntnisse in den Bereichen Knowledge Engineering, Künstliche Intelligenz, Data Mining und maschinelles Lernen sind hilfreich. Es werden außerdem grundlegende Kenntnisse in einer Programmiersprache (z.B. Java o.ä.) vorausgesetzt.Darüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen Forschungsfragen relevant.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0919-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktische Anwendungen zu Neuronale Informationsverarbeitung für Gehirn-Computer Schnittstellen",
        "Modul Nr.": "20-00-0945",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0945-pr Praktische Anwendungen zu Neuronale Informationsverarbeitung für Gehirn-Computer Schnittstellen0 Praktikum 4",
            "Lerninhalt": "* Praktische Anwendung der Signalverarbeitung in der neuronalen Bildgebung* Praktische Anwendung derMustererkennung für neuronale Bildgebungsverfahren* Praktische Anwendung von Gehirn-Computer Schnittstellen",
            "Qualifikationsziele_Lernergebnisse": "Aufbauend auf der Vorlesung \"Neuronale Informationsverarbeitung für Gehirn-Computer Schnittstellen\", vermittelt dieser Kurs Studenten praktische Fähigkeiten im Bereich der Neurotechnik, Ein besonderer Fokus liegt dabei auf dem Bereich der Gehirn-Computer Schnittstellen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Vorherige erfolgreiche Teilname an der Vorlesung \"Neuronale Informationsverarbeitung für Gehirn-Computer Schnittstellen\"",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0945-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Vorherige erfolgreiche Teilname an der Vorlesung \"Neuronale Informationsverarbeitung für Gehirn-Computer Schnittstellen\"",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0945-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Softwareprojekt Datenanalyse für natürliche Sprache",
        "Modul Nr.": "20-00-0948",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0948-pp Softwareprojekt Datenanalyse für natürliche Sprache0 Praktikum 6",
            "Lerninhalt": "Große Datenmengen sind heute eine wertvolle Informationsquelle. Allerdings ist nur durch die Verwendung von intelligenter Datenanalyse das volle Potential dieser Daten nutzbar. Solche Methoden ermöglichen es neue und praktisch nutzbare Informationen in großen natürlichsprachlichen Daten zu identifizieren und unterstützen dadurch die Entscheidungsfindung bei komplexen Aufgaben. In diesem Projekt werden Studenten eigene Ideen und neue Softwaresysteme entwickeln die es ermöglichen Informationen für verschiedene Aufgaben aus einer großen Menge natürlichsprachlicher Texte (Big Data) zu extrahieren. Das jeweilige Rahmenthema der Veranstaltung wechselt jedes Semester und wird auf der Fachgebietshomepage bekannt gegeben.Weitere Informationen: https://www.ukp.tu-darmstadt.de/teaching/courses/software-project/",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie- sprachtechnologische Frameworks verstehen und einsetzen,- komplexe NLP-Systeme eigenständig planen und umsetzen,- große natürlichsprachliche Daten analysieren und- die eigenen Ergebnisse mündlich und schriftlich präsentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Programmierkenntnisse (Scala, Java oder Python)- Interesse mit Texten aus natürlicher Sprache zu arbeiten",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0948-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Programmierkenntnisse (Scala, Java oder Python)- Interesse mit Texten aus natürlicher Sprache zu arbeiten",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0948-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Forschungsprojekt Telekooperation",
        "Modul Nr.": "20-00-0950",
        "Kreditpunkte": "12 CP",
        "Arbeitsaufwand": "360 h",
        "Selbststudium": "240 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0950-pj Forschungsprojekt Telekooperation0 Projekt 8",
            "Lerninhalt": "Forschungsrelevante Projektarbeit im Bereich \"Ubiquitous Computing\".An einem individuellen Projekt soll das eigenständige Forschen unter Anleitung erlernt werden. Dabei werden die Themen jeweils in Zusammenarbeit mit dem Betreuer definiert.Mögliche Themenfelder:- Interaktion mit innovativen Endgeröten- P2P Netze- Sensornetze- Mobile Sensing- Middleware- Network Science- Voice InterfacesKonkrete Aufgabenstellungen werden individuell vereinbart, und das Projekt kann jederzeit begonnen werden.",
            "Qualifikationsziele_Lernergebnisse": "",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlegende Kenntnisse im Bereich \"Ubiquitous Computing\" sind hilfreich (z.B. durch die Vorlesungen P2P, TK1, TK3, KN1, KN2, HCI o.ä.) . Es werden außerdem grundlegende Kenntnisse in einer Programmiersprache (z.B. Java, C# o.ä.) vorrausgesetzt. Darüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen Forschungsfragen relevant.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0950-pj] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlegende Kenntnisse im Bereich \"Ubiquitous Computing\" sind hilfreich (z.B. durch die Vorlesungen P2P, TK1, TK3, KN1, KN2, HCI o.ä.) . Es werden außerdem grundlegende Kenntnisse in einer Programmiersprache (z.B. Java, C# o.ä.) vorrausgesetzt. Darüber hinaus ist aber besonders die Motivation zur selbstständigen Arbeit und das Interesse an aktuellen Forschungsfragen relevant.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0950-pj] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc./M.Sc. InformatikM.Sc. WirtschaftsinformatikB.Sc. Psychologie in ITJoint B.A. InformatikB.Sc./M.Sc. Sportwissenschaft und InformatikIm Rahmen fachübergreifender Angebote auch in anderen Studiengängen.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Embedded System Hands-On 1: Entwurf und Realisierung von Hardware/Software-Systemen",
        "Modul Nr.": "20-00-0959",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0959-pr Embedded System Hands-On 1: Entwurf und Realisierung von Hardware/Software-Systemen0 Praktikum 4",
            "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die grundlegende praktischeKenntnisse im Entwurf und der Realisierung eingebetteter Systeme erwerben möchten.Nach der Einführungvon wichtigen Konzepten und Techniken wie- Grundlagen der Elektotechnik- Umgang mit Laborelektonik- Entwurf und Realisierung von elektronischen Schaltungen- Sensordaten: Erfassung und Verarbeitung- Bus-Systeme in eingebetteten Systemen- Programmieren und Debuggen von heterogenen eingebetteten Systemen- Linux Kernel in eingebetteten Systemenentwickeln die Teilnehmerinnen und Teilnehmer auf Basis des zuvorGelernten ein eigenes eingebettetes System.Dabei stehen verschiedeneProjekte zur Auswahl, welche je nach eigenen Interessen eine Fokusierung auf die Software-oder die Hardware-Entwicklung erlauben.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme sind Studierende mit dem praktischen Entwurf und der Realisierung von eingebetten Hardware/Software-Systemen vertraut.Dazu gehören auch Kenntnisse von elektrotechnischen Grundlagen und der Umgang mit Laborelektronik, die Verwendung von Beschreibungssprachen und EDA/CAD-Werkzeugen für den Hardware-Entwurf, das Programmieren und Debuggen speziell im Umfeld eingebetteter Systeme sowie auch der Einsatz von Linux als Betriebssystem in diesem Kontext.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Digitaltechnik', -Rechnerorganisation', -Architektur und Entwurf von Rechnersystemen', -Betriebssysteme' und -Systemnahe und Parallele Programmierung' oder vergleichbare Kenntnisse aus anderen Studiengängen.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0959-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Erfolgreicher Besuch der Vorlesungen -Digitaltechnik', -Rechnerorganisation', -Architektur und Entwurf von Rechnersystemen', -Betriebssysteme' und -Systemnahe und Parallele Programmierung' oder vergleichbare Kenntnisse aus anderen Studiengängen.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0959-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Embedded Systems Hands-On 2: Entwurf von Hardware-Beschleunigern für Systems-on-Chip",
        "Modul Nr.": "20-00-0968",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0968-pr Embedded Systems Hands-On 2: Entwurf von Hardware-Beschleunigern für Systems-on-Chip0 Praktikum 4",
            "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die grundlegendeKenntnisse im Design von Hardwarebeschleunigern im Rahmen eines Systems-on-Chiperhalten möchten.Im Rahmen des Praktikums erhalten Studierende umfangreiche Einblicke inrelevante Themen wie:- Treiber für selbst erstellte Hardwarebeschleuniger- Einbindung von in Bluespec erstellten Beschleunigern in ein Zynq SoC- Toolchains für Hardware- und Software-KomponentenDie Teilnehmer werden im Rahmen des Praktikums Aufgaben zu einemtypischen Einsatzgebiet von Hardwarebeschleunigung bearbeiten.Ein typisches Anwendungsgebiet eines solchen Hardwarebeschleunigers istdie Verarbeitung und Erfassung von Kamerabildern, zum Beispiel im Rahmenvon Stereo Vision.",
            "Qualifikationsziele_Lernergebnisse": "Die Teilnehmenden erwerben die Fertigkeiten, das in vorangehenden Veranstaltungen erworbene Methodenwissen nun anzuwenden, um ein eingebettetes System mittels Hardware/Software-Co-Entwurf zu realisieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlegende Kenntnisse im Umgang mit embedded Linux zum Beispiel ausESHO1. Bluespec SystemVerilog aus Architektur und Entwurf von Rechnersystemen (ex-CMS).",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0968-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlegende Kenntnisse im Umgang mit embedded Linux zum Beispiel ausESHO1. Bluespec SystemVerilog aus Architektur und Entwurf von Rechnersystemen (ex-CMS).",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0968-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum E-Learning",
        "Modul Nr.": "20-00-0979",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0979-pp Projektpraktikum E-Learning 0 Praktikum 6",
            "Lerninhalt": "Im Projektpraktikum E-Learning werden vertiefte E-Learning Inhalte erarbeitet oder vorhandene E-Learning Elemente untersucht und verbessert. Die konkreten Themenschwerpunkte werden nach Absprache mit dem Betreuer festgelegt. Zu den möglichen Themen zählt beispielsweise die Entwicklung von innovativen Konzepten zur Nutzung von Moodle in Lehrveranstaltungen, die Visualisierung von Algorithmen und Datenstrukturen, oder die Erstellung von E-Learning-Einheiten mittels einer Autorensoftware.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Projektpraktikum haben die Teilnehmer_innen ein besseres Verständnis von E-Learning und umfangreicheres Wissen über die Gestaltung und Umsetzung von lernförderndem E-Learning erhalten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Gute Programmierkenntnis in Java (oder je nach Themenwahl den How to Design Programs Teaching Languages aus der Vorlesung FOP oder von Moodle) sowie Kenntnis der gängigen Datenstrukturen und Algorithmen (etwa aus der Vorlesung AuD) werden vorausgesetzt.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0979-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Gute Programmierkenntnis in Java (oder je nach Themenwahl den How to Design Programs Teaching Languages aus der Vorlesung FOP oder von Moodle) sowie Kenntnis der gängigen Datenstrukturen und Algorithmen (etwa aus der Vorlesung AuD) werden vorausgesetzt.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0979-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Deep Learning in der Computer Vision",
        "Modul Nr.": "20-00-0980",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0980-ppProjektpraktikum Deep Learning in der Computer Vision0 Praktikum 6",
            "Lerninhalt": "Im Rahmen des Projektpraktikums werden ausgewählte Themen aus dem Bereich des Deep Learning (tiefe neuronale Netze) für Fragestellungen in der Computer Vision in Gruppen bearbeitet. Dazu gehört die praktische Umsetzung mit modernen Deep Learning Frameworks. Die Ergebnisse werden am Ende in einem Vortrag vorgestellt. Die konkreten Themen orientieren sich am aktuellen Stand der Forschung und wechseln von Semester zu Semester.",
            "Qualifikationsziele_Lernergebnisse": "Durch erfolgreiche Teilnahme erwerben Studierende vertiefte Kenntnisse in tiefen neuronalen Netzen und deren Anwendungen in der Computer Vision. Sie können aktuelle Techniken in diesem Bereich analysieren, modifizieren und anwenden. Sie trainieren weiterhin Präsentationsfähigkeiten und die Arbeit in einem Team.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:* Gute Programmierkenntnisse in C/C++ oder Python oder Lua* Voherige oder parallele Belegung von \"Computer Vision I\"",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0980-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:* Gute Programmierkenntnisse in C/C++ oder Python oder Lua* Voherige oder parallele Belegung von \"Computer Vision I\"",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0980-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Distributed Systems Programming: Projektpraktikum",
        "Modul Nr.": "20-00-0984",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0984-ppDistributed Systems Programming: Projektpraktikum0 Praktikum 6",
            "Lerninhalt": "Das \"DSP-Projektpraktikum\" adressiert Forschungsthemen im Bereich von distributed systems (DS, deutsch verteilten Anwendungen) und Programmiersprachen für DS. Die angebotenen Themen hängen von der aktuellen Forschung der DSP Gruppe ab und umfassen unter anderem:- Software-defined networking (SDN)- Network function virtualization (NFV) and in-network processing (INP)- Traffic engineering (TE)- Network monitoring- Resource management in datacenters (RMF)- Big data analytics (Spark, YARN, OpenStack, ..)- Event-based systems- Security in SDN, INP, and big data- Geo-distributed data processing- Compiler infrastructures for DS- Language abstractions for DS- Session types / calculi for DS- Network ProtocolsDie teilnehmenden Studierenden realisieren ein Forschungsprojekt welches zusammen mit dem Betreuer definiert wird.Das 'DSP: Projektpraktikum' hat im Vergleich zum 'DSP: Praktikum' einen größeren Umfang.",
            "Qualifikationsziele_Lernergebnisse": "Nach der Teilnahme am \"DSP-Projektpraktikum\" können Studierende technische und wissenschaftliche Probleme im Bereich DS lösen.Je nach ausgewähltem Thema erlernen Studierende folgende Kompetenzen:Entwurf komplexer DSMethodische Analyse und Auswertung von:- Modellen- Experimenten- Software- Entwurf von Programmiersprachen- Schreiben von technischen Dokumenten oder Projektberichten- Erstellen und vortragen eines Abschlussvortrages",
            "Voraussetzung_fuer_die_Teilnahme": "Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, eigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen.Da die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr verschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der Anforderungen wird in der ersten Vorlesung präsentiert.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0984-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS, eigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen.Da die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr verschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der Anforderungen wird in der ersten Vorlesung präsentiert.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0984-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Distributed Systems Programming: Praktikum",
        "Modul Nr.": "20-00-0985",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0985-pr Distributed Systems Programming: Praktikum0 Praktikum 4",
            "Lerninhalt": "Das \"DSP-Praktikum\" adressiert Forschungsthemen im Bereich von distributed systems (DS, deutsch verteilten Anwendungen) und Programmiersprachen für DS. Die angebotenen Themen hängen von der aktuellen Forschung der DSP Gruppe ab und umfassen unter anderem:- Software-defined networking (SDN)- Network function virtualization (NFV) and in-network processing (INP)- Traffic engineering (TE)- Network monitoring- Resource management in datacenters (RMF)- Big data analytics (Spark, YARN, OpenStack, ..)- Event-based systems- Security in SDN, INP, and big data- Geo-distributed data processing- Compiler infrastructures for DS- Language abstractions for DS- Session types / calculi for DS- Network ProtocolsDie teilnehmenden Studierenden realisieren ein Forschungsprojekt welches zusammen mit dem Betreuer definiert wird.Das 'DSP: Projektpraktikum' hat im Vergleich zum 'DSP: Praktikum' einen größeren Umfang.",
            "Qualifikationsziele_Lernergebnisse": "Nach der Teilnahme am \"DSP-Praktikum\" können Studierende technische und wissenschaftliche Probleme im Bereich DS lösen.Je nach ausgewähltem Thema erlernen Studierende folgende Kompetenzen:Entwurf komplexer DSMethodische Analyse und Auswertung von:- Modellen- Experimenten- Software- Entwurf von Programmiersprachen- Schreiben von technischen Dokumenten oder Projektberichten- Erstellen und vortragen eines Abschlussvortrages",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS,eigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen.Da die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr verschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der Anforderungen wird in der ersten Vorlesung präsentiert.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0985-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Interesse am Erarbeiten von Lösungsvorschlägen für herausfordernde Probleme im Bereich DS,eigenverantwortliches arbeiten und ein großes Interesse an aktuellen Forschungsthemen.Da die angebotenen Themen ein großes Themengebiet abdecken, sind die Anforderungen sehr verschieden und projektabhängig. Eine detaillierte Beschreibung der Themen als auch der Anforderungen wird in der ersten Vorlesung präsentiert.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0985-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Agile Software Engineering Projekt",
        "Modul Nr.": "20-00-0989",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-0989-pp Agile Software Engineering Projekt0 Projekt 6",
            "Lerninhalt": "Durchführung eines realen Softwareentwicklungsprojekts für externe Kunden in einem festen Zeitraum. Die Entwicklung umfasst alle Schritte von der Ermittlung der Anforderungen bis hin zur Einführung der Software in den Betrieb.",
            "Qualifikationsziele_Lernergebnisse": "- Erfahrung in der Entwicklung realer Softwareprojekte- Wertschätzung der verschiedenen Rollen im Rahmen von Softwareentwicklungsprojekten- Projektabhängige Evaluierung vorhandener Werkzeuge und Methoden- Training von \"Soft Skills\"; insbesondere Teamarbeit und Präsentationsfähigkeiten- Kommunikation mit Kunden",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- (Introduction to)Software Engineering- ein ausgeprägtes Interesse an der Entwicklung von Softwareprodukten",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-0989-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- (Introduction to)Software Engineering- ein ausgeprägtes Interesse an der Entwicklung von Softwareprodukten",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-0989-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Fortgeschrittene Themen in Eingebetteten Systemen und ihren Anwendungen",
        "Modul Nr.": "20-00-1001",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1001-pp Fortgeschrittene Themen in Eingebetteten Systemen und ihren Anwendungen0 Projekt 6",
            "Lerninhalt": "Der Kurs bearbeitet aktuelle Forschungs- und Entwicklungsthemenaus dem Bereich von Rechnersystemen und Programmierwerkzeugen, auch speziellim Umfeld von eingebetteten und anwendungsspezifischen Architekturen. DieThemen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter undvermitteln technische und einleitende wissenschaftliche Kompetenzen, zumBeispiel aus einem oder mehreren der folgenden Gebiete:- Rechnerarchitekturen auf Prozessor- und Systemebene- Entwurf digitaler Schaltungen und Hardware-Systeme- Einsatz von Field-Programmable Gate Arrays- Hardware/Software-Entwurfs- und Programmierwerkzeuge- Betriebssysteme und hardware-nahe Programmierung- Hardware/Software-Co-Design- Anwendungsspezifische Architekturen und Techniken- Entwurf und/oder Programmierung von Rechenbeschleunigern- Debugging und Analyseverfahren für Hardware/Software-Systeme",
            "Qualifikationsziele_Lernergebnisse": "Der/die Studierende sollen Erfahrungen mit der Einarbeitung in ein neues Themenfeld und der praktischen Bearbeitung einer komplexeren Aufgabe aus diesem sammeln. Zu diesen Erfahrungen können Literaturrecherchen, das Einarbeiten in bestehende Code-Basen aus dem Hardware/Software-Bereich, sowie ganz praktische Implementierung von Hardware und/oder Software gehören. Beim Abschlussvortrag sind auch geeignete Präsentationstechniken anzuwenden.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Das Interesse, zu den Lehrinhalten anspruchsvolle Lösungen zuentwickeln. Dabei sind jeweils themenspezifische Kenntnisse, u.a. zumHardware-Entwurf, dem Compilerbau und der systemnahen und parallelenProgrammierung erforderlich. Diese Kenntnisse können beispielsweise durch denBesuch der entsprechenden Lehrveranstaltungen erworben werden.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1001-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Das Interesse, zu den Lehrinhalten anspruchsvolle Lösungen zuentwickeln. Dabei sind jeweils themenspezifische Kenntnisse, u.a. zumHardware-Entwurf, dem Compilerbau und der systemnahen und parallelenProgrammierung erforderlich. Diese Kenntnisse können beispielsweise durch denBesuch der entsprechenden Lehrveranstaltungen erworben werden.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1001-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatjkM.Sc InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Parallele Programmiertechnologie",
        "Modul Nr.": "20-00-1008",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1008-pr Parallele Programmiertechnologie0 Praktikum 4",
            "Lerninhalt": "Die Praktikumsteilnehmer entwickeln Technologien zur parallelen Programmierung aus den folgenden Themenbereichen und/oder wenden diese an:- Erschließung möglicher Parallelität- Leistungsanalyse und -modellierung- Korrektheitsanalyse- Profiling- Skalierbare Algorithmen- Ressourcenmanagement und Scheduling- Anwendungen (z.B. Deep Learning)",
            "Qualifikationsziele_Lernergebnisse": "- Kennenlernen und praktische Entwicklung und/oder Anwendung paralleler Programmiertechnologien- Einüben softwaretechnischer Methoden- Teamarbeit in Softwareprojekten- Präsentation von Projektergebnissen in Berichten und Vorträgen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Kenntnisse paralleler Programmierung und Systeme",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1008-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Kenntnisse paralleler Programmierung und Systeme",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1008-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Compiler Tooling",
        "Modul Nr.": "20-00-1013",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1013-pr Compiler Tooling 0 Praktikum 4",
            "Lerninhalt": "Moderne Compiler zielen primär darauf ab, effizienten Code für eine bestimmte Plattform zu generieren und hierfür nutzen sie fortgeschrittene Analysis- und Transformationswerkzeuge. Eine solche Infrastruktur ist aber auch nützlich für Quellcodetransformation, z.B. für Werkzeuge, die Codes annotieren, instrumentieren, oder in eine kanonische Form bringen. Die Entwicklung solcher Werkzeuge ist für die C++ Sprache aufgrund ihrer Komplexität eine Herausforderung. Eine offene Compiler Infrastruktur, die in einer Vielzahl von Forschungs- und Produktionscompilern genutzt wird, ist die LLVM Infrastruktur (www.llvm.org). Ein vielgenutztes Front-End für C, C++ und objective C ist Clang, welches mächtige Mechanismen für die Extraktion von Information aus dem abstrakten Syntaxbaum zur Verfügung stellt, und so Modifikationen des Quellcodes wie auch die Generierung der Zwischenrepräsentation von LLVM ermöglicht.Die Studierenden arbeiten mit verschiedenen Komponenten und Techniken des Clang/LLVM Frameworks und implementieren praktische Übungen für Quelltransformationen. Die Clang/LLVM Techniken beinhalten insbesondere die Handhabung und Matching Techniken auf dem abstrakten Syntaxbaum von Clang. Beispiele von Quelltransformationen werden verschiedene Facetten von Code-Erweiterung under -Refactoring beinhalten, z.B. für die Instrumentierung paralleler Codes, für die Übermittlung von Information zwischen der statischen Analyse und der Laufzeitumgebung von (parallelen) Codes, oder für Code Refactoring um bestimmte Coding Standards einzuhalten.",
            "Qualifikationsziele_Lernergebnisse": "Nach dem Besuch dieses Kurses kennen die Studierenden grundlegende und fortgeschrittene Konzepte der syntaktischen und semantischen Code Analyse und Quelltext-Transformation, basierend auf der Clang/LLVM Technologie. Insbesondere können sie auf spezielle Aufgaben zugeschnittene statische Analyse- und Code- Transformations Werkzeuge entwerfen und implementieren, das geeignete Abstraktionsniveau für die zu lösende Aufgabe reflektieren und entscheiden, und weitere Nutzungsszzenarien für Compiler Technologie erstellen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Vorlesung Einführung in Compilerbau (EiCB), Vorlesung System- and Parallel Programming (SPP), Kentnisse von C++",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1013-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Vorlesung Einführung in Compilerbau (EiCB), Vorlesung System- and Parallel Programming (SPP), Kentnisse von C++",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1013-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Gründung eines IT-Start-Up",
        "Modul Nr.": "20-00-1016",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1016-pr Gründung eines IT-Start-Up 0 Praktikum 4",
            "Lerninhalt": "Kennenlernen von Methoden zur Entwicklung und Umsetzung innovativer Geschäftsmodelle.Erlernen von Werkzeugen für die einzelnen Prozessschritte. Dabei werden Beispiele aus der Praxis vorgestellt und besprochen.Einüben der vorgestellten Methoden an einem selbstgewählten Beispiel. Präsentation der Ergebnisse nach jedem Teilschritt im Rahmen der Erarbeitung des Geschäftsmodells.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreichem Besuch dieser Veranstaltung haben die Studierenden die Grundlagen für die Erstellung eines Businessplans kennengelernt. Sie sind in der Lage die relevanten Fragestellungen bei der Erstellung von Businessplänen für innovative Geschäftsmodelle zu identifizieren und zu bearbeiten.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Software Engineering- Bachelor Praktikum",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1016-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Software Engineering- Bachelor Praktikum",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1016-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. Informatik",
            "Literatur": "Literaturhinweise werden in der Veranstaltung gegeben",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Cybersecurity Lab",
        "Modul Nr.": "20-00-1018",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1018-pr Cybersecurity Lab 0 Praktikum 4",
            "Lerninhalt": "In diesem Praktikum werden wir grundlegende als auch weiterführende Aspekte von Netzwerksicherheit erlernen. Wir werden die grundlegenden Protokolle, wie BGP und DNS, Infrastruktur Modelle, wie z.B. Router, Switches und Firewalls besprechen und wir werden ebenso die Anwendung von Sicherheit besprechen. Wir werden Attacks und Defences besprechen als auch demonstrieren. Jede/r Studierende/r wird ein spezifisches Thema, welches während des Semesters unter Anleitung zu bearbeiten ist, erhalten.",
            "Qualifikationsziele_Lernergebnisse": "Am Ende des Kurses werden die Studierenden gute Kenntnisse in Netzwerksicherheit, und speziell auf den Gebieten der durch sie bearbeitenden Projekte, erlangen. Die Note berechnet sich auf Grundlage der eingereichten Projekte.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Die Studierenden sollten einen Background in Netzwerk- und Operating Systems haben - diese sind vorausgesetzte Kurse.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1018-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Die Studierenden sollten einen Background in Netzwerk- und Operating Systems haben - diese sind vorausgesetzte Kurse.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1018-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Friedens-, Sicherheits- und Kriseninformatik",
        "Modul Nr.": "20-00-1020",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1020-pr Praktikum Friedens-, Sicherheits- und Kriseninformatik0 Praktikum 4",
            "Lerninhalt": "Das Praktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des Fachgebiets -Wissenschaft und Technik für Frieden und Sicherheit' (PEASEC). Neben einem generellen Überblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche Kompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen.Themen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und deren Ergebnisse angemessen zu präsentieren. Beispiele sind:- Anforderungserhebung und (empirische) Vorstudien- Konzeption und Implementierung innovativer Anwendungen- Evaluation und Weiterentwicklung bestehender Anwendungen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Grundlagen der Informatik/Funktionale und objektorientierte Programmierkonzepte",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1020-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Grundlagen der Informatik/Funktionale und objektorientierte Programmierkonzepte",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1020-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Reuter, C. (2018) Sicherheitskritische Mensch-Computer-Interaktion: Interaktive Technologien und Soziale Medien im Krisen- und Sicherheitsmanagement, 660 S., Wiesbaden: Springer Vieweg - im DruckAltmann, J., Bernhardt, U., Nixdorff, K., Ruhmann, I., & Wöhrle, D. (2016). Naturwissenschaft -Rüstung - Frieden - Basiswissen für die Friedensforschung (Vol. 49), Wiesbaden: Springer Vieweg.Weitere Literatur wird in der Veranstaltung je nach gewähltem Thema genannt.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Friedens- und Kriseninformatik",
        "Modul Nr.": "20-00-1027",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1027-ppProjektpraktikum Friedens-und Kriseninformatik0 Projekt 6",
            "Lerninhalt": "Das Projektpraktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des Fachgebiets -Wissenschaft und Technik für Frieden und Sicherheit' (PEASEC). Neben ei-nem generellen Überblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezi-elles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Ar-beitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche Kompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen. Projektmanagement und die Selbstorganisation im Team ist explizit Teil der Aufgabenstellung.Themen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und deren Ergebnisse angemessen zu präsentieren. Beispiele sind:- Anforderungserhebung und (empirische) Vorstudien- Konzeption und Implementierung innovativer Anwendungen- Evaluation und Weiterentwicklung bestehender Anwendungen",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1027-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1027-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "Reuter, C. (2018) Sicherheitskritische Mensch-Computer-Interaktion: Interaktive Technolo-gien und Soziale Medien im Krisen- und Sicherheitsmanagement, 660 S., Wiesbaden: Sprin-ger ViewegAltmann, J., Bernhardt, U., Nixdorff, K., Ruhmann, I., & Wöhrle, D. (2016). Naturwissen-schaft - Rüstung - Frieden - Basiswissen für die Friedensforschung (Vol. 49), Wiesbaden: Springer Vieweg.Weitere Literatur wird in der Veranstaltung je nach gewähltem Thema genannt.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Algorithmik",
        "Modul Nr.": "20-00-1029",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Distributed ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1029-ppProjektpraktikum Algorithmik 0 Projekt 6",
            "Lerninhalt": "Das Projektpraktikum behandelt die angewandte Softwareentwicklungin den Themenbereichen der Arbeitsgruppe Algorithmik. Ziel ist das eigenständige Bearbeiten eines Entwicklungsprojektes im Team.Lerninhalte:- Eigenständiges Bearbeiten eines Entwicklungsprojektes,- Projektplanung und Projektmanagement,- Recherche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen,- Konzipieren einer Softwarearchitektur,- prototypische Umsetzung auf der ausgewählten Zielplattform,- Evaluation des Gesamtsystems in Bezug auf verschiedene Gütemaße,- Dokumentation der erstellten Lösung.",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an der Veranstaltung besitzen die Studierenden die Fähigkeit,komplexe Problemstellungen im Themenbereich softwaretechnisch zu lösen.Die Studierenden können hierzu eigenständig ein Projekt definieren, verwalten unddurchführen. Die Studierenden haben Kenntnisse im Entwurf/der Umsetzungvon Algorithmen und Anwendungen erlangt. Sie sind inder Lage, die gewählten Algorithmen und ihre Anwendung zu implementieren, zu testen undderen Funktionsfähigkeit und Leistungsfähigkeit zu evaluieren, dieProjektplanung und -verwaltung sowie die erstellten Softwareartefakte verständlich zudokumentieren.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: FOP und AuD",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1029-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: FOP und AuD",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1029-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum zur Vorlesung Cryptocurrencies",
        "Modul Nr.": "20-00-1031",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1031-pr Praktikum zur Vorlesung Cryptocurrencies0 Praktikum 4",
            "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die die Vorlesung Cryptocurrencies besucht haben und einige Aspekte dieses Themenkomplexes eingehender verstehen und untersuchen wollen. Sie bietet eine Plattform, um neuartige Anwendungen basierend auf Blockchain Technologie auf ihre Umsetzbarkeit und Sinnhaftigkeit zu überprüfen.Komplexe kryptografische Systeme und Bausteine aus der Vorlesung Cryptocurrencies sollen dabei in Teamarbeit verstanden und in einem dezentralen System implementiert werden. Dabei wird die eigenständige Konzeption eines Projektes gefordert, was im Verlauf der Veranstaltung von den Studierenden geplant und umgesetzt werden soll.Die Studierenden erhalten dabei erste Erfahrungen mit der Umsetzung eines komplexeren Entwicklungsprojektes.",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und praktischen Implikaitonen von verteilten kryptographischen Systemen. Dazu gehören zum Beispiel erste Erfahrungen in den folgenden Bereichen:- Entwicklung von Smart Contracts und verteilten Applikationen- Kommunikation von Systemen durch dezentrale Peer-to-Peer Netze- Entwicklung von Software unter Benutzung kryptographischer Bausteine- Sicherheit und Anonymität von Nutzern von kryptographischen Währungen- Mögliche Angriffe auf Smart Contracts und Cryptocurrencies",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Dieser Kurs richtet sich an Studenten, die die Vorlesung Cryptocurrencies mit guten Noten abgeschlossen haben. Weiterhin sollten Programmierkenntnisse und ein Interesse an den Themen der Vorlesung vorhanden sein.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1031-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Dieser Kurs richtet sich an Studenten, die die Vorlesung Cryptocurrencies mit guten Noten abgeschlossen haben. Weiterhin sollten Programmierkenntnisse und ein Interesse an den Themen der Vorlesung vorhanden sein.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1031-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Automatische Textzusammenfassung",
        "Modul Nr.": "20-00-1037",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1037-pr Automatische Textzusammenfassung0 Praktikum 4",
            "Lerninhalt": "Die automatische Generierung von Zusammenfassungen aus einer Sammlung an Texten unterschiedlicher Art zu einem Thema ist ein aktuelles Forschungsgebiet, das beispielsweise an der TU-Darmstadt am Graduiertenkolleg Aiphes intensiv erforscht wird.Dabei kommen unterschiedliche Methoden zum Einsatz, die sowohl im maschinellen Lernen als auch in der natürlichen Sprachverarbeitung verankert sind.In diesem Praktikum erhalten die Studierenden die Möglichkeit, sich in Kleingruppen mit diesen Methoden vertraut zu machen, Erweiterungen und neue Methoden zu entwickeln und diese an einem realen Datensatz anzuwenden. Ein besonderer Schwerpunkt soll dabei auch auf die Evaluation der generierten Zusammenfassungen gelegt werden.",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden- kennen verschiedene Methoden zur automatischen Zusammenfassung von Texten, ihre Funktionsweisen und ihre Eigenschaften- können Methoden zur automatischen Zusammenfassung auf Texttypen verschiedener Art anwenden- können die Qualität einer generierten Zusammenfassung anhand verschiedener Kriterien beurteilen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Absolvierung einer Vorlesung in Maschinelles Lernen, Data Mining, oder natürliche Sprachverarbeitung. Praktische Erfahrung mit Data Mining oder NLP Werkzeugen sind hilfreich, können aber auch selbständig erarbeitet werden. Gute bis sehr gute Englischkenntnisse.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1037-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Absolvierung einer Vorlesung in Maschinelles Lernen, Data Mining, oder natürliche Sprachverarbeitung. Praktische Erfahrung mit Data Mining oder NLP Werkzeugen sind hilfreich, können aber auch selbständig erarbeitet werden. Gute bis sehr gute Englischkenntnisse.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1037-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Data Management - Praktikum",
        "Modul Nr.": "20-00-1041",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1041-pr Data Management - Praktikum 0 Praktikum 4",
            "Lerninhalt": "Die Teilnehmer lösen in kleinen Projektgruppen ein gegebenes Problem. Bei den Problemen handelt es sich um Programmierprojekte, die sich auf Fragestellungen aus aktuellen Forschungsthemen des Data Management Lab beziehen.Mögliche Themenbereiche sind:- Skalierbare Datenbanksysteme und moderne Hardware- Cloud Darenbanken und Blockchains- Interaktive Daten- und Textexploration- Natural Language Interfaces für Datenbanken- Skalierbare Systeme für Maschinelles LernenIn dieser Veranstaltung setzen Studenten ein ausgewähltes Projekt um. Im Vergleich zum Praktikum haben die Probleme des Projektpraktikum einen erweiterten Umfang.",
            "Qualifikationsziele_Lernergebnisse": "Nach Beendigung der Veranstaltung haben Studierende folgende Lernziele erreicht:- Vertieftes Verständnis von aktuellen Techniken für moderne Datenmanagement-Systeme- Anwendung und Implementierung der Techniken in individuellen Projekten- Evaluierung von möglichen Designalternativen mit Hilfe von Benchmarks bzw. realen Workloads",
            "Voraussetzung_fuer_die_Teilnahme": "Abhängig vom ausgewählten Thema.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1041-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Abhängig vom ausgewählten Thema.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1041-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Data Management - Projektpraktikum",
        "Modul Nr.": "20-00-1042",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Web, Wissens-und Informationsverarbeitung",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1042-pp Data Management -Projektpraktikum0 Projekt 6",
            "Lerninhalt": "Die Teilnehmer lösen in kleinen Projektgruppen ein gegebenes Problem. Bei den Problemen handelt es sich um Programmierprojekte, die sich auf Fragestellungen aus aktuellen Forschungsthemen des Data Management Lab beziehen.Mögliche Themenbereiche sind:- Skalierbare Datenbanksysteme und moderne Hardware- Cloud Darenbanken und Blockchains- Interaktive Daten- und Textexploration- Natural Language Interfaces für Datenbanken- Skalierbare Systeme für Maschinelles LernenIn dieser Veranstaltung setzen Studenten ein ausgewähltes Projekt um. Im Vergleich zum Praktikum haben die Probleme des Projektpraktikum einen erweiterten Umfang.",
            "Qualifikationsziele_Lernergebnisse": "Nach Beendigung der Veranstaltung haben Studierende folgende Lernziele erreicht:- Vertieftes Verständnis von aktuellen Techniken für moderne Datenmanagement-Systeme- Anwendung und Implementierung der Techniken in individuellen Projekten- Evaluierung von möglichen Designalternativen mit Hilfe von Benchmarks bzw. realen Workloads",
            "Voraussetzung_fuer_die_Teilnahme": "Abhängig vom ausgewählten Thema.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1042-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Abhängig vom ausgewählten Thema.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1042-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Anwendung von Reinforcement Learning Methoden",
        "Modul Nr.": "20-00-1048",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Visual & ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1048-pp Anwendung von Reinforcement Learning Methoden0 Projekt 6",
            "Lerninhalt": "In diesem Projekt lernen Studierende das experimentelle Arbeiten in einem interdisziplinären Team, und bekommen so Einblicke in das wissenschaftliche Arbeiten im Reinforcement Learning. Im Projekt entwickeln in einer Kleingruppen unter Anleitung ein gemeinsames Experiment im Reinforcement Learning basierend auf speziellen Plattformen (Cartpole, Furuta-Pendel, etc), werten dieses aus und schreiben einen Forschungsbericht/Paper.",
            "Qualifikationsziele_Lernergebnisse": "Praktische Einführung in das wissenschaftliche Arbeiten, Durchführung eines Experimentes von der Forschungsidee bis hin zur Veröffentlichung.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:Gleichzeitige Belegung der Vorlesung \"Reinforcement Learning: Von Grundlagen zu den Tiefen Ansätzen\" oder vorhergehende Belegung von \"Lernende Roboter.\"",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1048-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:Gleichzeitige Belegung der Vorlesung \"Reinforcement Learning: Von Grundlagen zu den Tiefen Ansätzen\" oder vorhergehende Belegung von \"Lernende Roboter.\"",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1048-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Softwareentwicklung zum Schutz der Privatsphäre",
        "Modul Nr.": "20-00-1053",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1053-pp Projektpraktikum Softwareentwicklung zum Schutz der Privatsphäre0 Projekt 6",
            "Lerninhalt": "In dieser Veranstaltung entwickeln die Studierenden systematisch eine beispielhafte Anwendung, ein Werkzeug, oder einen Demonstrator zum Schutz der Privatsphäre. Dies beinhaltet die Spezifikation der Anforderungen und des Designs, sowie eine Implementierung mit Tests, Evaluierung und Dokumentation.Wir bieten zwei Varianten dieser Veranstaltung an: PRIVDEV-M (Praktikum, 6 CP, 4 SWS) und PRIVDEV-L (Projektpraktikum, 9 CP, 6 SWS) mit komplexeren Themen und detailierteren Anforderungen an das Projektmanagement. Bitte stellen Sie sicher, dass Sie sich für die richtige Variante anmelden.Eine Liste möglicher Themen mit Bezug zu aktuellen Forschungsthemen des Fachgebiets ENCRYPTO, eine detailierte Beschreibung des Prozesses und weitere Informationen finden Sie unter https://encrypto.de/PRIVDEV.",
            "Qualifikationsziele_Lernergebnisse": "- Tieferes Verständnis warum Privatheit benötigt wird und wie sie sichergestellt werden kann- Mehr Erfahrung in Softwareentwicklung und Projektmanagement- Planung und Verfolgung eines Prozesses zur Enwicklung einer Privatsphäre-schützenden Anwendung oder Werkzeug: Anforderungen, Design, Implementierung, Test, Evaluierung und Dokumentation.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Grundwissen in angewandter Kryptographie ist erforderlich, z.B. durch erfolgreiches Bestehen der Veranstaltung \"Einführung in die Kryptographie\" und ideallerweise auch \"Kryptographische Protokolle (CRYPROT)\" und/oder \"Secure Computation\".- Sehr gute Programmierkenntnisse und zumindest Grundkenntnisse in der in der jeweiligen Themenbeschreibung angegebenen Programmiersprache sind erforderlich.- Eventuelle weitere Anforderungen sind in der jeweiligen Themenbeschreibung angegeben.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1053-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Grundwissen in angewandter Kryptographie ist erforderlich, z.B. durch erfolgreiches Bestehen der Veranstaltung \"Einführung in die Kryptographie\" und ideallerweise auch \"Kryptographische Protokolle (CRYPROT)\" und/oder \"Secure Computation\".- Sehr gute Programmierkenntnisse und zumindest Grundkenntnisse in der in der jeweiligen Themenbeschreibung angegebenen Programmiersprache sind erforderlich.- Eventuelle weitere Anforderungen sind in der jeweiligen Themenbeschreibung angegeben.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1053-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM. Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Softwareentwicklung zum Schutz der Privatsphäre",
        "Modul Nr.": "20-00-1054",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1054-pr Praktikum Softwareentwicklung zum Schutz der Privatsphäre0 Praktikum 4",
            "Lerninhalt": "In dieser Veranstaltung entwickeln die Studierenden systematisch eine beispielhafte Anwendung, ein Werkzeug, oder einen Demonstrator zum Schutz der Privatsphäre. Dies beinhaltet die Spezifikation der Anforderungen und des Designs, sowie eine Implementierung mit Tests, Evaluierung und Dokumentation.Wir bieten zwei Varianten dieser Veranstaltung an: PRIVDEV-M (Praktikum, 6 CP, 4 SWS) und PRIVDEV-L (Projektpraktikum, 9 CP, 6 SWS) mit komplexeren Themen und detailierteren Anforderungen an das Projektmanagement. Bitte stellen Sie sicher, dass Sie sich für die richtige Variante anmelden.Eine Liste möglicher Themen mit Bezug zu aktuellen Forschungsthemen des Fachgebiets ENCRYPTO, eine detailierte Beschreibung des Prozesses und weitere Informationen finden Sie unter https://encrypto.de/PRIVDEV.",
            "Qualifikationsziele_Lernergebnisse": "- Tieferes Verständnis warum Privatheit benötigt wird und wie sie sichergestellt werden kann- Mehr Erfahrung in Softwareentwicklung und Projektmanagement- Planung und Verfolgung eines Prozesses zur Enwicklung einer Privatsphäre-schützenden Anwendung oder Werkzeug: Anforderungen, Design, Implementierung, Test, Evaluierung und Dokumentation.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Grundwissen in angewandter Kryptographie ist erforderlich, z.B. durch erfolgreiches Bestehen der Veranstaltung \"Einführung in die Kryptographie\" und ideallerweise auch \"Kryptographische Protokolle (CRYPROT)\" und/oder \"Secure Computation\".- Sehr gute Programmierkenntnisse und zumindest Grundkenntnisse in der in der jeweiligen Themenbeschreibung angegebenen Programmiersprache sind erforderlich.- Eventuelle weitere Anforderungen sind in der jeweiligen Themenbeschreibung angegeben.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1054-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Grundwissen in angewandter Kryptographie ist erforderlich, z.B. durch erfolgreiches Bestehen der Veranstaltung \"Einführung in die Kryptographie\" und ideallerweise auch \"Kryptographische Protokolle (CRYPROT)\" und/oder \"Secure Computation\".- Sehr gute Programmierkenntnisse und zumindest Grundkenntnisse in der in der jeweiligen Themenbeschreibung angegebenen Programmiersprache sind erforderlich.- Eventuelle weitere Anforderungen sind in der jeweiligen Themenbeschreibung angegeben.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1054-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Security Engineering Lab",
        "Modul Nr.": "20-00-1056",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1056-pr Security Engineering Lab 0 Praktikum 4",
            "Lerninhalt": "Im Rahmen dieses Praktikums sollen Implementierungen zu Forschungszwecken mit den Schwerpunkten Kryptographie und Privatheit vorgenommen worden. Die angebotenen Praktika stammen aus den folgenden Bereichen:- IT-Sicherheit im autonomen Fahrzeug- Bahnsicherheit- Hardwaresicherheit (IoT)- Seitenkanalangriffe- Attestierung",
            "Qualifikationsziele_Lernergebnisse": "Ziel dieses Praktikums ist die Ausweitung von Programmierkentnissen sowie die Partizipation in Forschungsprojekten. Zusätzlich werden die Teilnehmer Wissen in den genannten Bereichen erlangen und erfahren den jeweils aktuellen Forschungsstand.",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1056-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1056-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "IoT- und Funkprotokolle in eingebetteten Systemen",
        "Modul Nr.": "20-00-1064",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1064-pr IoT- und Funkprotokolle in eingebetteten Systemen0 Praktikum 4",
            "Lerninhalt": "Im Rahmen des Praktikums lernen die Studierenden IoT- und Funkprotokolle kennen und führen eigenständig ein Projekt mit eingebetteter Hardware durch. Darüber hinaus werden auch Aspekte der IT-Sicherheit mitberücksichtigt.Der Fokus liegt auf Bluetooth LE, Bluetooth Mesh, LoRaWAN sowie die Kommunikation über OOB Kanäle. Abhängig vom gewählten Projekt-Thema werden Hardware (Mikrocontroller, FPGAs, RF-Transceiver, Software Defined Radio uvm.) sowie Laborumgebung (Logikanalysatoren, RF Analysatoren, Oszilloskope uvm.) zur Verfügung gestellt.",
            "Qualifikationsziele_Lernergebnisse": "Am Ende der Veranstaltung sind die Studierenden in der Lage, mit komplexen Spezifikationen von Funkprotokollen umzugehen und in die Praxis zu transferieren. Weiterhin wird der praktische Umgang mit eingebetteten Systemen und Laborequipment vermittelt.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen sind Vorkenntnisse in Computernetzwerken (Pflichtvorlesung \"Computer-Netzwerke und Verteilte Systeme) und in Eingebetteten Systemen (Pflichtvorlesungen Rechnerorganisation und/oder Datentechnik). Kenntnis der Programmiersprache C und Grundkenntnisse. der Elektrotechnik sind hilfreich, ebenso Kenntnisse aus einschlägigen Vorlesungen des Bereichs \"Netze und Verteilte Systeme\" wie TK3, Mobile Netze oder KN1.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1064-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)Bestehen der Prüfung (100%)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen sind Vorkenntnisse in Computernetzwerken (Pflichtvorlesung \"Computer-Netzwerke und Verteilte Systeme) und in Eingebetteten Systemen (Pflichtvorlesungen Rechnerorganisation und/oder Datentechnik). Kenntnis der Programmiersprache C und Grundkenntnisse. der Elektrotechnik sind hilfreich, ebenso Kenntnisse aus einschlägigen Vorlesungen des Bereichs \"Netze und Verteilte Systeme\" wie TK3, Mobile Netze oder KN1.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1064-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Verantwortung und Sicherheit in der Informatik",
        "Modul Nr.": "20-00-1072",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1072-pr Praktikum Verantwortung und Sicherheit in der Informatik0 Praktikum 4",
            "Lerninhalt": "Das Praktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des Fachgebiets -Wissenschaft und Technik für Frieden und Sicherheit' (PEASEC). Neben einem generellen Überblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter_innen und vermitteln technische und einleitende wissen-schaftliche Kompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen.Themen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und deren Er-gebnisse angemessen zu präsentieren. Beispiele sind:- Lösen einer Fragestellung im Bereich von Verantwortung und Sicherheit in der Informatik- Anforderungserhebung und (empirische) Vorstudien- Recherche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen- Entwurf, prototypische Implementierung oder Weiterentwicklung innovativer Anwendungen- Evaluation bestehender Anwendungen in Bezug auf verschiedene Gütemaße- Dokumentation der erstellten Lösung",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-Computer-Interaktion oder Friedens- und Konfliktforschung; Kenntnisse in der Softwareentwicklung und Programmierung",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1072-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-Computer-Interaktion oder Friedens- und Konfliktforschung; Kenntnisse in der Softwareentwicklung und Programmierung",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1072-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B. Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Interaktive resiliente Informationstechnik",
        "Modul Nr.": "20-00-1073",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1073-pp Projektpraktikum Interaktive resiliente Informationstechnik0 Projekt 6",
            "Lerninhalt": "Das Projektpraktikum beinhaltet Entwicklungsthemen aus der aktuellen Forschung des Fachgebiets -Wissen-schaft und Technik für Frieden und Sicherheit' (PEASEC). Neben einem generellen Überblick über aktuelle Themen wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter_innen und vermitteln technische und einleitende wissenschaftliche Kompetenzen. Die Bearbeitung erfolgt in kleinen Gruppen. Projektmanagement und die Selbstorganisation im Team ist explizit Teil der Aufgabenstellung.Themen für das aktuelle Semester finden Sie unter www.peasec.de/lehre",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit eine praktische Aufgabe ggf. im Team erfolgreich nach Vorgabe zu bearbeiten und deren Er-gebnisse angemessen zu präsentieren. Beispiele sind:- Lösen einer Fragestellung im Bereich der interaktiven resilienten Informationstechnik- Anforderungserhebung und (empirische) Vorstudien- Recherche von Lösungsalternativen und Abwägung von Vor-/Nachteilen der Alternativen- Entwurf, prototypische Implementierung oder Weiterentwicklung innovativer Anwendungen- Evaluation bestehender Anwendungen in Bezug auf verschiedene Gütemaße- Dokumentation der erstellten Lösung",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-Computer-Interaktion oder Friedens- und Konfliktforschung; Kenntnisse in der Softwareentwicklung und Programmierung",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1073-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Grundlagen in mindestens einem der Bereiche: Informatik, IT-Sicherheit, Mensch-Computer-Interaktion oder Friedens- und Konfliktforschung; Kenntnisse in der Softwareentwicklung und Programmierung",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1073-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Bug Hunting Praktikum",
        "Modul Nr.": "20-00-1083",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1083-pr Bug Hunting Praktikum 0 Praktikum 4",
            "Lerninhalt": "In diesem Praktikum beschäftigen sich die Studenten mit dem automatischen oder manuellen Aufdecken von Schwachstellen und Verwundbarkeiten in realen Open Source Softwareprojekten. Die Studenten lernen gängige Methoden zur Identifizierung von Angriffsflächen, Erstellung eines Angreifermodells und das Finden und Dokumentieren von Schwachstellen. Diese Schritte werden eigenständig in einem praktischen Teil von den Studenten umgesetzt. Folgende Themen und Tätigkeiten sind Teil des Praktikums: - Einarbeitung in Open Source Softwareprojekte aus Sicht eines Penetration Testers - Einarbeitung in gängige Tools zur Identifizierung von Angriffsflächen oder möglichen Schwachstellen - Praktisches Anwenden der gelernten Methoden zur Schwachstellenidentifikation - Dokumentation der Schwachstellen und Identifikation von Gegenmaßnahmen - Präsentation der Ergebnisse Weitere Informationen zum Ablauf: https://team-sik.org/bug-hunting-praktikum/",
            "Qualifikationsziele_Lernergebnisse": "Ein theoretischer Teil vermittelt den Studenten Methoden zur Schwachstellenidentifikation und Bedrohungsmodellierung von Softwareprojekten. In einem praktischen Teil sammeln die Studenten selbstständig Erfahrungen im Identifizieren von Schwachstellen. Die Studenten sind nach erfolgreichem Absolvieren des Praktikums in der Lage, selbstständig und strukturiert Sicherheitslücken in Softwareprojekten zu finden und zu dokumentieren. Die Studenten können nach dem Praktikum die Schwere und die Folgen von Sicherheitslücken einschätzen, sowie Gegenmaßnahmen benennen.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen:- Gute Teamfähigkeit - Interesse an Schwachstellenidentifikation, Programmanalyse und Exploitation - Gute Programmierkenntnisse - Linux Kenntnisse - Vollständige und korrekte Abgabe der Anmeldeaufgabe",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1083-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen:- Gute Teamfähigkeit - Interesse an Schwachstellenidentifikation, Programmanalyse und Exploitation - Gute Programmierkenntnisse - Linux Kenntnisse - Vollständige und korrekte Abgabe der Anmeldeaufgabe",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1083-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Seitenkanalanalyse",
        "Modul Nr.": "20-00-1090",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1090-pr Praktikum Seitenkanalanalyse 0 Praktikum 4",
            "Lerninhalt": "Seitenkanäle sind Kommunikationskanäle, die auf Ausführungsmerkmalen basieren, die nicht zur Kommunikation vorgesehen waren. Die zugrundeliegenden Ausführungsmerkmale können beispielsweise die Ausführungszeit, der Stromverbrauch und elektromagnetische Abstrahlung sein. Seitenkanäle sind seit vielen Jahren als ernste Bedrohung für kryptographische Implementierungen bekannt. Technologischer Fortschritt bringt üblicherweise neue Möglichkeiten für Seitenkanalangriffe mit sich. Beispielsweise hat das Internet of Things die Anzahl der möglichen Zielgeräte erhöht und die Bedrohung durch Seitenkanäle damit noch relevanter gemacht.Das Praktikum deckt die Schritte ab, die zur Ausführung von Seitenkanalangriffen gegen kryptographische Implementierungen, zur Extraktion von geheimen Informationen, sowie zur Verminderung solcher Schwachstellen benötigt werden. Beispielthemen sind:- Auswahl von Zielimplementierungen für Seitenkanalangriffe- Manipulation von Strom-, Zeit-, oder EM-Messkurven- Implementierung von Modellen fürSeitenkanalschwachstellen- Differential Side-Channel Analysis- Seitenkanalgegenmaßnahmen",
            "Qualifikationsziele_Lernergebnisse": "Nach erfolgreicher Teilnahme an diesem Praktikum, werden die Studierenden:- das Ausmaß der Gefahr durch Seitenkanalschwachstellen einschätzen können,- verstehen wie Seitenkanalangriffe funktionieren,- fähig sein, Seitenkanalangriffe gegen kryptographische Implementierungen auszuführen, um geheime Informationen zu extrahieren und- wissen, wie Seitenkanalangriffe abgewehrt werden können.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen werden Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1090-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen werden Informatikkenntnisse entsprechend der ersten vier Semester des Bachelorstudiengangs Informatik, insbesondere Programmierkenntnisse.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1090-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "BOOTS: Build your own tech startup",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "120 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1104-prBOOTS: Build your own tech startup0 Praktikum 4",
            "Lerninhalt": "Die Studierenden erhalten in der Veranstaltung einen umfassenden Überblick über die verschiedenen Aspekte von Unternehmensgründungen (Entrepreneurship). Im Rahmen der Blockveranstaltung wird ein praktisches Forum geboten, um Geschäftsmodelle im High-Tech Bereich zu fördern. Es wird eine Unternehmensgründung von der anfänglichen Idee bis zur Gründung eines realisierbaren Unternehmens durchgespielt.",
            "Qualifikationsziele_Lernergebnisse": "Nach Abschluss des Praktikums sind Studierende in der Lage- unternehmerischen Kompetenzen anzuwenden- einen strukturierten Geschäftsplan zu entwickeln- einen Demonstrators für ein High-Tech Produkt aufzubauen- ihre Idee (Pitch) zu präsentieren",
            "Voraussetzung_fuer_die_Teilnahme": "Programmierkenntnisse sind erwünscht",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1104-pr] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Programmierkenntnisse sind erwünscht",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1104-pr] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Expertenpraktikum im Robot Learning",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Robotik, ",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1108-ppExpertenpraktikum im Robot Learning0 Projekt 6",
            "Lerninhalt": "In diesem Projekt perfektionieren Studierende das experimentelle Arbeiten in einem interdisziplinären Team, und entwicklen sich zu Experten im wissenschaftliche Arbeiten im Robot Learning. Im Projekt entwickeln in einer Kleingruppen unter Anleitung ein gemeinsames Experiment im Robot Learning basierend auf speziellen Robotik-Plattformen, werten dieses aus und schreiben einen Forschungsbericht/Paper, welches die Qualität einer Einreichung bei einer internationalen wissenschaftlichen Konferenz oder Zeitschrift erreicht.",
            "Qualifikationsziele_Lernergebnisse": "Nachdem Studierende die Veranstaltung besucht haben, können sie die praktischen Fertigkeiten eines Experten im wissenschaftlichen Arbeiten im Roboter Lernen anwenden. Sie sind in der Lage, Experimente von der Forschungsidee bis hin zur Veröffentlichung zu analysieren und synthetisieren",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen wird die erfolgreiche Durchführung vonLernende Roboter: Integriertes Projekt - Teil 1 undLernende Roboter: Integriertes Projekt - Teil 2",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1108-pp] (Fachprüfung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen wird die erfolgreiche Durchführung vonLernende Roboter: Integriertes Projekt - Teil 1 undLernende Roboter: Integriertes Projekt - Teil 2",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1108-pp] (Fachprüfung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Blockchain Projektpraktikum",
        "Modul Nr.": "20-00-",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen IT-Sicherheit",
        "kurs": {
            "Kurse_des_Moduls": "20-00-1119-ppBlockchain Projektpraktikum 0 Projekt 6",
            "Lerninhalt": "Diese Veranstaltung richtet sich an Studierende, die die Vorlesung Cryptocurrencies besucht oder sich anderweitig mit Blockchain-Technologien beschäftigt haben und einige Aspekte dieses Themenkomplexes eingehender verstehen und untersuchen wollen. Sie bietet eine Plattform, um neuartige Anwendungen basierend auf Blockchain Technologie auf ihre Umsetzbarkeit und Sinnhaftigkeit zu überprüfen.Nach einer Einführung zu den Themen Blockchain Konzepte, Projektmanagement und Blockchain Development, sollen komplexe kryptographische Systeme und Bausteine aus dem Bereich Kryptowährung und Blockchain in Teamarbeit verstanden und in einem dezentralen System implementiert werden. Dabei wird die eigenständige Konzeption eines Projektes gefordert, das im Verlauf der Veranstaltung von den Studierenden geplant und umgesetzt werden soll.Die Studierenden erhalten in diesem Praktikum erste Erfahrungen mit der Umsetzung eines komplexeren Entwicklungsprojektes.Im Rahmen des Projektpraktikums erarbeiten die Studierenden weiter fortgeschrittene Konzepte im Bereich Blockchain und Blockchain Entwicklung, wie beispielsweise Performance- und Sicherheitsaspekte, präsentieren diese in der Gruppe und integrieren sie in ihre Anwendung.",
            "Qualifikationsziele_Lernergebnisse": "Studierende verstehen nach erfolgreichem Besuch der Veranstaltung die technischen und praktischen Implikationen von verteilten kryptographischen Systemen. Dazu gehören zum Beispiel erste Erfahrungen in den folgenden Bereichen:- Entwicklung von Smart Contracts und verteilten Applikationen- Kommunikation von Systemen durch dezentrale Peer-to-Peer Netze- Entwicklung von Software unter Nutzung kryptographischer Bausteine- Sicherheit und Anonymität von Nutzern von kryptographischen Währungen- Mögliche Angriffe auf Smart Contracts und Cryptocurrencies",
            "Voraussetzung_fuer_die_Teilnahme": "Dieser Kurs richtet sich an Studierende mit Interesse und Grundkenntnissen im Bereich Blockchain. Weiterhin sollten gute Programmierkenntnisse, Begeisterung für innovative Ideen und Interesse am strukturierten Bearbeiten komplexer Entwicklungsprojekte vorhanden sein.",
            "Pruefungsform": "Bausteinbegleitende Prüfung:- [20-00-1119-pp] (Studienleistung, mündliche / schriftliche Prüfung, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Dieser Kurs richtet sich an Studierende mit Interesse und Grundkenntnissen im Bereich Blockchain. Weiterhin sollten gute Programmierkenntnisse, Begeisterung für innovative Ideen und Interesse am strukturierten Bearbeiten komplexer Entwicklungsprojekte vorhanden sein.",
            "Benotung": "Bausteinbegleitende Prüfung: - [20-00-1119-pp] (Studienleistung, mündliche / schriftliche Prüfung, Gewichtung: 100%, Standard)",
            "Verwendbarkeit_des_Moduls": "B.Sc. InformatikM.Sc. InformatikKann in anderen Studiengängen verwendet werden.",
            "Literatur": "",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Multimedia Kommunikation I",
        "Modul Nr.": "18-sm-1020",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "45 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-1020-prPraktikum Multimedia Kommunikation I3 Praktikum 3",
            "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der Multimedia Kommunikationssysteme. Neben einem generellen Überblick wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete:- Netzwerk und Verkehrsplanung und Analyse- Leistungsbewertung von Netzwerk-Anwendungen- Diskrete Event-basierten Simulation von Netzdiensten- Protokolle für mobile Ad hoc Netze / Sensor Netze- Infrastrukturnetze zur Mobilkommunikation / Mesh-Netze- Kontext-abhängige/bezogene Kommunikation und Dienste- Peer-to-Peer Systeme und Architekturen- Verteil-/ und Managementsysteme für Multimedia-/e-Learning-Inhalte- Multimedia Authoring- und Re-Authoring Werkzeuge- Web Service Technologien und Service-orientierte Architekturen- Anwendungen für Verteilte Geschäftsprozesse- Ressourcen-basiertes Lernen",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit einfache Probleme im Bereich der Multimedia Kommunikation lösen zu können. Erworbene Kompetenzen sind unter anderem:- Design einfacher Kommunikationsanwendungen und Protokolle- Implementierung und Testen von Software Komponenten für Verteilten Systeme- Anwendung von Objekt-Orientierten Analyse und Design Techniken- Präsentation von Projektfortschritten und -ergebnissen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Das Interesse grundlegenden Themen aktueller Kommunikations- und Multimedia Technologien zu erkunden. Außerdem erwarten wir:- Erfahrungen in der Programmierung mit Java/C# (C/C++)- Kenntnisse in Computer Kommunikationsnetzen. Die Vorlesungen Kommunikationsnetze I und/oder Computer-Netzwerke und verteilte Systeme werden empfohlen.",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Das Interesse grundlegenden Themen aktueller Kommunikations- und Multimedia Technologien zu erkunden. Außerdem erwarten wir:- Erfahrungen in der Programmierung mit Java/C# (C/C++)- Kenntnisse in Computer Kommunikationsnetzen. Die Vorlesungen Kommunikationsnetze I und/oder Computer-Netzwerke und verteilte Systeme werden empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "BSc ETiT, BSc/MSc iST, MSc MEC, Wi-CS, Wi-ETiT, BSc/MSc CS",
            "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen. Als Ergänzung wird die Lektüre ausgewählte Kapitel aus folgenden Büchern empfohlen:- Andrew Tanenbaum: \"Computer Networks\". Prentice Hall PTR (ISBN 0130384887)- Christian Ullenboom: \"Java ist auch eine Insel: Programmieren mit der Java Standard Edition Version 5 / 6\" (ISBN-13: 978-3898428385)- Kent Beck: \"Extreme Programming Explained - Embrace Changes\" (ISBN-13: 978-0321278654)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Praktikum Multimedia Kommunikation II",
        "Modul Nr.": "18-sm-2070",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "135 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2070-prPraktikum Multimedia Kommunikation II6 Praktikum 3",
            "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der Multimedia Kommunikationssysteme. Neben einem generellen Überblick wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete:- Netzwerk und Verkehrsplanung und Analyse- Leistungsbewertung von Netzwerk-Anwendungen- Diskrete Event-basierte Simulation von Netzdiensten- Protokolle für mobile Ad hoc Netze / Sensor Netze- Infrastruktur Netze zur Mobilkommunikation / Mesh- Netze- Kontext-abhängige/bezogene Kommunikation und Dienste- Peer-to-Peer Systeme und Architekturen- Verteil-/ und Managementsysteme für Multimedia-/e-Learning-Inhalte- Multimedia Authoring- und Re-Authoring Werkzeuge- Web Service Technologien und Service-orientierte Architekturen- Anwendungen für Verteilte Geschäftsprozesse",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit selbständig Probleme im Bereich des Design und der Entwicklung von Kommunikationsnetzen und -anwendungen für Multimediasysteme zu lösen und zu evaluieren soll erworben werden. Erworbene Kompetenzen sind unter anderem:- Design komplexer Kommunikationsanwendungen und Protokolle- Implementierung und Testen von Software Komponenten für Verteilte Systeme- Anwendung von Objekt-Orientierten Analyse- und Design-Techniken- Erlernen von Projekt-Management Techniken für Entwicklung in kleinen Teams- Schreiben von Software-Dokumentation und Projekt-Berichten- Präsentation von Projektfortschritten und -ergebnissen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Das Interesse sich mit herausfordernden Themen der aktuellen Technologien und der Forschung auseinanderzusetzen. Außerdem erwarten wir:- Solide Erfahrungen in der Programmierung mit Java und/oder C# (C/C++)- Solide Kenntnisse von Objekt-Orientierter Analyse und Design Techniken- Solide Kenntnisse in Computer Kommunikationsnetzen werden empfohlen- Die Vorlesungen in Kommunikationsnetze I (II, III, oder IV) sind von Vorteil",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Das Interesse sich mit herausfordernden Themen der aktuellen Technologien und der Forschung auseinanderzusetzen. Außerdem erwarten wir:- Solide Erfahrungen in der Programmierung mit Java und/oder C# (C/C++)- Solide Kenntnisse von Objekt-Orientierter Analyse und Design Techniken- Solide Kenntnisse in Computer Kommunikationsnetzen werden empfohlen- Die Vorlesungen in Kommunikationsnetze I (II, III, oder IV) sind von Vorteil",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "MSc ETiT, MSc iCE, BSc/MSc iST, Wi-ETiT, BSc/MSc CS, Wi-CS,",
            "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen. Als Ergänzung wird die Lektüre ausgewählter Kapitel aus folgenden Büchern empfohlen:- Andrew Tanenbaum: \"Computer Networks\". Prentice Hall PTR (ISBN 0130384887)- Christian Ullenboom: \"Java ist auch eine Insel: Programmieren mit der Java Standard Edition Version 5 / 6\" (ISBN-13: 978-3898428385)- Joshua Bloch: \"Effective Java Programming Language Guide\" (ISBN-13: 978- 0201310054)- Erich Gamma, Richard Helm, Ralph E. Johnson: \"Design Patterns: Objects of Reusable Object Oriented Software\" (ISBN 0-201-63361-2)- Kent Beck: \"Extreme Programming Explained - Embrace Changes\" (ISBN-13: 978-0321278654)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektpraktikum Multimedia Kommunikation II",
        "Modul Nr.": "18-sm-2130",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "180 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch und Englisch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Netze und ",
        "kurs": {
            "Kurse_des_Moduls": "18-sm-2130-prProjektpraktikum Multimedia Kommunikation II9 Projektpraktikum 6",
            "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der Multimedia Kommunikationssysteme. Neben einem generellen Überblick wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete:- Netzwerk und Verkehrsplanung und Analyse- Leistungsbewertung von Netzwerk-Anwendungen- Diskrete Event-basierte Simulation von Netzdiensten- Protokolle für mobile Ad hoc Netze / Sensor Netze- Infrastruktur Netze zur Mobilkommunikation / Mesh-Netze- Kontext-abhängige/bezogene Kommunikation und Dienste- Peer-to-Peer Systeme und Architekturen- Verteil-/ und Managementsysteme für Multimedia-/e-Learning-Inhalte- Multimedia Authoring- und Re-Authoring Werkzeuge- Web Service Technologien und Service-orientierte Architekturen- Anwendungen für Verteilte Geschäftsprozesse- Ressourcen-basiertes Lernen",
            "Qualifikationsziele_Lernergebnisse": "Die Fähigkeit selbständig technische und wissenschaftliche Probleme im Bereich des Design und der Entwicklung von Kommunikationsnetzen und -anwendungen für Multimediasysteme mit wissenschaftlichen Methoden zu lösen und zu evaluieren soll erworben werden. Erworbene Kompetenzen sind unter anderem:- Suchen und Lesen von Projekt relevanter Literatur- Design komplexer Kommunikationsanwendungen und Protokolle- Implementierung und Testen von Software Komponenten für Verteilte Systeme- Anwendung von Objekt-Orientierten Analyse- und Design-Techniken- Erlernen von Projekt-Management Techniken für Entwicklung in kleinen Teams- Systematische Evaluation und Analyse von wissenschaftlichen/technischen Experimenten- Schreiben von Software-Dokumentation und Projekt-Berichten- Präsentation von Projektfortschritten und -ergebnissen",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Das Interesse herausfordernde Lösungen und Anwendungen in aktuellen Multimedia Kommunikationssystemen zu entwickeln und unter Verwendung wissenschaftlicher Methoden zu erforschen. Außerdem erwarten wir:- Solide Erfahrungen in der Programmierung mit Java und&#47;oder C# (C&#47;C++).- Solide Kenntnisse von Objekt-Orientierten Analyse- und Design-Techniken.- Grundkenntnisse in Design Patterns, Refactorings, und Projekt Management.- Solide Kenntnisse in Computer Kommunikationsnetzen werden empfohlen.- Die Vorlesungen -Kommunikationsnetze I' und -Kommunikationsnetze II' werden empfohlen.",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Das Interesse herausfordernde Lösungen und Anwendungen in aktuellen Multimedia Kommunikationssystemen zu entwickeln und unter Verwendung wissenschaftlicher Methoden zu erforschen. Außerdem erwarten wir:- Solide Erfahrungen in der Programmierung mit Java und&#47;oder C# (C&#47;C++).- Solide Kenntnisse von Objekt-Orientierten Analyse- und Design-Techniken.- Grundkenntnisse in Design Patterns, Refactorings, und Projekt Management.- Solide Kenntnisse in Computer Kommunikationsnetzen werden empfohlen.- Die Vorlesungen -Kommunikationsnetze I' und -Kommunikationsnetze II' werden empfohlen.",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "MSc Wi-ETiT, BSc/MSc CS, MSc Wi-CS, MSc ETiT, MSc iST",
            "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen. Als Ergänzung wird die Lektüre ausgewählter Kapitel aus folgenden Büchern empfohlen:- Andrew Tanenbaum: \"Computer Networks\". Prentice Hall PTR (ISBN 0130384887)- Raj Jain: \"The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling\" (ISBN 0-471-50336-3)- Joshua Bloch: \"Effective Java Programming Language Guide\" (ISBN-13: 978-0201310054)- Erich Gamma, Richard Helm, Ralph E. Johnson: \"Design Patterns: Objects of Reusable Object Oriented Software\" (ISBN 0-201-63361-2)- Martin Fowler: \"Refactorings - Improving the Design of Existing Code\" (ISBN-13: 978-0201485677)- Kent Beck: \"Extreme Programming Explained - Embrace Changes\" (ISBN-13: 978-0321278654)",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "C/C++ Programmierpraktikum",
        "Modul Nr.": "18-su-1030",
        "Kreditpunkte": "3 CP",
        "Arbeitsaufwand": "90 h",
        "Selbststudium": "45 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "i.d.R. jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme und formale Grundlagen",
        "kurs": {
            "Kurse_des_Moduls": "18-su-1030-prC/C++ Programmierpraktikum 3 Praktikum 3",
            "Lerninhalt": "Die sechs Praktikumstage werden in zwei Abschnitte unterteilt.In den ersten vier Tagen des Praktikums werden durch praktische Aufgaben und Vorträge die Grundkonzepte der Programmiersprachen C und C++ vermittelt. Sämtliche Aspekte werden durch ausgedehnte praktische Arbeiten unter Aufsicht am Rechner vertieft. Aufbauend auf den grundlegenden Sprachkonstrukten werden manuelle Speicherverwaltung und dynamische Datenstrukturen, sowohl unter prozeduralen als auch unter objektorientierten Aspekten, behandelt. Der objektorientierte Ansatz wird ausgedehnt behandelt durch Mehrfachvererbung, Polymorphie und parametrische Poylmorphie.In den letzten beiden Tagen des Praktikums geht es um die Programmierung eines Mikrokontrollers in der Programmiersprache C inklusive der Programmierung einer verteilten Anwendung (via CAN-Bus) oder der Ansteuerung von Sensoren und Aktuatoren. ",
            "Qualifikationsziele_Lernergebnisse": "Die Studenten erwerben während des Praktikums Kenntnisse der grundlegenden Sprachkonstrukte von C++ (einschließlich der Untermenge C). Dabei wird sowohl der prozedurale als auch der objektorientierte Charakter der Sprache betont sowie besonderer Wert auf das Erlernen von Konzepten der hardwarenahe Programmierung gelegt. Es wird ein Gespür für die Gefahren im Umgang mit der Sprache insbesondere bei der Entwicklung eingebetteter Systemsoftware vermittelt und es werden geeignete Lösungen zu ihrer Vermeidung verinnerlicht.",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlen: Java-Kenntnisse",
            "Pruefungsform": "Studienleistung",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlen: Java-Kenntnisse",
            "Benotung": "Standard",
            "Verwendbarkeit_des_Moduls": "",
            "Literatur": "www.es.tu-darmstadt.de/lehre/cpp",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektseminar Softwaresysteme",
        "Modul Nr.": "18-su-1060",
        "Kreditpunkte": "9 CP",
        "Arbeitsaufwand": "270 h",
        "Selbststudium": "210 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "18-su-1060-pj Projektseminar Softwaresysteme0 Projektseminar4",
            "Lerninhalt": "Der Kurs bearbeitet aktuelle Entwicklungsthemen aus dem Bereich der modellbasierten bzw. objekt-orientierten Softwareentwicklung. Neben einem generellen Überblick wird ein tiefgehender Einblick in ein spezielles Entwicklungsgebiet vermittelt. Die Themen bestimmen sich aus den spezifischen Arbeitsgebieten der Mitarbeiter und vermitteln technische und einleitende wissenschaftliche Kompetenzen in einem oder mehreren der folgenden Gebiete:- Modellierung und Modellsynchronisierung- Modelltransformation- Objekt-orientierte Refaktorisierung- Programmvariabilität (Software Product Lines)- Analyse von Feature-ModellenZusätzliche Informationen und Themenbeschreibung für das aktuelle Semester: [url]http://www.es.tu-darmstadt.de/lehre/aktuelle-veranstaltungen/projektseminar-softwaresysteme/[/url]",
            "Qualifikationsziele_Lernergebnisse": "Der Studierende soll praktische Erfahrung in der (Weiter-)Entwicklung eines komplexeren Softwaresystems sammeln. Dabei lernt er in Teamarbeit eine umfangreiche Aufgabe zu bewältigen. Darüber hinaus wird geübt, in der Gruppe vorhandenes theoretisches Wissen (aus anderen Lehrveranstaltungen wie insbesondere Software-Engineering - Einführung) gezielt zur Lösung der praktischen Aufgabe einzusetzen.Studenten, die an diesem Projektseminar erfolgreich teilgenommen haben, sind in der Lage zu einer vorgegebenen Problemstellung ein größeres Softwareprojekt eigenständig zu organisieren und auszuführen. Die Teilnehmer erwerben folgende Fähigkeiten im Detail:- Realistische Zeitplanung und Resourceneinteilung (Projektmanagement)- Umfangreicherer Einsatz von Werkzeugen zur Versions-, Konfiguration- und Änderungsverwaltung- Einsatz von -CASE-Tools' für die modellbasierte Entwicklung- Planung und Durchführung von Qualtitätssicherungsmaßnahmen",
            "Voraussetzung_fuer_die_Teilnahme": "Verpflichtend: Grundlegende Softwaretechnik-Kenntnisse sowie vertiefte Kenntnisse objektorientierter Programmiersprachen",
            "Pruefungsform": "Modulabschlussprüfung:- Modulprüfung (Studienleistung, fakultativ, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Verpflichtend: Grundlegende Softwaretechnik-Kenntnisse sowie vertiefte Kenntnisse objektorientierter Programmiersprachen",
            "Benotung": "Modulabschlussprüfung: - Modulprüfung (Studienleistung, fakultativ, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "BSc ETiT, MSc ETiT, BSc iST",
            "Literatur": "Die Literatur besteht aus einer Auswahl an Fachartikeln zu den einzelnen Themen.",
            "Kommentar": ""
        }
    },
    {
        "Modulname": "Projektseminar Autonomes Fahren I",
        "Modul Nr.": "18-su-2070",
        "Kreditpunkte": "6 CP",
        "Arbeitsaufwand": "180 h",
        "Selbststudium": "135 h",
        "Moduldauer": "1 Semester",
        "Angebotsturnus": "Jedes 2. Semester",
        "Sprache": "Deutsch",
        "Modulverantwortliche Person": "Koordinatoren/Koordinatorinnen Software-Systeme ",
        "kurs": {
            "Kurse_des_Moduls": "18-su-2070-pj Projektseminar Autonomes Fahren I0 Projektseminar3",
            "Lerninhalt": "- Praktische Programmiererfahrung mit C++ bei der Entwicklung eingebetteter Systemsoftware aus dem Bereich des autonomen Fahrens anhand eines Modellautos- Anwenden von Regelungs- und Steuerungsmethoden aus dem Bereich des autonomen Fahrens- Einsatz von Software-Engineering-Techniken (Design, Dokumentation, Test, \u2026) eines nicht trivialen eingebetteten Software-Systems mit harten Echtzeit-Anforderungen und beschränkten Ressourcen (Speicher, \u2026)- Nutzung eines vorgegebenen Software-Rahmenwerks und Anwendung von weiteren Bibliotheken inklusive eines modular aufgebauten (Echtzeit-)Betriebssystems- Einsatz von Source-Code-Management-Systemen, Zeiterfassungswerkzeugen und sonstigen Projektmanagement-Tools- Präsentation von Projektergebnissen im Rahmen von Vorträgen",
            "Qualifikationsziele_Lernergebnisse": "Studierende sammeln im Rahmen dieses Projektseminars praktische Erfahrung in der Software-Entwicklung für eingebettete Systeme aus dem Bereich des autonomen Fahrens anhand eines Modellautos. Dabei lernen sie in Teamarbeit eine umfangreiche Aufgabe zu bewältigen. Zur Lösung dieser Aufgabe wird geübt, dass in der Gruppe vorhandene theoretische Wissen (aus anderen Lehrveranstaltungen wie Echtzeitsysteme, Software-Engineering - Einführung, C++ Praktikum, Digitale Regelungssysteme) gezielt zur Lösung der praktischen Aufgabe einzusetzen.Studierende, die an diesem Projektseminar erfolgreich teilgenommen haben, sind in der Lage, zu einer vorgegebenen Problemstellung ein größeres Softwareprojekt in einem interdisziplinären Team eigenständig zu organisieren und auszuführen. Die Teilnehmer erwerben folgende Fähigkeiten im Detail:- Eigenständiges Einarbeiten in ein vorgegebenes Rahmenwerk und vorgefertigten Bibliotheken- Umsetzung von theoretischem Wissen in ein Softwaresystem- Umfangreicher Einsatz von Werkzeugen zur Versions-, Konfiguration- und Änderungsverwaltung- Realistische Zeitplanung und Ressourceneinteilung (Projektmanagement)- Entwicklung von Hardware-/Software-Systemen mit C++ unter Berücksichtigung wichtiger Einschränkungen eingebetteter Systeme- Planung und Durchführung umfangreicherer Qualitätssicherungsmaßnahmen- Zusammenarbeit und Kommunikation in und zwischen mehreren Teams",
            "Voraussetzung_fuer_die_Teilnahme": "Empfohlene Voraussetzungen sind:- ETiT, WI-ETiT (DT), iST, Informatik: Grundlegende Softwaretechnik-Kenntnisse sowie vertiefte Kenntnisse objektorientierter Programmiersprachen (insbesondere: C++)Zusätzlich erwünscht:- Grundlagen der Entwicklung von Echtzeitsystemen oder der Bildverarbeitung- ETiT, WI-ETiT (AUT), MEC: Grundlagen der Regelungstechnik, Reglerentwurf im Zustandsraum, ggf. Grundlagen der digitalen Regelung",
            "Pruefungsform": "Modulabschlussprüfung:- Modulprüfung (Studienleistung, mündliche Prüfung, Dauer 30 Min, Standard)",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "Empfohlene Voraussetzungen sind:- ETiT, WI-ETiT (DT), iST, Informatik: Grundlegende Softwaretechnik-Kenntnisse sowie vertiefte Kenntnisse objektorientierter Programmiersprachen (insbesondere: C++)Zusätzlich erwünscht:- Grundlagen der Entwicklung von Echtzeitsystemen oder der Bildverarbeitung- ETiT, WI-ETiT (AUT), MEC: Grundlagen der Regelungstechnik, Reglerentwurf im Zustandsraum, ggf. Grundlagen der digitalen Regelung",
            "Benotung": "Modulabschlussprüfung: - Modulprüfung (Studienleistung, mündliche Prüfung, Gewichtung: 100%)",
            "Verwendbarkeit_des_Moduls": "MSc ETiT, BSc iST",
            "Literatur": "https://www.es.tu-darmstadt.de/lehre/aktuelle-veranstaltungen/ps-af-i/ und Moodle",
            "Kommentar": "ModulhandbuchB. Sc./M. Sc. InformatikBachelorarbeit/Masterarbeit"
        }
    },
    {
        "Modulname": "Bachelorarbeit Informatik",
        "Modul Nr.": "20-AM-4000",
        "Kreditpunkte": "12 CP",
        "Arbeitsaufwand": "360 h",
        "Selbststudium": "360 h",
        "Moduldauer": "Jedes Semester",
        "Sprache": "Deutsch/Englisch",
        "Modulverantwortliche Person": "Studiendekan/Studiendekanin",
        "kurs": {
            "Kurse_des_Moduls": "",
            "Lerninhalt": "Selbständige Bearbeitung einer wissenschaftlichen Fragestellung der Informatik nach wissenschaftlichen Grundsätzen unter Anleitung in begrenzter Zeit. Die Problemstellung, Vorgehensweise sowie die Ergebnisse werden schriftlich dokumentiert und mündlich in einem Kolloquium präsentiert.",
            "Qualifikationsziele_Lernergebnisse": "Die Studierenden sind nach der Bachelorarbeit in der Lage, - eine wissenschaftliche Fragestellung nach wissenschaftlichen Grundsätzen selbstständig zu bearbeiten. - die im Studium erworbenen Kenntnisse, Methoden und Kompetenzen anzuwenden. - die relevante Literatur zu recherchieren, einzugrenzen und auszuwerten. - das Thema sinnvoll zu systematisieren und einen Argumentationsstrang aufzubauen. - die Validität von Pro- und Kontraargumenten nachvollziehbar abzuwägen. - die Ergebnisse schriftlich nach wissenschaftlichen Grundsätzen niederzulegen. - die Ergebnisse zu präsentieren und argumentativ zu vertreten. ",
            "Voraussetzung_fuer_die_Teilnahme": "",
            "Pruefungsform": "schriftliche Arbeit und ein mündliches Kolloquium",
            "Voraussetzung_fuer_die_Vergabe_von_Kreditpunkten": "",
            "Benotung": "Die schriftliche Arbeit geht mit 85% und das Kolloquium mit 15% in die Note für die Bachelorarbeit ein.",
            "Verwendbarkeit_des_Moduls": "B.Sc. Informatik",
            "Literatur": "- Balzert, Helmut; Schäfer, Christian; Schröder, Marion: Wissenschaftliches Arbeiten -Wissenschaft, Quellen, Artefakte, Organisation, Präsentation. W3L-Verlag; Auflage: 2, 2011- Sandberg, Berit: Wissenschaftlich Arbeiten von Abbildung bis Zitat: Lehr- und Übungsbuchfür Bachelor, Master und Promotion. De Gruyter Oldenbourg; Auflage: 2, 2013",
            "Kommentar": "Die Abschlussarbeit muss innerhalb von 26 Wochen angefertigt und eingereicht werden. Sie hat einen Arbeitsaufwand von 360 Stunden. Ein Studium in Regelstudienzeit setzt voraus, dass bei Beginn der Bachelorarbeit im 6-ten Semester bei voller Ausschöpfung der Bearbeitungszeit von 26 Wochen nicht später als Anfang Februar begonnen werden muss."
        }
    }
]